(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    375190,       6730]
NotebookOptionsPosition[    370354,       6646]
NotebookOutlinePosition[    370776,       6663]
CellTagsIndexPosition[    370733,       6660]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"KEYWORD", "=", "\"\<bird\>\""}]], "Input",
 CellChangeTimes->{{3.960384894752955*^9, 3.960384897658337*^9}, {
  3.960453619250121*^9, 3.960453622249157*^9}, {3.960453669578968*^9, 
  3.960453670273247*^9}, {3.9604537616596117`*^9, 3.960453776469816*^9}, {
  3.960453879161826*^9, 3.960453880275495*^9}, {3.960454421265368*^9, 
  3.960454421584738*^9}},
 CellLabel->
  "In[596]:=",ExpressionUUID->"71a8a7db-65c1-400b-bb0d-43614bf3e90d"],

Cell[BoxData["\<\"bird\"\>"], "Output",
 CellChangeTimes->{
  3.9603848984284163`*^9, {3.960386028936759*^9, 3.960386036798881*^9}, 
   3.9603881203101597`*^9, 3.960397588266868*^9, {3.960413483854045*^9, 
   3.960413489468666*^9}, 3.960416548697721*^9, 3.960418220885253*^9, 
   3.960450452557638*^9, 3.9604517310322027`*^9, 3.960453622524246*^9, 
   3.960453670531106*^9, {3.960453762025331*^9, 3.9604537766398563`*^9}, {
   3.9604538795448627`*^9, 3.960453880759202*^9}, 3.960454421707838*^9},
 CellLabel->
  "Out[596]=",ExpressionUUID->"47469e69-30fd-4176-9a97-fc09863595bd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawTranslations", " ", "=", " ", 
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", "->", 
       RowBox[{"First", "[", "#2", "]"}]}], "&"}], ",", 
     RowBox[{"WordTranslation", "[", 
      RowBox[{"KEYWORD", ",", " ", "All"}], "]"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.960069316416398*^9, 3.960069321616056*^9}, {
  3.96006938608705*^9, 3.960069461730592*^9}, {3.960069499133286*^9, 
  3.960069500455065*^9}, {3.96006954171968*^9, 3.960069553058988*^9}, {
  3.960105082663083*^9, 3.960105083135532*^9}, {3.960239778620843*^9, 
  3.9602397806037292`*^9}, {3.9602398149686117`*^9, 3.960239815599966*^9}, {
  3.9603839989072742`*^9, 3.960383999071751*^9}, {3.9603840825987263`*^9, 
  3.9603841113494663`*^9}, {3.960384900324033*^9, 3.960384902174946*^9}},
 CellLabel->
  "In[597]:=",ExpressionUUID->"6bd7b21e-ea75-4eca-97b9-00313a218a32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Iconize", "[", "rawTranslations", "]"}]], "Input",
 CellChangeTimes->{{3.960069523949654*^9, 3.960069525116569*^9}, 
   3.960069556699833*^9, {3.960384605643845*^9, 3.960384607198202*^9}},
 CellLabel->
  "In[598]:=",ExpressionUUID->"5a60049f-0bd5-4ab3-8e5a-cada07e75e60"],

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Typeset`open = False}, 
   TemplateBox[{"List", "ListIcon", 
     GridBox[{{
        RowBox[{
          TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox["List", "IconizedItem"]}]}, {
        RowBox[{
          TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox["180", "IconizedItem"]}]}, {
        RowBox[{
          TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox["42888", "IconizedItem"]}]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
     Dynamic[Typeset`open]},
    "IconizedObject"]],
  {Entity["Language", "ChineseMandarin::279r4"] -> "\:9ce5", 
   Entity["Language", "Hindi::9858j"] -> "\:092a\:0915\:094d\:0937\:0940", 
   Entity["Language", "Spanish::77gfp"] -> "p\[AAcute]jaro", 
   Entity["Language", "Russian::36x4m"] -> "\:043f\:0442\:0438\:0446\:0430", 
   Entity["Language", "Indonesian::473fb"] -> "burung", 
   Entity["Language", "Portuguese::72qq5"] -> "p\[AAcute]ssaro", 
   Entity["Language", "Bengali::3wcm6"] -> "\:09aa\:09be\:0996\:09c0", 
   Entity["Language", "Arabic::3gqbv"] -> "\:0637\:0627\:0626\:0631", 
   Entity["Language", "MalayColloquial::33t85"] -> "burung", 
   Entity["Language", "Japanese::y9r37"] -> "\:79bd", 
   Entity["Language", "French::367gk"] -> "oiseau", 
   Entity["Language", "German::8jz29"] -> "Vogel", 
   Entity["Language", "Urdu::3b357"] -> "\:067e\:0631\:0646\:062f\:0647", 
   Entity["Language", "Javanese::25jfw"] -> "manuk", 
   Entity["Language", "Turkish::5d235"] -> "ku\:015f", 
   Entity["Language", "Telugu::38nnp"] -> "\:0c2a\:0c15\:0c4d\:0c37\:0c3f", 
   Entity["Language", "Marathi::8b536"] -> "\:092a\:0915\:094d\:0937\:0940", 
   Entity["Language", "Vietnamese::gw2r8"] -> "con chim", 
   Entity["Language", "Korean::yz98n"] -> "\:c0c8", 
   Entity["Language", "Tamil::423bw"] -> 
   "\:0baa\:0bb1\:0bb5\:0bc8 \:0b85\:0bb2\:0b95\:0bc1", 
   Entity["Language", "Thai::2ckfs"] -> "\:0e19\:0e01", 
   Entity["Language", "Italian::39fbj"] -> "uccello", 
   Entity["Language", "ChineseYue::4wggm"] -> "\:9e1f", 
   Entity["Language", "Swahili::7j7v6"] -> "ndege", 
   Entity["Language", "PashtoNorthern::p7983"] -> 
   "\:0627\:0631\:062c\:0644 \:0628\:0631\:062c\:0644", 
   Entity["Language", "Gujarati::2gmjk"] -> "\:0aaa\:0ab6\:0ac0", 
   Entity["Language", "Polish::q5362"] -> "ptak", 
   Entity["Language", "Ukrainian::9qftq"] -> "\:043f\:0442\:0430\:0445", 
   Entity["Language", "Hausa::pdr74"] -> "tsuntsu", 
   Entity["Language", "ChineseXiang::6mm3m"] -> "niao", 
   Entity["Language", "Malayalam::24c4b"] -> "\:0d2a\:0d15\:0d4d\:0d37\:0d3f",
    Entity["Language", "Kannada::7t74c"] -> "\:0caa\:0c95\:0ccd\:0cb7\:0cbf", 
   Entity["Language", "Burmese::py4f6"] -> "\:1004\:103e\:1000\:103a", 
   Entity["Language", "OriyaMacrolanguage::k2649"] -> 
   "\:0b2a\:0b15\:0b4d\:0b37\:0b40", 
   Entity["Language", "ChineseHakka::875d9"] -> "\:9ce5", 
   Entity["Language", "Panjabi::w5439"] -> "\:067e\:0646\:0686\:0647\:06cc", 
   Entity["Language", "Sundanese::2374p"] -> "manuk", 
   Entity["Language", "Bhojpuri::3w4q3"] -> "\:091a\:093f\:0930\:0908", 
   Entity["Language", "Maithili::3mwzp"] -> 
   "\:091a\:093f\:0921\:0948\:092f\:093e", 
   Entity["Language", "AzerbaijaniSouth::75d85"] -> "qu\:015f", 
   Entity["Language", "Romanian::q8y74"] -> "pas\[ACup]re", 
   Entity["Language", "Tagalog::5xjct"] -> "ibon", 
   Entity["Language", "Dutch::6dz65"] -> "vogel", 
   Entity["Language", "Sindhi::pmz76"] -> "\:067e\:06a9\:064a", 
   Entity["Language", "Cebuano::fm6g6"] -> "langgam", 
   Entity["Language", "Igbo::jv2qd"] -> "nunu", 
   Entity["Language", "Amharic::3q552"] -> "\:12c8\:134d", 
   Entity["Language", "Nepali::j75c8"] -> "\:091a\:0930\:094b", 
   Entity["Language", "Assamese::h33np"] -> "\:099a\:09f0\:09be\:0987", 
   Entity["Language", "Hungarian::px9y6"] -> "mad\[AAcute]r", 
   Entity["Language", "Madurese::mq826"] -> "mano'", 
   Entity["Language", "Khmer::bw44p"] -> "\:1794\:1780\:179f\:17b8", 
   Entity["Language", "MarwariMacrolanguage::33btp"] -> 
   "\:092a\:0902\:0916\:0930\:0941", 
   Entity["Language", "FulfuldeAdamawa::b32zb"] -> "sonndu", 
   Entity["Language", "Magahi::9b4dn"] -> 
   "\:091a\:093f\:0921\:093c\:093f\:092f\:093e", 
   Entity["Language", "Somali::3c534"] -> "shimbir", 
   Entity["Language", "ModernGreek::cm6sp"] -> 
   "\[Pi]\[Omicron]\[Upsilon]\[Lambda]\:03af", 
   Entity["Language", "Serbian::9593r"] -> "ptica", 
   Entity["Language", "Czech::4z65s"] -> "vt\[AAcute]k", 
   Entity["Language", "Shona::5jsw3"] -> "shiri", 
   Entity["Language", "Dari::7592r"] -> "\:067e\:0631\:0646\:062f\:0647", 
   Entity["Language", "ZhuangQiubei::k33c7"] -> "roeg", 
   Entity["Language", "Zulu::2wwvn"] -> "inyoni", 
   Entity["Language", "Nyanja::x5462"] -> "mbalame", 
   Entity["Language", "Lombard::ybdv6"] -> "\[UDoubleDot]sel", 
   Entity["Language", "Belarusian::29m84"] -> 
   "\:043f\:0442\:0443\:0448\:043a\:0430", 
   Entity["Language", "Bulgarian::xmr5j"] -> "\:043f\:0442\:0438\:0446\:0430",
    Entity["Language", "Swedish::557qk"] -> "f\[ARing]gel", 
   Entity["Language", "Akan::67m2j"] -> "anomaa", 
   Entity["Language", "Kazakh::dm2f4"] -> "\:049b\:04b1\:0441", 
   Entity["Language", "Iloko::s7mhj"] -> "billit", 
   Entity["Language", "Uighur::32bkb"] -> "\:049b\:0443\:0448", 
   Entity["Language", "Kinyarwanda::3j337"] -> "Icinyoni", 
   Entity["Language", "Xhosa::496z6"] -> "intaka", 
   Entity["Language", "Hiligaynon::jypx6"] -> "pispis", 
   Entity["Language", "Lingala::c4ghd"] -> "ndeke", 
   Entity["Language", "Armenian::f964n"] -> 
   "\:0569\:057c\:0579\:0578\:0582\:0576", 
   Entity["Language", "Catalan::qy78h"] -> "ocell", 
   Entity["Language", "Tatar::knyy6"] -> "\:043a\:043e\:0448", 
   Entity["Language", "Minangkabau::734hh"] -> "buruang", 
   Entity["Language", "Turkmen::9y824"] -> "gu\:015f", 
   Entity["Language", "Croatian::8p83b"] -> "pri\[CHacek]a", 
   Entity["Language", "Santali::y562r"] -> "\:091a\:0947\:0921\:0947", 
   Entity["Language", "Afrikaans::83h97"] -> "vo\[EDoubleDot]l", 
   Entity["Language", "Danish::zzfc5"] -> "fugl", 
   Entity["Language", "Kikuyu::gy24v"] -> "nyoni", 
   Entity["Language", "Finnish::6x24r"] -> "lintu", 
   Entity["Language", "Hebrew::4rfm5"] -> "\:05e6\:05d9\:05e4\:05d5\:05e8", 
   Entity["Language", "Slovak::446r3"] -> "vt\[AAcute]k", 
   Entity["Language", "BalochiEastern::54bsg"] -> 
   "\:0628\:0627\:0644\:064a \:0645\:0631\:06af", 
   Entity["Language", "Rundi::96f2d"] -> "inyoni", 
   Entity["Language", "Norwegian::3369f"] -> "fugl", 
   Entity["Language", "Kashmiri::489hw"] -> 
   "\:091c\:093e\:0928\:093e\:0935\:093e\:0930", 
   Entity["Language", "Tibetan::2xm9n"] -> 
   "\:0f56\:0fb1\:0f72\:0f60\:0f74\:0f0b", 
   Entity["Language", "Tswana::b38j6"] -> "nonyane", 
   Entity["Language", "Basque::8747x"] -> "txori", 
   Entity["Language", "Georgian::hmkh2"] -> 
   "\:10e4\:10e0\:10d8\:10dc\:10d5\:10d4\:10da\:10d8", 
   Entity["Language", "Pedi::z6558"] -> "nonyana", 
   Entity["Language", "Wolof::3fcm3"] -> "picc", 
   Entity["Language", "BikolCentral::4j7hz"] -> "gamgam", 
   Entity["Language", "Buginese::422q3"] -> "manu-manu", 
   Entity["Language", "Tsonga::xt9n5"] -> "xinyenyana", 
   Entity["Language", "Galician::56d29"] -> "paxaro", 
   Entity["Language", "YiddishEastern::5tq83"] -> 
   "\:05e4\:05d5\:05d9\:05d2\:05dc", Entity["Language", "Kirghiz::r929k"] -> 
   "\:0447\:044b\:043c\:0447\:044b\:043a", 
   Entity["Language", "Lithuanian::d7kfk"] -> "pauk\[SHacek]tis", 
   Entity["Language", "Achinese::572x3"] -> "cicem", 
   Entity["Language", "Kalenjin::4xz2y"] -> "taritiet", 
   Entity["Language", "Zarma::y3kn9"] -> "curoize", 
   Entity["Language", "Esperanto::8k36n"] -> "birdo", 
   Entity["Language", "Slovenian::g2d39"] -> "pti\[CHacek]", 
   Entity["Language", "Sidamo::mtms2"] -> "ce'icho", 
   Entity["Language", "Bashkir::796y3"] -> "\:04a1\:043e\:0448", 
   Entity["Language", "Chuvash::phnc8"] -> "\:043a\:0430\:0439\:04d1\:043a", 
   Entity["Language", "Swati::y8tb9"] -> "inyoni", 
   Entity["Language", "Makasar::cfb4n"] -> "jangan-jangan", 
   Entity["Language", "Macedonian::83m66"] -> 
   "\:043f\:0442\:0438\:0446\:0430", Entity["Language", "Gusii::dn8db"] -> 
   "enyoni", Entity["Language", "NorthNdebele::qty8m"] -> "inyoni", 
   Entity["Language", "Latvian::5546h"] -> "putns", 
   Entity["Language", "TongaZambia::9wy6w"] -> "manupuna", 
   Entity["Language", "Tumbuka::6d275"] -> "kayuni", 
   Entity["Language", "Teso::gby67"] -> "ikwenye", 
   Entity["Language", "Newari::493gy"] -> 
   "\:092d\:094d\:0915\:0902\:0917\:0932", 
   Entity["Language", "Breton::9djjz"] -> "evn", 
   Entity["Language", "Estonian::925q3"] -> "lind", 
   Entity["Language", "Scots::vkm9z"] -> "eun", 
   Entity["Language", "Venda::n2h56"] -> "tshinoni", 
   Entity["Language", "Chechen::nnb6f"] -> "\:0445\:044c\:043e\:0437\:0430", 
   Entity["Language", "Mapudungun::yr438"] -> "idum", 
   Entity["Language", "QuechuaAyacucho::rd5rj"] -> "lluta", 
   Entity["Language", "Masai::my6c5"] -> "nkeenyi", 
   Entity["Language", "Erzya::2p566"] -> 
   "\:043d\:0430\:0440\:043c\:0443\:043d\:044c", 
   Entity["Language", "Krio::63m66"] -> "zwazo", 
   Entity["Language", "FangEquatorialGuinea::738c8"] -> "onuan", 
   Entity["Language", "Kusaal::v23rv"] -> "nii\[Eta]", 
   Entity["Language", "KaraKalpak::4ggph"] -> "qus", 
   Entity["Language", "Sango::g6vwm"] -> "nd\[EGrave]k\[EGrave]", 
   Entity["Language", "Efik::dysd6"] -> "inuen", 
   Entity["Language", "Aklanon::7r83z"] -> "pispis", 
   Entity["Language", "Maltese::g6ryp"] -> "g\:0127asfur", 
   Entity["Language", "Yakut::cp588"] -> "\:043a\:04e9\:0442\:04e9\:0440", 
   Entity["Language", "Samoan::r5b4z"] -> "manu", Missing["NotAvailable"] -> 
   "auc\[EGrave]u", Entity["Language", "KomiZyrian::2c633"] -> 
   "\:043b\:044d\:0431\:0430\:0447", Entity["Language", "Fijian::ybcj9"] -> 
   "manumanu vuka", Entity["Language", "Icelandic::c922c"] -> "fugl", 
   Entity["Language", "Papiamento::r4722"] -> "para", 
   Entity["Language", "Moksha::zv522"] -> 
   "\:043d\:0430\:0440\:043c\:043e\:043d\:044c", 
   Entity["Language", "Kumyk::96g8h"] -> "\:043a\:044a\:0443\:0448", 
   Entity["Language", "Navajo::xs388"] -> "tsid\[IAcute]\[IAcute]", 
   Entity["Language", "Gagauz::4vgvn"] -> "ku\:015f", 
   Entity["Language", "CentralKaqchikel::32z7d"] -> "tz'ikin", 
   Entity["Language", "Dungan::w28g9"] -> "\:0444\:0438\:0447\:0438\:043d", 
   Entity["Language", "Kashubian::5wx25"] -> "fiutk", 
   Entity["Language", "Kaba::9g2pg"] -> "yel", 
   Entity["Language", "Khakas::2f9cb"] -> "\:0445\:0443\:0441", 
   Entity["Language", "Akaselem::97fvy"] -> "nyunyi", 
   Entity["Language", "Faroese::86cfh"] -> "fuglur", 
   Entity["Language", "Gaanda::qj3yt"] -> "ekinyonyi", 
   Entity["Language", "Romansch::7s4qd"] -> "utsch\[EGrave]", 
   Entity["Language", "Evenki::cy8vs"] -> "\:0434\:044d\:0433\:0438", 
   Entity["Language", "Chorti::pq579"] -> "kutkut", 
   Entity["Language", "Khanty::8y9bk"] -> 
   "\:0442\:043e\:0445\:04c6\:0430\:04c8 \:0432\:043e\:0439", 
   Entity["Language", "Chukot::njns9"] -> "\:0433\:0430\:0442\:043b\:0435", 
   Entity["Language", "Sanskrit::76hxr"] -> "\:092a\:0915\:094d\:0937\:093f", 
   Entity["Language", "Chiripa::2gyc5"] -> "guyra", 
   Entity["Language", "Nanai::f8473"] -> 
   "\:043d\:0438\:044d\:0447\:044d\:043d", 
   Entity["Language", "Choctaw::ymhp5"] -> "hoshi", 
   Entity["Language", "Mansi::j594d"] -> 
   "\:0442\:043e\:0432\:043b\:0430\:04c8\:04c8 \:0443\:0439", 
   Entity["Language", "Koryak::hk367"] -> "\:043f\:0447\:0438\:04c4", 
   Entity["Language", "HoChunk::2v627"] -> "wan\[IAcute]k", 
   Entity["Language", "Karaim::m4sx8"] -> "\:043a\:044a\:0443\:0448", 
   Entity["Language", "KaronDori::vdzp9"] -> "\:043a\:0430\:0439\:044b\:043a",
    Entity["Language", "BaiSouthSudan::bfzw5"] -> "kwenti", 
   Entity["Language", "Batak::f6rwp"] -> "pidong", 
   Entity["Language", "Gilyak::v4k2q"] -> "\:043f\:044b\:0438\:04a3\:0430", 
   Entity["Language", "Alabama::v58vk"] -> "foosi", 
   Entity["Language", "JudeoCrimeanTatar::k52xf"] -> 
   "\:043a\:044a\:0443\:0448", Entity["Language", "ClassicalQuechua::3792q"] -> 
   "p'isqo"},
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.960069526174642*^9, 3.960069559304079*^9, 3.9601050878192*^9, 
   3.960106519743885*^9, 3.9601162701660137`*^9, 3.96023978306826*^9, 
   3.960239819255999*^9, 3.960241757925609*^9, 3.96028181851904*^9, 
   3.960285398413836*^9, 3.960285757435779*^9, 3.96028908845678*^9, {
   3.9602986491978903`*^9, 3.9602986644445543`*^9}, {3.96030568388231*^9, 
   3.9603056912880096`*^9}, {3.960305936049306*^9, 3.9603059518819027`*^9}, 
   3.9603636882825937`*^9, 3.960365283861718*^9, 3.9603723707120953`*^9, 
   3.960377015587432*^9, 3.96038396267837*^9, 3.9603840013912086`*^9, {
   3.9603840853152*^9, 3.960384113606757*^9}, {3.960384610700255*^9, 
   3.960384611560103*^9}, 3.9603849032362967`*^9, {3.9603860298724337`*^9, 
   3.960386037655086*^9}, 3.96038812152604*^9, 3.960397589511429*^9, {
   3.9604134857875013`*^9, 3.960413490593079*^9}, 3.960416550657937*^9, 
   3.960418222916484*^9, 3.960450454030995*^9, 3.96045173269198*^9, 
   3.96045362415751*^9, 3.960453671998008*^9, {3.960453763131403*^9, 
   3.960453777916265*^9}, 3.960453882353652*^9, 3.960454423527536*^9},
 CellLabel->
  "Out[598]=",ExpressionUUID->"8dd50aea-f345-4fa8-8222-122803d7074b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"translatedList", " ", "=", " ", 
   RowBox[{"Transliterate", "[", 
    RowBox[{"Values", "[", "rawTranslations", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"translatedList", "=", 
  RowBox[{"ToLowerCase", "[", 
   RowBox[{"Select", "[", 
    RowBox[{"translatedList", ",", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"#", ",", 
        RowBox[{
         RowBox[{"CharacterRange", "[", 
          RowBox[{"\"\<A\>\"", ",", "\"\<z\>\""}], "]"}], ".."}]}], "]"}], 
      "&"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9601050595072107`*^9, 3.9601050786370363`*^9}, {
   3.9601067276993713`*^9, 3.9601067529740667`*^9}, 3.960372371804648*^9, {
   3.9604521103593884`*^9, 3.9604521268866787`*^9}},
 CellLabel->
  "In[599]:=",ExpressionUUID->"0fad8de9-07a3-4ab6-bdec-5d5d563164d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"niao\"\>", ",", "\<\"paksi\"\>", ",", "\<\"pajaro\"\>", 
   ",", "\<\"ptica\"\>", ",", "\<\"burung\"\>", ",", "\<\"passaro\"\>", 
   ",", "\<\"pakhi\"\>", ",", "\<\"tayr\"\>", ",", "\<\"burung\"\>", 
   ",", "\<\"qin\"\>", ",", "\<\"oiseau\"\>", ",", "\<\"vogel\"\>", 
   ",", "\<\"prndh\"\>", ",", "\<\"manuk\"\>", ",", "\<\"kus\"\>", 
   ",", "\<\"paksi\"\>", ",", "\<\"paksi\"\>", ",", "\<\"sae\"\>", 
   ",", "\<\"nk\"\>", ",", "\<\"uccello\"\>", ",", "\<\"niao\"\>", 
   ",", "\<\"ndege\"\>", ",", "\<\"pasi\"\>", ",", "\<\"ptak\"\>", 
   ",", "\<\"ptah\"\>", ",", "\<\"tsuntsu\"\>", ",", "\<\"niao\"\>", 
   ",", "\<\"paksi\"\>", ",", "\<\"paksi\"\>", ",", "\<\"paksi\"\>", 
   ",", "\<\"niao\"\>", ",", "\<\"pnchhy\"\>", ",", "\<\"manuk\"\>", 
   ",", "\<\"cidaiya\"\>", ",", "\<\"qus\"\>", ",", "\<\"pasare\"\>", 
   ",", "\<\"ibon\"\>", ",", "\<\"vogel\"\>", ",", "\<\"pky\"\>", 
   ",", "\<\"langgam\"\>", ",", "\<\"nunu\"\>", ",", "\<\"caro\"\>", 
   ",", "\<\"madar\"\>", ",", "\<\"pankharu\"\>", ",", "\<\"sonndu\"\>", 
   ",", "\<\"ciriya\"\>", ",", "\<\"shimbir\"\>", ",", "\<\"pouli\"\>", 
   ",", "\<\"ptica\"\>", ",", "\<\"vtak\"\>", ",", "\<\"shiri\"\>", 
   ",", "\<\"prndh\"\>", ",", "\<\"roeg\"\>", ",", "\<\"inyoni\"\>", 
   ",", "\<\"mbalame\"\>", ",", "\<\"usel\"\>", ",", "\<\"ptuska\"\>", 
   ",", "\<\"ptica\"\>", ",", "\<\"fagel\"\>", ",", "\<\"anomaa\"\>", 
   ",", "\<\"billit\"\>", ",", "\<\"icinyoni\"\>", ",", "\<\"intaka\"\>", 
   ",", "\<\"pispis\"\>", ",", "\<\"ndeke\"\>", ",", "\<\"ocell\"\>", 
   ",", "\<\"kos\"\>", ",", "\<\"buruang\"\>", ",", "\<\"gus\"\>", 
   ",", "\<\"prica\"\>", ",", "\<\"cede\"\>", ",", "\<\"voel\"\>", 
   ",", "\<\"fugl\"\>", ",", "\<\"nyoni\"\>", ",", "\<\"lintu\"\>", 
   ",", "\<\"zypwr\"\>", ",", "\<\"vtak\"\>", ",", "\<\"inyoni\"\>", 
   ",", "\<\"fugl\"\>", ",", "\<\"janavara\"\>", ",", "\<\"nonyane\"\>", 
   ",", "\<\"txori\"\>", ",", "\<\"prinveli\"\>", ",", "\<\"nonyana\"\>", 
   ",", "\<\"picc\"\>", ",", "\<\"gamgam\"\>", ",", "\<\"xinyenyana\"\>", 
   ",", "\<\"paxaro\"\>", ",", "\<\"pwygl\"\>", ",", "\<\"cymcyk\"\>", 
   ",", "\<\"paukstis\"\>", ",", "\<\"cicem\"\>", ",", "\<\"taritiet\"\>", 
   ",", "\<\"curoize\"\>", ",", "\<\"birdo\"\>", ",", "\<\"ptic\"\>", 
   ",", "\<\"kajak\"\>", ",", "\<\"inyoni\"\>", ",", "\<\"ptica\"\>", 
   ",", "\<\"enyoni\"\>", ",", "\<\"inyoni\"\>", ",", "\<\"putns\"\>", 
   ",", "\<\"manupuna\"\>", ",", "\<\"kayuni\"\>", ",", "\<\"ikwenye\"\>", 
   ",", "\<\"bhkangala\"\>", ",", "\<\"evn\"\>", ",", "\<\"lind\"\>", 
   ",", "\<\"eun\"\>", ",", "\<\"tshinoni\"\>", ",", "\<\"idum\"\>", 
   ",", "\<\"lluta\"\>", ",", "\<\"nkeenyi\"\>", ",", "\<\"zwazo\"\>", 
   ",", "\<\"onuan\"\>", ",", "\<\"niie\"\>", ",", "\<\"qus\"\>", 
   ",", "\<\"ndeke\"\>", ",", "\<\"inuen\"\>", ",", "\<\"pispis\"\>", 
   ",", "\<\"ghasfur\"\>", ",", "\<\"manu\"\>", ",", "\<\"auceu\"\>", 
   ",", "\<\"lebac\"\>", ",", "\<\"fugl\"\>", ",", "\<\"para\"\>", 
   ",", "\<\"tsidii\"\>", ",", "\<\"kus\"\>", ",", "\<\"ficin\"\>", 
   ",", "\<\"fiutk\"\>", ",", "\<\"yel\"\>", ",", "\<\"hus\"\>", 
   ",", "\<\"nyunyi\"\>", ",", "\<\"fuglur\"\>", ",", "\<\"ekinyonyi\"\>", 
   ",", "\<\"utsche\"\>", ",", "\<\"degi\"\>", ",", "\<\"kutkut\"\>", 
   ",", "\<\"gatle\"\>", ",", "\<\"paksi\"\>", ",", "\<\"guyra\"\>", 
   ",", "\<\"niecen\"\>", ",", "\<\"hoshi\"\>", ",", "\<\"wanik\"\>", 
   ",", "\<\"kajyk\"\>", ",", "\<\"kwenti\"\>", ",", "\<\"pidong\"\>", 
   ",", "\<\"foosi\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.9604521368527203`*^9, 3.9604521585960617`*^9}, 
   3.9604536242595243`*^9, 3.960453672148614*^9, {3.960453763325004*^9, 
   3.960453778019547*^9}, 3.960453882453596*^9, 3.960454423768708*^9},
 CellLabel->
  "Out[600]=",ExpressionUUID->"b26fb4d5-34b3-483a-9aaf-71e1288ded30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"originalPopulation", " ", "=", " ", "translatedList"}]], "Input",
 CellChangeTimes->{{3.9604165563372917`*^9, 3.960416560859576*^9}, {
   3.960416665110716*^9, 3.960416670834934*^9}, {3.960416853500423*^9, 
   3.9604168856945133`*^9}, 3.96041823032164*^9, {3.960452156964697*^9, 
   3.960452157481235*^9}},
 CellLabel->
  "In[601]:=",ExpressionUUID->"a52063cb-2f26-40c0-8855-35c8a1177008"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"niao\"\>", ",", "\<\"paksi\"\>", ",", "\<\"pajaro\"\>", 
   ",", "\<\"ptica\"\>", ",", "\<\"burung\"\>", ",", "\<\"passaro\"\>", 
   ",", "\<\"pakhi\"\>", ",", "\<\"tayr\"\>", ",", "\<\"burung\"\>", 
   ",", "\<\"qin\"\>", ",", "\<\"oiseau\"\>", ",", "\<\"vogel\"\>", 
   ",", "\<\"prndh\"\>", ",", "\<\"manuk\"\>", ",", "\<\"kus\"\>", 
   ",", "\<\"paksi\"\>", ",", "\<\"paksi\"\>", ",", "\<\"sae\"\>", 
   ",", "\<\"nk\"\>", ",", "\<\"uccello\"\>", ",", "\<\"niao\"\>", 
   ",", "\<\"ndege\"\>", ",", "\<\"pasi\"\>", ",", "\<\"ptak\"\>", 
   ",", "\<\"ptah\"\>", ",", "\<\"tsuntsu\"\>", ",", "\<\"niao\"\>", 
   ",", "\<\"paksi\"\>", ",", "\<\"paksi\"\>", ",", "\<\"paksi\"\>", 
   ",", "\<\"niao\"\>", ",", "\<\"pnchhy\"\>", ",", "\<\"manuk\"\>", 
   ",", "\<\"cidaiya\"\>", ",", "\<\"qus\"\>", ",", "\<\"pasare\"\>", 
   ",", "\<\"ibon\"\>", ",", "\<\"vogel\"\>", ",", "\<\"pky\"\>", 
   ",", "\<\"langgam\"\>", ",", "\<\"nunu\"\>", ",", "\<\"caro\"\>", 
   ",", "\<\"madar\"\>", ",", "\<\"pankharu\"\>", ",", "\<\"sonndu\"\>", 
   ",", "\<\"ciriya\"\>", ",", "\<\"shimbir\"\>", ",", "\<\"pouli\"\>", 
   ",", "\<\"ptica\"\>", ",", "\<\"vtak\"\>", ",", "\<\"shiri\"\>", 
   ",", "\<\"prndh\"\>", ",", "\<\"roeg\"\>", ",", "\<\"inyoni\"\>", 
   ",", "\<\"mbalame\"\>", ",", "\<\"usel\"\>", ",", "\<\"ptuska\"\>", 
   ",", "\<\"ptica\"\>", ",", "\<\"fagel\"\>", ",", "\<\"anomaa\"\>", 
   ",", "\<\"billit\"\>", ",", "\<\"icinyoni\"\>", ",", "\<\"intaka\"\>", 
   ",", "\<\"pispis\"\>", ",", "\<\"ndeke\"\>", ",", "\<\"ocell\"\>", 
   ",", "\<\"kos\"\>", ",", "\<\"buruang\"\>", ",", "\<\"gus\"\>", 
   ",", "\<\"prica\"\>", ",", "\<\"cede\"\>", ",", "\<\"voel\"\>", 
   ",", "\<\"fugl\"\>", ",", "\<\"nyoni\"\>", ",", "\<\"lintu\"\>", 
   ",", "\<\"zypwr\"\>", ",", "\<\"vtak\"\>", ",", "\<\"inyoni\"\>", 
   ",", "\<\"fugl\"\>", ",", "\<\"janavara\"\>", ",", "\<\"nonyane\"\>", 
   ",", "\<\"txori\"\>", ",", "\<\"prinveli\"\>", ",", "\<\"nonyana\"\>", 
   ",", "\<\"picc\"\>", ",", "\<\"gamgam\"\>", ",", "\<\"xinyenyana\"\>", 
   ",", "\<\"paxaro\"\>", ",", "\<\"pwygl\"\>", ",", "\<\"cymcyk\"\>", 
   ",", "\<\"paukstis\"\>", ",", "\<\"cicem\"\>", ",", "\<\"taritiet\"\>", 
   ",", "\<\"curoize\"\>", ",", "\<\"birdo\"\>", ",", "\<\"ptic\"\>", 
   ",", "\<\"kajak\"\>", ",", "\<\"inyoni\"\>", ",", "\<\"ptica\"\>", 
   ",", "\<\"enyoni\"\>", ",", "\<\"inyoni\"\>", ",", "\<\"putns\"\>", 
   ",", "\<\"manupuna\"\>", ",", "\<\"kayuni\"\>", ",", "\<\"ikwenye\"\>", 
   ",", "\<\"bhkangala\"\>", ",", "\<\"evn\"\>", ",", "\<\"lind\"\>", 
   ",", "\<\"eun\"\>", ",", "\<\"tshinoni\"\>", ",", "\<\"idum\"\>", 
   ",", "\<\"lluta\"\>", ",", "\<\"nkeenyi\"\>", ",", "\<\"zwazo\"\>", 
   ",", "\<\"onuan\"\>", ",", "\<\"niie\"\>", ",", "\<\"qus\"\>", 
   ",", "\<\"ndeke\"\>", ",", "\<\"inuen\"\>", ",", "\<\"pispis\"\>", 
   ",", "\<\"ghasfur\"\>", ",", "\<\"manu\"\>", ",", "\<\"auceu\"\>", 
   ",", "\<\"lebac\"\>", ",", "\<\"fugl\"\>", ",", "\<\"para\"\>", 
   ",", "\<\"tsidii\"\>", ",", "\<\"kus\"\>", ",", "\<\"ficin\"\>", 
   ",", "\<\"fiutk\"\>", ",", "\<\"yel\"\>", ",", "\<\"hus\"\>", 
   ",", "\<\"nyunyi\"\>", ",", "\<\"fuglur\"\>", ",", "\<\"ekinyonyi\"\>", 
   ",", "\<\"utsche\"\>", ",", "\<\"degi\"\>", ",", "\<\"kutkut\"\>", 
   ",", "\<\"gatle\"\>", ",", "\<\"paksi\"\>", ",", "\<\"guyra\"\>", 
   ",", "\<\"niecen\"\>", ",", "\<\"hoshi\"\>", ",", "\<\"wanik\"\>", 
   ",", "\<\"kajyk\"\>", ",", "\<\"kwenti\"\>", ",", "\<\"pidong\"\>", 
   ",", "\<\"foosi\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9604184308868093`*^9, 3.960450454559977*^9, 3.960451736139518*^9, {
   3.9604521447037497`*^9, 3.9604521590333347`*^9}, 3.960453624923369*^9, 
   3.960453672268011*^9, {3.960453764739719*^9, 3.9604537823736763`*^9}, 
   3.960453883600709*^9, 3.9604544238555307`*^9},
 CellLabel->
  "Out[601]=",ExpressionUUID->"41b22a2f-93a0-4b70-a2c9-c377a487a9ad"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"similarityScore", "[", 
   RowBox[{"str_", ",", "wordList_"}], "]"}], ":=", 
  RowBox[{"Mean", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"CosineDistance", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"net", "[", "str", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"net", "[", "#", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], "/@", "wordList"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fitnessFunction", "[", "str_", "]"}], ":=", 
   RowBox[{"-", 
    RowBox[{"similarityScore", "[", 
     RowBox[{"str", ",", "originalPopulation"}], "]"}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"randomWord", "[", "]"}], ":=", 
   RowBox[{"StringJoin", "@", 
    RowBox[{"RandomChoice", "[", 
     RowBox[{
      RowBox[{"CharacterRange", "[", 
       RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], ",", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5"}], "}"}], "]"}]}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"crossover", "[", 
    RowBox[{"w1_", ",", "w2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"StringLength", "[", "w1", "]"}], ",", 
            RowBox[{"StringLength", "[", "w2", "]"}]}], "]"}]}], "}"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"StringJoin", "[", 
      RowBox[{
       RowBox[{"StringTake", "[", 
        RowBox[{"w1", ",", "p"}], "]"}], ",", 
       RowBox[{"StringDrop", "[", 
        RowBox[{"w2", ",", "p"}], "]"}]}], "]"}]}], "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mutate", "[", 
   RowBox[{"word_", ",", 
    RowBox[{"rate_", ":", "0.3"}]}], "]"}], ":=", 
  RowBox[{"StringJoin", "@", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "<", "rate"}], ",", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{"CharacterRange", "[", 
          RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], "]"}], ",", "#"}], 
       "]"}], "&"}], ",", 
     RowBox[{"Characters", "[", "word", "]"}]}], "]"}]}]}], "\n"}], "Input",
 CellChangeTimes->{{3.960416835450082*^9, 3.9604168361393957`*^9}, {
   3.960416947275494*^9, 3.960416950814212*^9}, {3.960418319184791*^9, 
   3.9604183197842407`*^9}, {3.9604183682946672`*^9, 3.960418383555415*^9}, {
   3.960418415787895*^9, 3.960418454963787*^9}, {3.960418486679714*^9, 
   3.960418627529656*^9}, 3.96041882304204*^9, {3.960418925778191*^9, 
   3.960418988195322*^9}, {3.960451655208148*^9, 3.960451661284651*^9}, {
   3.960451753218935*^9, 3.960451754136366*^9}, {3.960451869490831*^9, 
   3.9604518716936913`*^9}},
 CellLabel->
  "In[602]:=",ExpressionUUID->"9e4129f7-9ce7-4085-b455-14a4892aac94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fitnessFunction", "[", "\"\<ogp\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.960416955031508*^9, 3.960417000984387*^9}, {
  3.960418299227152*^9, 3.960418327910096*^9}, {3.960418374339617*^9, 
  3.960418374975377*^9}, {3.9604187893234377`*^9, 3.9604187895939007`*^9}, {
  3.960450587860346*^9, 3.960450593353435*^9}, {3.9604506304515867`*^9, 
  3.96045063278404*^9}, {3.960451664971236*^9, 3.9604516845183687`*^9}, {
  3.9604517401123447`*^9, 3.960451740370253*^9}, {3.960451875068009*^9, 
  3.960451903126094*^9}, {3.960451974904975*^9, 3.96045198905836*^9}},
 CellLabel->
  "In[607]:=",ExpressionUUID->"07994cfa-2d64-4d0b-a47e-4291c6916e16"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["237", "53"]}]], "Output",
 CellChangeTimes->{{3.960416960534564*^9, 3.960417005608293*^9}, 
   3.960418075235652*^9, 3.9604182348333178`*^9, {3.960418300906599*^9, 
   3.960418328291355*^9}, {3.960418371605283*^9, 3.960418385925809*^9}, 
   3.9604184567841*^9, {3.9604184914567738`*^9, 3.9604185786171007`*^9}, {
   3.960418617972459*^9, 3.960418628582446*^9}, {3.960418785797799*^9, 
   3.960418789935891*^9}, 3.960418843757*^9, 3.96041892955702*^9, {
   3.9604189619871283`*^9, 3.960418989320591*^9}, 3.960450454619317*^9, {
   3.960450588243977*^9, 3.9604505935845823`*^9}, {3.960450631007778*^9, 
   3.960450633361376*^9}, {3.960451662552824*^9, 3.960451685065178*^9}, {
   3.960451748156851*^9, 3.960451755085084*^9}, {3.9604518726675*^9, 
   3.96045190342809*^9}, {3.960451975401286*^9, 3.960451989438167*^9}, 
   3.960452160477285*^9, 3.9604536278048563`*^9, 3.960453676385141*^9, 
   3.960453783115556*^9, 3.9604538844525337`*^9, 3.960454424951374*^9},
 CellLabel->
  "Out[607]=",ExpressionUUID->"0d7474fc-5851-4c24-9407-d637e18b810b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"evolveWords", "[", 
   RowBox[{
    RowBox[{"populationSize_", ":", "100"}], ",", 
    RowBox[{"generations_", ":", "50"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "population", ",", "scores", ",", "selected", ",", "newPop", ",", 
      "bestWord", ",", "bestScore"}], "}"}], ",", 
    RowBox[{
     RowBox[{"population", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"randomWord", "[", "]"}], ",", 
        RowBox[{"{", "populationSize", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"scores", "=", 
         RowBox[{"fitnessFunction", "/@", "population"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"bestWord", "=", 
         RowBox[{"First", "@", 
          RowBox[{"SortBy", "[", 
           RowBox[{"population", ",", "fitnessFunction"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"bestScore", "=", 
         RowBox[{"Max", "[", "scores", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Generation \>\"", ",", "gen", 
          ",", "\"\<: Best word = \\\"\>\"", ",", "bestWord", 
          ",", "\"\<\\\" | Score = \>\"", ",", "bestScore"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"selected", "=", 
         RowBox[{"Ordering", "[", 
          RowBox[{"scores", ",", 
           RowBox[{"-", "populationSize"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newPop", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"p1", "=", 
                RowBox[{"population", "[", 
                 RowBox[{"[", 
                  RowBox[{"selected", "[", 
                   RowBox[{"[", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "populationSize"}], "}"}], "]"}], "]"}],
                    "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"p2", "=", 
                RowBox[{"population", "[", 
                 RowBox[{"[", 
                  RowBox[{"selected", "[", 
                   RowBox[{"[", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "populationSize"}], "}"}], "]"}], "]"}],
                    "]"}], "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"mutate", "[", 
              RowBox[{"crossover", "[", 
               RowBox[{"p1", ",", "p2"}], "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", "populationSize", "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"population", "=", "newPop"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"gen", ",", "generations"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"First", "@", 
      RowBox[{"SortBy", "[", 
       RowBox[{"population", ",", "fitnessFunction"}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9604170086246357`*^9, 3.9604170086247177`*^9}, {
   3.9604173318458652`*^9, 3.960417338134766*^9}, 3.960418754967551*^9, {
   3.960450652048585*^9, 3.960450665649715*^9}, {3.960450903065868*^9, 
   3.960450910000616*^9}, {3.960450944581306*^9, 3.960450947597755*^9}},
 CellLabel->
  "In[608]:=",ExpressionUUID->"47f1ffff-cd2b-4bf9-9382-bd26e70f23f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"best", " ", "=", " ", 
  RowBox[{
   RowBox[{"evolveWords", "[", 
    RowBox[{"10", ",", "10"}], "]"}], "//", "Timing"}]}]], "Input",
 CellChangeTimes->{{3.96041703336622*^9, 3.960417053774378*^9}, 
   3.9604173478800573`*^9, 3.96041805107939*^9, {3.960418809852627*^9, 
   3.960418816602541*^9}, {3.9604189702908773`*^9, 3.960418971895506*^9}, {
   3.960451858290443*^9, 3.960451863727813*^9}},
 CellLabel->
  "In[609]:=",ExpressionUUID->"37b97f32-39bd-4c2c-9221-9ad44b0c1fc7"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generation \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\": Best word = \\\"\"\>", 
   "\[InvisibleSpace]", "\<\"zygzw\"\>", 
   "\[InvisibleSpace]", "\<\"\\\" | Score = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox["231", "53"]}]}],
  SequenceForm["Generation ", 1, ": Best word = \"", "zygzw", "\" | Score = ", 
   Rational[-231, 53]],
  Editable->False]], "Print",
 CellChangeTimes->{3.960450948406498*^9, 3.960451952686573*^9, 
  3.960453630785301*^9, 3.960453677850213*^9, 3.960453783844146*^9, 
  3.960453885177537*^9, 3.960454425636135*^9},
 CellLabel->
  "During evaluation of \
In[609]:=",ExpressionUUID->"1d24bdfc-556e-4cf3-9292-3018f61a019e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generation \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\": Best word = \\\"\"\>", 
   "\[InvisibleSpace]", "\<\"chorezw\"\>", 
   "\[InvisibleSpace]", "\<\"\\\" | Score = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox["710", "159"]}]}],
  SequenceForm[
  "Generation ", 2, ": Best word = \"", "chorezw", "\" | Score = ", 
   Rational[-710, 159]],
  Editable->False]], "Print",
 CellChangeTimes->{3.960450948406498*^9, 3.960451952686573*^9, 
  3.960453630785301*^9, 3.960453677850213*^9, 3.960453783844146*^9, 
  3.960453885177537*^9, 3.960454425667375*^9},
 CellLabel->
  "During evaluation of \
In[609]:=",ExpressionUUID->"05a317db-eb18-4f4a-95e7-ccf1889e30f1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generation \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\": Best word = \\\"\"\>", 
   "\[InvisibleSpace]", "\<\"islukakpi\"\>", 
   "\[InvisibleSpace]", "\<\"\\\" | Score = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox["650", "159"]}]}],
  SequenceForm[
  "Generation ", 3, ": Best word = \"", "islukakpi", "\" | Score = ", 
   Rational[-650, 159]],
  Editable->False]], "Print",
 CellChangeTimes->{3.960450948406498*^9, 3.960451952686573*^9, 
  3.960453630785301*^9, 3.960453677850213*^9, 3.960453783844146*^9, 
  3.960453885177537*^9, 3.960454425691424*^9},
 CellLabel->
  "During evaluation of \
In[609]:=",ExpressionUUID->"51a91b5a-8af8-45fc-b6a7-d6bdab3064b8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generation \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\": Best word = \\\"\"\>", 
   "\[InvisibleSpace]", "\<\"auhluzeotkpi\"\>", 
   "\[InvisibleSpace]", "\<\"\\\" | Score = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox["234", "53"]}]}],
  SequenceForm[
  "Generation ", 4, ": Best word = \"", "auhluzeotkpi", "\" | Score = ", 
   Rational[-234, 53]],
  Editable->False]], "Print",
 CellChangeTimes->{3.960450948406498*^9, 3.960451952686573*^9, 
  3.960453630785301*^9, 3.960453677850213*^9, 3.960453783844146*^9, 
  3.960453885177537*^9, 3.96045442571399*^9},
 CellLabel->
  "During evaluation of \
In[609]:=",ExpressionUUID->"b2beed2c-2ccb-43b4-9761-3d9354655c44"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generation \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\": Best word = \\\"\"\>", 
   "\[InvisibleSpace]", "\<\"rzesgiaisjft\"\>", 
   "\[InvisibleSpace]", "\<\"\\\" | Score = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox["737", "159"]}]}],
  SequenceForm[
  "Generation ", 5, ": Best word = \"", "rzesgiaisjft", "\" | Score = ", 
   Rational[-737, 159]],
  Editable->False]], "Print",
 CellChangeTimes->{3.960450948406498*^9, 3.960451952686573*^9, 
  3.960453630785301*^9, 3.960453677850213*^9, 3.960453783844146*^9, 
  3.960453885177537*^9, 3.960454425738389*^9},
 CellLabel->
  "During evaluation of \
In[609]:=",ExpressionUUID->"13dbee59-f7df-4613-9523-8a4dbe21b81f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generation \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\": Best word = \\\"\"\>", 
   "\[InvisibleSpace]", "\<\"chirassvainjft\"\>", 
   "\[InvisibleSpace]", "\<\"\\\" | Score = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox["272", "53"]}]}],
  SequenceForm[
  "Generation ", 6, ": Best word = \"", "chirassvainjft", "\" | Score = ", 
   Rational[-272, 53]],
  Editable->False]], "Print",
 CellChangeTimes->{3.960450948406498*^9, 3.960451952686573*^9, 
  3.960453630785301*^9, 3.960453677850213*^9, 3.960453783844146*^9, 
  3.960453885177537*^9, 3.9604544257617397`*^9},
 CellLabel->
  "During evaluation of \
In[609]:=",ExpressionUUID->"b4561e15-6fcb-45ec-9e30-b857c91ac238"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generation \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\": Best word = \\\"\"\>", 
   "\[InvisibleSpace]", "\<\"wazasoziastsjflyn\"\>", 
   "\[InvisibleSpace]", "\<\"\\\" | Score = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox["859", "159"]}]}],
  SequenceForm[
  "Generation ", 7, ": Best word = \"", "wazasoziastsjflyn", "\" | Score = ", 
   
   Rational[-859, 159]],
  Editable->False]], "Print",
 CellChangeTimes->{3.960450948406498*^9, 3.960451952686573*^9, 
  3.960453630785301*^9, 3.960453677850213*^9, 3.960453783844146*^9, 
  3.960453885177537*^9, 3.960454425784525*^9},
 CellLabel->
  "During evaluation of \
In[609]:=",ExpressionUUID->"20109a2b-7d21-4824-9a25-5fdfe5442efc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generation \"\>", "\[InvisibleSpace]", "8", 
   "\[InvisibleSpace]", "\<\": Best word = \\\"\"\>", 
   "\[InvisibleSpace]", "\<\"vaprzwastkaakssaisuhksyn\"\>", 
   "\[InvisibleSpace]", "\<\"\\\" | Score = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox["324", "53"]}]}],
  SequenceForm[
  "Generation ", 8, ": Best word = \"", "vaprzwastkaakssaisuhksyn", 
   "\" | Score = ", 
   Rational[-324, 53]],
  Editable->False]], "Print",
 CellChangeTimes->{3.960450948406498*^9, 3.960451952686573*^9, 
  3.960453630785301*^9, 3.960453677850213*^9, 3.960453783844146*^9, 
  3.960453885177537*^9, 3.9604544258055153`*^9},
 CellLabel->
  "During evaluation of \
In[609]:=",ExpressionUUID->"0af49fa8-7635-469c-8c6a-fe7795a998dd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generation \"\>", "\[InvisibleSpace]", "9", 
   "\[InvisibleSpace]", "\<\": Best word = \\\"\"\>", 
   "\[InvisibleSpace]", "\<\"awpagoagresvaozisav\"\>", 
   "\[InvisibleSpace]", "\<\"\\\" | Score = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox["314", "53"]}]}],
  SequenceForm[
  "Generation ", 9, ": Best word = \"", "awpagoagresvaozisav", 
   "\" | Score = ", 
   Rational[-314, 53]],
  Editable->False]], "Print",
 CellChangeTimes->{3.960450948406498*^9, 3.960451952686573*^9, 
  3.960453630785301*^9, 3.960453677850213*^9, 3.960453783844146*^9, 
  3.960453885177537*^9, 3.960454425828837*^9},
 CellLabel->
  "During evaluation of \
In[609]:=",ExpressionUUID->"6b542ca4-4103-4546-bd80-fffd8185ada5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generation \"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\": Best word = \\\"\"\>", 
   "\[InvisibleSpace]", "\<\"awpagotrgtaesvatozrasisv\"\>", 
   "\[InvisibleSpace]", "\<\"\\\" | Score = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox["1078", "159"]}]}],
  SequenceForm[
  "Generation ", 10, ": Best word = \"", "awpagotrgtaesvatozrasisv", 
   "\" | Score = ", 
   Rational[-1078, 159]],
  Editable->False]], "Print",
 CellChangeTimes->{3.960450948406498*^9, 3.960451952686573*^9, 
  3.960453630785301*^9, 3.960453677850213*^9, 3.960453783844146*^9, 
  3.960453885177537*^9, 3.960454425850684*^9},
 CellLabel->
  "During evaluation of \
In[609]:=",ExpressionUUID->"9b887aae-3f66-4595-a0a7-812577ca7263"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.023`", ",", "\<\"dpaksaatrtruhawghaoeugapaavop\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.96041803037146*^9, 3.9604180634723473`*^9, 3.96041825031892*^9, 
   3.960418343402266*^9, 3.960418473649802*^9, 3.960418769143065*^9, 
   3.960418815043029*^9, 3.960418861971384*^9, 3.960418945842511*^9, {
   3.9604189774433928`*^9, 3.9604190047014027`*^9}, 3.960450463138563*^9, 
   3.960450676557613*^9, {3.9604509423088627`*^9, 3.960450957256122*^9}, 
   3.960451973039297*^9, 3.960453630951326*^9, 3.960453678015594*^9, 
   3.960453783966693*^9, 3.960453885300207*^9, 3.960454425872225*^9},
 CellLabel->
  "Out[609]=",ExpressionUUID->"cd98a9e3-b083-4294-8607-482b24d6ee53"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{
  "NetModel", 
   "[", "\"\<GloVe 300-Dimensional Word Vectors Trained on Common Crawl \
840B\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.960451523101592*^9, 3.9604515466879473`*^9}, 
   3.960452606001227*^9, {3.960452670548986*^9, 3.9604526745081387`*^9}},
 CellLabel->
  "In[492]:=",ExpressionUUID->"879147e3-4d58-4e2f-89de-1913fa1f093d"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["EmbeddingLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], 
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    11.381540374364704`, 18.50282032438554}, {
                    16.8150922707282, 18.50282032438554}, {16.8150922707282, 
                    17.226951245917007`}, {12.889097121311352`, 
                    17.226951245917007`}, {12.889097121311352`, 
                    15.056069530313835`}, {16.218417179305106`, 
                    15.056069530313835`}, {16.218417179305106`, 
                    13.783374255523086`}, {12.889097121311352`, 
                    13.783374255523086`}, {12.889097121311352`, 
                    11.272895546397194`}, {16.94521822151728, 
                    11.272895546397194`}, {16.94521822151728, 
                    10.000200271606445`}, {11.381540374364704`, 
                    10.000200271606445`}, {11.381540374364704`, 
                    18.50282032438554}}}]}}}}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                   ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                 GridBox[{{
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox["\"string\"", "SummaryItem"], "SummaryItem"]}, {
                    TagBox[
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                    TagBox[
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]300\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"], 
                    "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{{{
                    EdgeForm[{
                    RGBColor[0.5654919999999999, 0.263725, 0.7075], 
                    Thickness[0.03]}], 
                    FaceForm[
                    RGBColor[0.9855164, 0.9754575, 0.99025]], 
                    
                    RectangleBox[{-1.5, -1.5}, {29.5, 29.5}, RoundingRadius -> 
                    7]}, {
                    Thickness[0.03571428571428571], 
                    FaceForm[{
                    RGBColor[
                    0.42065599999999986`, 0.018300000000000014`, 0.61], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    11.381540374364704`, 18.50282032438554}, {
                    16.8150922707282, 18.50282032438554}, {16.8150922707282, 
                    17.226951245917007`}, {12.889097121311352`, 
                    17.226951245917007`}, {12.889097121311352`, 
                    15.056069530313835`}, {16.218417179305106`, 
                    15.056069530313835`}, {16.218417179305106`, 
                    13.783374255523086`}, {12.889097121311352`, 
                    13.783374255523086`}, {12.889097121311352`, 
                    11.272895546397194`}, {16.94521822151728, 
                    11.272895546397194`}, {16.94521822151728, 
                    10.000200271606445`}, {11.381540374364704`, 
                    10.000200271606445`}, {11.381540374364704`, 
                    18.50282032438554}}}]}}}}, {
                  ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    4 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], ImagePadding -> {{0, 1}, {1, 0}}, 
                   Background -> GrayLevel[1, 0], BaseStyle -> GrayLevel[1], 
                   ImageSize -> 36, PlotRange -> {{-2, 30}, {-2, 30}}}], 
                 GridBox[{{
                    TagBox[
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`FormattingLayers`opart, 
                    NeuralNetworks`Private`FormattingLayers`part, 
                    NeuralNetworks`Private`FormattingLayers`selection = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    StyleBox["Parameters", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{False -> 
                    FrameBox["\"OutputDimensions\"", FrameStyle -> 
                    GrayLevel[0, 0], FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False], 
                    True -> FrameBox["\"OutputDimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"OutputDimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"OutputDimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"OutputDimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"300\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{False -> 
                    FrameBox["\"ClassCount\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"ClassCount\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"ClassCount"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"ClassCount\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"ClassCount"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["2196017", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Arrays", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{False -> 
                    FrameBox["\"Weights\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Weights\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Weights"}, InputForm]], Method -> "Preemptive",
                     PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Weights\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Weights"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2196017\[Times]300\
\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{False -> 
                    FrameBox["\"Input\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"string\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{False -> 
                    FrameBox["\"Output\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]300\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`FormattingLayers`part = 
                    MouseAnnotation[]], 
                    If[NeuralNetworks`Private`FormattingLayers`opart === 
                    NeuralNetworks`Private`FormattingLayers`part, 
                    NeuralNetworks`Private`FormattingLayers`selection = Null; 
                    NeuralNetworks`Private`FormattingLayers`opart = Null, 
                    NeuralNetworks`Private`FormattingLayers`selection = 
                    NeuralNetworks`Private`FormattingLayers`part; 
                    NeuralNetworks`Private`FormattingLayers`opart = 
                    NeuralNetworks`Private`FormattingLayers`part; Null]; 
                    Null], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterLayer[
                    
                    Lookup[<|{"Inputs", "Input"} -> <|
                    "Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[0]}, 
                    NeuralNetworks`IndexIntegerT[1, 2196017]], "Type" -> 
                    "Tokens", "Tokens" -> NeuralNetworks`ValidatedParameter[
                    Skeleton[
                    Row[{2196016, " strings"}]]], "SplitPattern" -> 
                    NeuralNetworks`ValidatedParameter[WordBoundary], 
                    "IgnoreCase" -> False, "Count" -> 2196017, "$Version" -> 
                    "14.2.1"|>|>, 
                    Key[NeuralNetworks`Private`FormattingLayers`selection], 
                    Null], NeuralNetworks`Private`FormattingLayers`part, \
<||>, {}]}, GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`FormattingLayers`selection}], 
                    Initialization :> {NetChain}], "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[EmbeddingLayer, 2649346152, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", EmbeddingLayer, 2649346152, 
            8985275802913532618519555588891672506652246539520268414888, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("EmbeddingLayer[<>]"& )],
  False,
  BoxID -> 8985275802913532618519555588891672506652246539520268414888,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Input",
 CellChangeTimes->{3.96045442673286*^9},
 CellLabel->
  "In[610]:=",ExpressionUUID->"b093a16c-8d01-4433-8d2c-9bc1ecfab0df"],

Cell[BoxData[
 TemplateBox[{
  "EmbeddingLayer", "noinfo", 
   "\"Input expression \\!\\(\\*TagBox[RowBox[{\\\"EmbeddingLayer\\\", \
\\\"[\\\", \\\"<>\\\", \\\"]\\\"}], False, Rule[BoxID, \
8985275802913532618519555588891672506652246539520268414888], Rule[Editable, \
False], Rule[SelectWithContents, True], Rule[Selectable, False]]\\) contains \
insufficient information to interpret as input.\"", 2, 610, 65, 
   26405352367262627950, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.960454426825979*^9},
 CellLabel->
  "During evaluation of \
In[610]:=",ExpressionUUID->"4c18d0ff-58fd-419c-9a97-1967303787a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"positionedDigrams", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringLength", "[", "word", "]"}], ">=", 
          RowBox[{"pos", "+", "1"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"pos", ",", 
           RowBox[{"StringTake", "[", 
            RowBox[{"word", ",", 
             RowBox[{"{", 
              RowBox[{"pos", ",", 
               RowBox[{"pos", "+", "1"}]}], "}"}]}], "]"}]}], "}"}], ",", 
         "Nothing"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"word", ",", "translatedList"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"pos", ",", 
         RowBox[{
          RowBox[{"StringLength", "[", "word", "]"}], "-", "1"}]}], "}"}]}], 
      "]"}], ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"groupedByPosition", "=", 
   RowBox[{"GroupBy", "[", 
    RowBox[{"positionedDigrams", ",", 
     RowBox[{"First", "->", "Last"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"countsByPosition", "=", 
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Counts", "[", 
       RowBox[{"groupedByPosition", "[", "#", "]"}], "]"}], "&"}], ",", 
     RowBox[{"Keys", "[", "groupedByPosition", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"topDigramsByPosition", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Keys", "@", 
      RowBox[{"TakeLargestBy", "[", 
       RowBox[{
        RowBox[{"countsByPosition", "[", "pos", "]"}], ",", "Identity", ",", 
        RowBox[{"UpTo", "[", "5", "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"pos", ",", 
       RowBox[{"Sort", "@", 
        RowBox[{"Keys", "[", "countsByPosition", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SYLLABLECOUNT", "=", 
  RowBox[{"Round", "[", 
   RowBox[{"Mean", "[", 
    RowBox[{"Length", "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ResourceFunction", "[", "\"\<WordSyllables\>\"", "]"}], "[",
          "#", "]"}], "&"}], "/@", "translatedList"}], ")"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.960452063698154*^9, 3.9604520709401903`*^9}, {
  3.9604521816000423`*^9, 3.9604522012694683`*^9}, {3.960453000851*^9, 
  3.960453001323204*^9}},
 CellLabel->
  "In[617]:=",ExpressionUUID->"aa9da861-54e9-470f-bf33-68f9408ba886"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.96045220820579*^9, 3.9604530018666286`*^9, 3.9604536468604794`*^9, 
   3.960453681534731*^9, 3.960453788504388*^9, 3.960453888297097*^9, {
   3.9604544370050173`*^9, 3.960454442381928*^9}},
 CellLabel->
  "Out[621]=",ExpressionUUID->"66a3b961-7503-4c32-b174-f2a40bb09a2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", "topDigramsByPosition", "]"}]], "Input",
 CellChangeTimes->{{3.9604522254442596`*^9, 3.960452227025033*^9}, {
  3.96045300678423*^9, 3.96045301134272*^9}},
 CellLabel->
  "In[622]:=",ExpressionUUID->"50046b52-9d90-42f3-bcaa-da9e5e02ce91"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"pa\"\>", ",", "\<\"pt\"\>", ",", "\<\"ni\"\>", 
   ",", "\<\"in\"\>", ",", "\<\"ma\"\>", ",", "\<\"ak\"\>", ",", "\<\"an\"\>",
    ",", "\<\"us\"\>", ",", "\<\"ti\"\>", ",", "\<\"ny\"\>", 
   ",", "\<\"ks\"\>", ",", "\<\"ic\"\>", ",", "\<\"nu\"\>", ",", "\<\"yo\"\>",
    ",", "\<\"ao\"\>", ",", "\<\"si\"\>", ",", "\<\"on\"\>", 
   ",", "\<\"ca\"\>", ",", "\<\"ar\"\>", ",", "\<\"el\"\>", ",", "\<\"ni\"\>",
    ",", "\<\"ng\"\>", ",", "\<\"an\"\>", ",", "\<\"ro\"\>", 
   ",", "\<\"am\"\>", ",", "\<\"on\"\>", ",", "\<\"ar\"\>", ",", "\<\"ro\"\>",
    ",", "\<\"lo\"\>", ",", "\<\"su\"\>", ",", "\<\"ni\"\>", 
   ",", "\<\"ru\"\>", ",", "\<\"ra\"\>", ",", "\<\"li\"\>", ",", "\<\"ya\"\>",
    ",", "\<\"an\"\>", ",", "\<\"la\"\>", ",", "\<\"yi\"\>", 
   ",", "\<\"na\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.960452227220881*^9, {3.9604530024370613`*^9, 3.960453011607419*^9}, 
   3.960453647265121*^9, 3.960453681850803*^9, 3.960453788577882*^9, 
   3.960453888471326*^9, 3.9604544427540483`*^9},
 CellLabel->
  "Out[622]=",ExpressionUUID->"c87b2241-d2e1-4cb5-835e-3d010e9db2c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"generateWord", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"numSyllables", ",", "selectedLists", ",", "syllables"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"numSyllables", ":=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"SYLLABLECOUNT", ",", " ", 
         RowBox[{"SYLLABLECOUNT", "+", "2"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"selectedLists", "=", 
      RowBox[{"Take", "[", 
       RowBox[{"topDigramsByPosition", ",", "numSyllables"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"syllables", "=", 
      RowBox[{"RandomChoice", "/@", "selectedLists"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"StringJoin", "[", "syllables", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"generateWord", "[", "]"}], ",", 
   RowBox[{"{", "10", "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.960452174503777*^9, {3.9604522137944813`*^9, 3.960452277328741*^9}},
 CellLabel->
  "In[623]:=",ExpressionUUID->"0e181ea8-995d-4480-9934-42526dd72fd3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ptnynu\"\>", ",", "\<\"pttiicon\"\>", ",", "\<\"intinuon\"\>", 
   ",", "\<\"maanks\"\>", ",", "\<\"maanks\"\>", ",", "\<\"ninyyo\"\>", 
   ",", "\<\"inanic\"\>", ",", "\<\"maanyo\"\>", ",", "\<\"patiyo\"\>", 
   ",", "\<\"maan\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.9604521748986673`*^9, 3.9604522817206717`*^9}, 
   3.960453650058557*^9, 3.9604536822735767`*^9, 3.96045378874469*^9, 
   3.960453890018742*^9, 3.960454443419636*^9},
 CellLabel->
  "Out[624]=",ExpressionUUID->"198b5ebe-d845-4556-9036-2cdbd4233d81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"words", " ", "=", " ", "translatedList"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"charSet", "=", 
    RowBox[{"Flatten", "[", "topDigramsByPosition", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fitnessFunction", "[", "candidate_String", "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"EditDistance", "[", 
         RowBox[{"candidate", ",", "#"}], "]"}], "&"}], "/@", "words"}], 
      "]"}]}]}], ";"}], "\[IndentingNewLine]", "\n"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randomString", "[", "]"}], ":=", 
    RowBox[{"StringJoin", "@", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "topDigramsByPosition", "]"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"SYLLABLECOUNT", ",", " ", 
          RowBox[{"SYLLABLECOUNT", "+", "2"}]}], "}"}], "]"}]}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"populationSize", "=", "100"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"generations", "=", "500"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mutationRate", "=", "0.2"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"population", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"randomString", "[", "]"}], ",", 
     RowBox[{"{", "populationSize", "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"fitnesses", "=", 
       RowBox[{"fitnessFunction", "/@", "population"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bestFitness", "=", 
       RowBox[{"Max", "[", "fitnesses", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"bestCandidate", "=", 
       RowBox[{"population", "[", 
        RowBox[{"[", 
         RowBox[{"First", "@", 
          RowBox[{"Ordering", "[", 
           RowBox[{"fitnesses", ",", 
            RowBox[{"-", "1"}]}], "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"parents", "=", 
       RowBox[{
        RowBox[{"TakeLargestBy", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"population", ",", "fitnesses"}], "}"}], "]"}], ",", 
          "Last", ",", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"populationSize", "/", "2"}], "]"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"crossover", "[", 
        RowBox[{"p1_", ",", "p2_"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"len", ",", "chars1", ",", "chars2"}], "}"}], ",", 
         RowBox[{
          RowBox[{"len", "=", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"StringLength", "[", "p1", "]"}], ",", 
             RowBox[{"StringLength", "[", "p2", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"chars1", "=", 
           RowBox[{"Characters", "[", "p1", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"chars2", "=", 
           RowBox[{"Characters", "[", "p2", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"StringJoin", "@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"RandomChoice", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"chars1", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"chars2", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"mutate", "[", "str_", "]"}], ":=", 
       RowBox[{"StringJoin", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RandomReal", "[", "]"}], "<", "mutationRate"}], ",", 
            RowBox[{"RandomChoice", "[", "charSet", "]"}], ",", "c"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", 
            RowBox[{"Characters", "[", "str", "]"}]}], "}"}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"children", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"mutate", "@", 
          RowBox[{"crossover", "[", 
           RowBox[{
            RowBox[{"RandomChoice", "[", "parents", "]"}], ",", 
            RowBox[{"RandomChoice", "[", "parents", "]"}]}], "]"}]}], ",", 
         RowBox[{"{", "populationSize", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"population", "=", "children"}], ";"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"gen", ",", " ", "1", " ", ",", " ", "generations"}], "}"}]}], 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"bestWord", "=", 
  RowBox[{"First", "@", 
   RowBox[{"MaximalBy", "[", 
    RowBox[{"population", ",", "fitnessFunction"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"fitnessFunction", "[", "bestWord", "]"}]}], "Input",
 CellChangeTimes->{{3.960452827118924*^9, 3.960452961096136*^9}, {
  3.960453021308507*^9, 3.9604530441390247`*^9}, {3.96045322623181*^9, 
  3.960453231680543*^9}, {3.960453278523633*^9, 3.960453289487252*^9}, {
  3.9604533803877573`*^9, 3.9604533919605103`*^9}, {3.960453453877447*^9, 
  3.960453454036996*^9}, {3.960453493468038*^9, 3.960453518301058*^9}, {
  3.960453594983324*^9, 3.960453595076342*^9}, {3.960453712015093*^9, 
  3.960453741435975*^9}, {3.960453828683791*^9, 3.960453834825358*^9}, {
  3.9604538660961514`*^9, 3.960453869125832*^9}, {3.960453924482318*^9, 
  3.960453936566004*^9}, {3.960453989833981*^9, 3.960453990371769*^9}, {
  3.960454097999983*^9, 3.9604541023126297`*^9}, {3.960454200069963*^9, 
  3.960454205019682*^9}, {3.960454846518709*^9, 3.960454855619484*^9}},
 CellLabel->
  "In[664]:=",ExpressionUUID->"d90f1879-3e47-4699-841f-10ffb9822a90"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"paning\"\>", ",", "\<\"ranu\"\>", ",", "\<\"yinima\"\>", 
   ",", "\<\"akanonpt\"\>", ",", "\<\"nucaptng\"\>", ",", "\<\"icpaon\"\>", 
   ",", "\<\"ptroicon\"\>", ",", "\<\"niro\"\>", ",", "\<\"rayiks\"\>", 
   ",", "\<\"onar\"\>", ",", "\<\"yosusiao\"\>", ",", "\<\"caarsu\"\>", 
   ",", "\<\"amam\"\>", ",", "\<\"ruyi\"\>", ",", "\<\"timapt\"\>", 
   ",", "\<\"laarrony\"\>", ",", "\<\"raic\"\>", ",", "\<\"mangma\"\>", 
   ",", "\<\"icliyo\"\>", ",", "\<\"arru\"\>", ",", "\<\"yoca\"\>", 
   ",", "\<\"yoarlaru\"\>", ",", "\<\"arpt\"\>", ",", "\<\"nysuakng\"\>", 
   ",", "\<\"tielyo\"\>", ",", "\<\"annalo\"\>", ",", "\<\"onon\"\>", 
   ",", "\<\"elaryi\"\>", ",", "\<\"ansuaksu\"\>", ",", "\<\"ning\"\>", 
   ",", "\<\"ksanak\"\>", ",", "\<\"ninyao\"\>", ",", "\<\"licaello\"\>", 
   ",", "\<\"caruna\"\>", ",", "\<\"yiusngsu\"\>", ",", "\<\"aoamonan\"\>", 
   ",", "\<\"ksru\"\>", ",", "\<\"arruro\"\>", ",", "\<\"icloarni\"\>", 
   ",", "\<\"anraar\"\>", ",", "\<\"usngpa\"\>", ",", "\<\"elar\"\>", 
   ",", "\<\"rangsuro\"\>", ",", "\<\"nitiak\"\>", ",", "\<\"anng\"\>", 
   ",", "\<\"icyarola\"\>", ",", "\<\"lisi\"\>", ",", "\<\"losiny\"\>", 
   ",", "\<\"aolo\"\>", ",", "\<\"aknaaoel\"\>", ",", "\<\"amsuniti\"\>", 
   ",", "\<\"tiksus\"\>", ",", "\<\"anamyaya\"\>", ",", "\<\"raonmaon\"\>", 
   ",", "\<\"icon\"\>", ",", "\<\"lainniyi\"\>", ",", "\<\"yani\"\>", 
   ",", "\<\"akaoonic\"\>", ",", "\<\"arca\"\>", ",", "\<\"annuna\"\>", 
   ",", "\<\"ptaksinu\"\>", ",", "\<\"roloonng\"\>", ",", "\<\"singnyin\"\>", 
   ",", "\<\"ancaptin\"\>", ",", "\<\"siyama\"\>", ",", "\<\"amcaling\"\>", 
   ",", "\<\"nitiam\"\>", ",", "\<\"onon\"\>", ",", "\<\"caloonna\"\>", 
   ",", "\<\"lora\"\>", ",", "\<\"tiarpt\"\>", ",", "\<\"yicaicin\"\>", 
   ",", "\<\"anyo\"\>", ",", "\<\"royicani\"\>", ",", "\<\"iclana\"\>", 
   ",", "\<\"sinuti\"\>", ",", "\<\"onmaar\"\>", ",", "\<\"lacaru\"\>", 
   ",", "\<\"nisu\"\>", ",", "\<\"ksakksyi\"\>", ",", "\<\"ruroonng\"\>", 
   ",", "\<\"ksla\"\>", ",", "\<\"liarniar\"\>", ",", "\<\"siakks\"\>", 
   ",", "\<\"yinuroro\"\>", ",", "\<\"inan\"\>", ",", "\<\"marusini\"\>", 
   ",", "\<\"arni\"\>", ",", "\<\"rana\"\>", ",", "\<\"ananak\"\>", 
   ",", "\<\"ngrousin\"\>", ",", "\<\"ksroruli\"\>", ",", "\<\"pticinin\"\>", 
   ",", "\<\"sicainni\"\>", ",", "\<\"kscang\"\>", ",", "\<\"nisunusu\"\>", 
   ",", "\<\"yoan\"\>", ",", "\<\"loan\"\>", ",", "\<\"roroan\"\>", 
   ",", "\<\"akngroel\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.9604529425914307`*^9, 3.960452961588607*^9}, {
   3.960453036904174*^9, 3.960453044441607*^9}, {3.960453231992619*^9, 
   3.960453233979097*^9}, {3.96045327947523*^9, 3.960453289818272*^9}, {
   3.960453384715342*^9, 3.960453395109551*^9}, 3.9604534542730093`*^9, 
   3.960453596712861*^9, 3.960453652560957*^9, {3.960453685941002*^9, 
   3.960453720725555*^9}, 3.960453789261924*^9, {3.960453869439992*^9, 
   3.960453891379779*^9}, 3.960453937627865*^9, 3.9604539907910643`*^9, 
   3.960454102987804*^9, 3.960454205707758*^9, 3.960454444947228*^9, 
   3.9604548565061626`*^9},
 CellLabel->
  "Out[671]=",ExpressionUUID->"e428adde-2b75-4af0-b5a6-534dac3f3820"],

Cell[BoxData["\<\"pani\"\>"], "Output",
 CellChangeTimes->{{3.9604529425914307`*^9, 3.960452961588607*^9}, {
   3.960453036904174*^9, 3.960453044441607*^9}, {3.960453231992619*^9, 
   3.960453233979097*^9}, {3.96045327947523*^9, 3.960453289818272*^9}, {
   3.960453384715342*^9, 3.960453395109551*^9}, 3.9604534542730093`*^9, 
   3.960453596712861*^9, 3.960453652560957*^9, {3.960453685941002*^9, 
   3.960453720725555*^9}, 3.960453789261924*^9, {3.960453869439992*^9, 
   3.960453891379779*^9}, 3.960453937627865*^9, 3.9604539907910643`*^9, 
   3.960454102987804*^9, 3.960454205707758*^9, 3.960454444947228*^9, 
   3.9604548609343357`*^9},
 CellLabel->
  "Out[673]=",ExpressionUUID->"87292f15-c8b0-457f-a63a-25e0ee820c1e"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["157", "37"]}]], "Output",
 CellChangeTimes->{{3.9604529425914307`*^9, 3.960452961588607*^9}, {
   3.960453036904174*^9, 3.960453044441607*^9}, {3.960453231992619*^9, 
   3.960453233979097*^9}, {3.96045327947523*^9, 3.960453289818272*^9}, {
   3.960453384715342*^9, 3.960453395109551*^9}, 3.9604534542730093`*^9, 
   3.960453596712861*^9, 3.960453652560957*^9, {3.960453685941002*^9, 
   3.960453720725555*^9}, 3.960453789261924*^9, {3.960453869439992*^9, 
   3.960453891379779*^9}, 3.960453937627865*^9, 3.9604539907910643`*^9, 
   3.960454102987804*^9, 3.960454205707758*^9, 3.960454444947228*^9, 
   3.960454860944373*^9},
 CellLabel->
  "Out[674]=",ExpressionUUID->"77ad2092-1274-4c51-8282-42dbb420a795"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"populationSize", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generations", "=", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mutationRate", "=", "0.2"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"population", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"randomString", "[", "]"}], ",", 
      RowBox[{"{", "populationSize", "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitnessValues", "=", 
    RowBox[{"{", "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"List", " ", "to", " ", "store", " ", "fitness", " ", "values"}], 
   " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"fitnesses", "=", 
       RowBox[{"fitnessFunction", " ", "/@", " ", "population"}]}], ";", 
      "\[IndentingNewLine]", "  ", 
      RowBox[{"bestFitness", "=", 
       RowBox[{"Max", "[", "fitnesses", "]"}]}], ";", "\[IndentingNewLine]", 
      "  ", 
      RowBox[{"bestCandidate", "=", 
       RowBox[{"population", "[", 
        RowBox[{"[", 
         RowBox[{"First", "@", 
          RowBox[{"Ordering", "[", 
           RowBox[{"fitnesses", ",", 
            RowBox[{"-", "1"}]}], "]"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "  ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"fitnessValues", ",", "bestFitness"}], "]"}], ";", 
      "\[IndentingNewLine]", "  ", 
      RowBox[{"parents", "=", 
       RowBox[{
        RowBox[{"TakeLargestBy", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"population", ",", "fitnesses"}], "}"}], "]"}], ",", 
          "Last", ",", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"populationSize", "/", "2"}], "]"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "  ", 
      RowBox[{
       RowBox[{"crossover", "[", 
        RowBox[{"p1_", ",", "p2_"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"len", ",", "chars1", ",", "chars2"}], "}"}], ",", 
         RowBox[{
          RowBox[{"len", "=", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"StringLength", "[", "p1", "]"}], ",", 
             RowBox[{"StringLength", "[", "p2", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "    ", 
          RowBox[{"chars1", "=", 
           RowBox[{"Characters", "[", "p1", "]"}]}], ";", 
          "\[IndentingNewLine]", "    ", 
          RowBox[{"chars2", "=", 
           RowBox[{"Characters", "[", "p2", "]"}]}], ";", 
          "\[IndentingNewLine]", "    ", 
          RowBox[{"StringJoin", "@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"RandomChoice", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"chars1", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"chars2", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "  ", 
      RowBox[{
       RowBox[{"mutate", "[", "str_", "]"}], ":=", 
       RowBox[{"StringJoin", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RandomReal", "[", "]"}], "<", "mutationRate"}], ",", 
            RowBox[{"RandomChoice", "[", "charSet", "]"}], ",", "c"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", 
            RowBox[{"Characters", "[", "str", "]"}]}], "}"}]}], "]"}]}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", "  ", 
      RowBox[{"children", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"mutate", "@", 
          RowBox[{"crossover", "[", 
           RowBox[{
            RowBox[{"RandomChoice", "[", "parents", "]"}], ",", 
            RowBox[{"RandomChoice", "[", "parents", "]"}]}], "]"}]}], ",", 
         RowBox[{"{", "populationSize", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "  ", 
      RowBox[{"population", "=", "children"}], ";"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"gen", ",", "1", ",", "generations"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bestWord", "=", 
   RowBox[{"First", "@", 
    RowBox[{"MaximalBy", "[", 
     RowBox[{"population", ",", "fitnessFunction"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "bestWord", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"fitnessFunction", "[", "bestWord", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "the", " ", "fitness", " ", "values"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"fitnessValues", ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Generation\>\"", ",", "\"\<Fitness\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Fitness Across Generations\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.960454328896038*^9, 3.960454351373253*^9}, {
  3.9604544729569387`*^9, 
  3.960454473782745*^9}},ExpressionUUID->"25db33f4-e720-428b-ac02-\
c9a7e7a56cce"],

Cell[CellGroupData[{

Cell[BoxData["\<\"pana\"\>"], "Print",
 CellChangeTimes->{3.960454356393372*^9, 3.960454463132402*^9},
 CellLabel->
  "During evaluation of \
In[636]:=",ExpressionUUID->"2292d25e-90a7-4ce2-b0b4-987cd7a60e61"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["319", "74"]}]], "Print",
 CellChangeTimes->{3.960454356393372*^9, 3.960454463167408*^9},
 CellLabel->
  "During evaluation of \
In[636]:=",ExpressionUUID->"386c5411-b512-49af-888c-16f7b09e72ed"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[2], 
         LineBox[CompressedData["
1:eJxd2DuMVUUYB/DRwtho1gQTEy2OxBgxxlyf+ISRN4h6BZG3HB4LLMpyFpaF
XRZ2EjqqS0fHqagsbkJnNXZYeSs7k1PQ2dwYGzoBuTHzoyG//Z9v5nxn5jx2
Xz12btf00yGEf54K4dH///0br1/31zO77999IT/5Qfzt1J/1jeWJn8VTeBV+
Kd6/O9vbvG7iV3AVj95Y/uO5OxOvJn8Nv47fiAfW3lp9++LEb8YXH/z88s6b
E79F/jb1PfxOvPn7L7+uejD1xO/i9/D7+AP8IV6LP8If40/wp/gz/DleR3/r
yWPphMMX5DhsIN8QH13t62sm820snTZSv6lcn7SJ891M/WbyLbHYr2lLfP7O
vYc7cJJvLZ22sh+2lfs1bWP87aXTdvbXDvIdzP8lOQ47yXH4ihyHr7n+OHxD
jkO/dMQJZxy+pR4nnHHYRT1OOOOwm3qccMbhO+pxwhmHPdTvYb3IMw7fU4/T
9+V4mTzspR6nvdSTh33U7+N+I8847KceJ5xxOED9Aa4feSYPB6nHCeeD1B8q
HQ9RjzMOh6nH6TD1OPzA+eOEMw5HqMfpSFy4vubv/Wsn608e6tJVTT/kNU64
xRl3OBxlfhxxjRNuj7LfcYfDsfL7ozpG/8eYHyfc4ow7HI7T/3HmJ69xwi3O
uDseH7/+rk/6P1G+r6oTXH9c44RbnHF3gvfvdOlqmv6ny/Wpp8v3b5ou39/t
dPk9kBm/m46Pb4dbk/lPlvNVJ+kf1xyfyFuccYfDKdYfR1zjhFuccYfDaebH
Edc4nS6vR4sz7nCY4frPlPsx4nqG+XHLeHmmfJ91OJwpXeF4phyvxgm3OOPu
DNf/R64/jrjGCbc44w6Hn5gfR1zjhFuccYfDWeY/y/2Pa5xwi/PZ8nnRkYdZ
9t8s/ZPXOOEWZ9zN8vvxOeY/x/7HNccn3OKMOxya0lMN74OmvB96OFLfb9gv
5A1OeIDbJl59+PS/d+qJh5xfbsrn+4j6Do9xmKP/OfYjeW+u3E9xrjy/PvU1
9Q1OeIDbufJ9PWT8zPEj3OExDufpH1fny/l6OOI+rnGD0/lyPw2Yv8VDnBlv
hDs8Zr5wofTUBdYf93DEfVzjBic8wC0e4sz5j8g7PMZhvvQUrnAPR9yfL+/H
mrzBCQ/mWX88xHme/sk7PMbhIv3jCvdwxH1c4wYnPMAtHuKMRxfpH49xWOD+
X6D/BZ7/HB/J+7jm+AYnPMAtHuKMR7ijnzF5uMT64+oSz38cOb5PXpM3OOEB
bhlveKm8vpnjR7jDYxwu0z+ucA9H3Mc1bnDCA9zi4WX+noFHl/nex2PGC4vx
8a+Ls5P9v0j/5D3yuFg+7/qLrD9uqE/kA9ziIc54hDs8xmGJ9ccV7i2x/8n7
uF4q16ehPi3x/l8qv+9axhvijEe4w2McrtA/rq6U59+7Qv8c3yevcYMTHuAW
D3HGI86nw+MrfP8s0z+ucA9H3Mc1bpbpHw9wi4c44xHu8BiHq/SPK9zDEfdx
jZur9I8HuKV+iDMe4Q6PcbhG/7jCPRxxH9e4wQkPcIuHOOPRNdYfj3FY4ftn
hb8HrdD/Snz018PVtyf3///1/wK9J0D4
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJxd2DuMVUUYB/DRwtho1gQTEy2OxBgxxlyf+ISRN4h6BZG3HB4LLMpyFpaF
XRZ2EjqqS0fHqagsbkJnNXZYeSs7k1PQ2dwYGzoBuTHzoyG//Z9v5nxn5jx2
Xz12btf00yGEf54K4dH///0br1/31zO77999IT/5Qfzt1J/1jeWJn8VTeBV+
Kd6/O9vbvG7iV3AVj95Y/uO5OxOvJn8Nv47fiAfW3lp9++LEb8YXH/z88s6b
E79F/jb1PfxOvPn7L7+uejD1xO/i9/D7+AP8IV6LP8If40/wp/gz/DleR3/r
yWPphMMX5DhsIN8QH13t62sm820snTZSv6lcn7SJ891M/WbyLbHYr2lLfP7O
vYc7cJJvLZ22sh+2lfs1bWP87aXTdvbXDvIdzP8lOQ47yXH4ihyHr7n+OHxD
jkO/dMQJZxy+pR4nnHHYRT1OOOOwm3qccMbhO+pxwhmHPdTvYb3IMw7fU4/T
9+V4mTzspR6nvdSTh33U7+N+I8847KceJ5xxOED9Aa4feSYPB6nHCeeD1B8q
HQ9RjzMOh6nH6TD1OPzA+eOEMw5HqMfpSFy4vubv/Wsn608e6tJVTT/kNU64
xRl3OBxlfhxxjRNuj7LfcYfDsfL7ozpG/8eYHyfc4ow7HI7T/3HmJ69xwi3O
uDseH7/+rk/6P1G+r6oTXH9c44RbnHF3gvfvdOlqmv6ny/Wpp8v3b5ou39/t
dPk9kBm/m46Pb4dbk/lPlvNVJ+kf1xyfyFuccYfDKdYfR1zjhFuccYfDaebH
Edc4nS6vR4sz7nCY4frPlPsx4nqG+XHLeHmmfJ91OJwpXeF4phyvxgm3OOPu
DNf/R64/jrjGCbc44w6Hn5gfR1zjhFuccYfDWeY/y/2Pa5xwi/PZ8nnRkYdZ
9t8s/ZPXOOEWZ9zN8vvxOeY/x/7HNccn3OKMOxya0lMN74OmvB96OFLfb9gv
5A1OeIDbJl59+PS/d+qJh5xfbsrn+4j6Do9xmKP/OfYjeW+u3E9xrjy/PvU1
9Q1OeIDbufJ9PWT8zPEj3OExDufpH1fny/l6OOI+rnGD0/lyPw2Yv8VDnBlv
hDs8Zr5wofTUBdYf93DEfVzjBic8wC0e4sz5j8g7PMZhvvQUrnAPR9yfL+/H
mrzBCQ/mWX88xHme/sk7PMbhIv3jCvdwxH1c4wYnPMAtHuKMRxfpH49xWOD+
X6D/BZ7/HB/J+7jm+AYnPMAtHuKMR7ijnzF5uMT64+oSz38cOb5PXpM3OOEB
bhlveKm8vpnjR7jDYxwu0z+ucA9H3Mc1bnDCA9zi4WX+noFHl/nex2PGC4vx
8a+Ls5P9v0j/5D3yuFg+7/qLrD9uqE/kA9ziIc54hDs8xmGJ9ccV7i2x/8n7
uF4q16ehPi3x/l8qv+9axhvijEe4w2McrtA/rq6U59+7Qv8c3yevcYMTHuAW
D3HGI86nw+MrfP8s0z+ucA9H3Mc1bpbpHw9wi4c44xHu8BiHq/SPK9zDEfdx
jZur9I8HuKV+iDMe4Q6PcbhG/7jCPRxxH9e4wQkPcIuHOOPRNdYfj3FY4ftn
hb8HrdD/Snz018PVtyf3///1/wK9J0D4
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0., 
             500.}, {-4.425675675675675, -4.243243243243243}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0., -4.233108108108118}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 120]], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0., 
            500.}, {-4.425675675675675, -4.243243243243243}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., -4.233108108108118}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 120]], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxd2DuMVUUYB/DRwtho1gQTEy2OxBgxxlyf+ISRN4h6BZG3HB4LLMpyFpaF
XRZ2EjqqS0fHqagsbkJnNXZYeSs7k1PQ2dwYGzoBuTHzoyG//Z9v5nxn5jx2
Xz12btf00yGEf54K4dH///0br1/31zO77999IT/5Qfzt1J/1jeWJn8VTeBV+
Kd6/O9vbvG7iV3AVj95Y/uO5OxOvJn8Nv47fiAfW3lp9++LEb8YXH/z88s6b
E79F/jb1PfxOvPn7L7+uejD1xO/i9/D7+AP8IV6LP8If40/wp/gz/DleR3/r
yWPphMMX5DhsIN8QH13t62sm820snTZSv6lcn7SJ891M/WbyLbHYr2lLfP7O
vYc7cJJvLZ22sh+2lfs1bWP87aXTdvbXDvIdzP8lOQ47yXH4ihyHr7n+OHxD
jkO/dMQJZxy+pR4nnHHYRT1OOOOwm3qccMbhO+pxwhmHPdTvYb3IMw7fU4/T
9+V4mTzspR6nvdSTh33U7+N+I8847KceJ5xxOED9Aa4feSYPB6nHCeeD1B8q
HQ9RjzMOh6nH6TD1OPzA+eOEMw5HqMfpSFy4vubv/Wsn608e6tJVTT/kNU64
xRl3OBxlfhxxjRNuj7LfcYfDsfL7ozpG/8eYHyfc4ow7HI7T/3HmJ69xwi3O
uDseH7/+rk/6P1G+r6oTXH9c44RbnHF3gvfvdOlqmv6ny/Wpp8v3b5ou39/t
dPk9kBm/m46Pb4dbk/lPlvNVJ+kf1xyfyFuccYfDKdYfR1zjhFuccYfDaebH
Edc4nS6vR4sz7nCY4frPlPsx4nqG+XHLeHmmfJ91OJwpXeF4phyvxgm3OOPu
DNf/R64/jrjGCbc44w6Hn5gfR1zjhFuccYfDWeY/y/2Pa5xwi/PZ8nnRkYdZ
9t8s/ZPXOOEWZ9zN8vvxOeY/x/7HNccn3OKMOxya0lMN74OmvB96OFLfb9gv
5A1OeIDbJl59+PS/d+qJh5xfbsrn+4j6Do9xmKP/OfYjeW+u3E9xrjy/PvU1
9Q1OeIDbufJ9PWT8zPEj3OExDufpH1fny/l6OOI+rnGD0/lyPw2Yv8VDnBlv
hDs8Zr5wofTUBdYf93DEfVzjBic8wC0e4sz5j8g7PMZhvvQUrnAPR9yfL+/H
mrzBCQ/mWX88xHme/sk7PMbhIv3jCvdwxH1c4wYnPMAtHuKMRxfpH49xWOD+
X6D/BZ7/HB/J+7jm+AYnPMAtHuKMR7ijnzF5uMT64+oSz38cOb5PXpM3OOEB
bhlveKm8vpnjR7jDYxwu0z+ucA9H3Mc1bnDCA9zi4WX+noFHl/nex2PGC4vx
8a+Ls5P9v0j/5D3yuFg+7/qLrD9uqE/kA9ziIc54hDs8xmGJ9ccV7i2x/8n7
uF4q16ehPi3x/l8qv+9axhvijEe4w2McrtA/rq6U59+7Qv8c3yevcYMTHuAW
D3HGI86nw+MrfP8s0z+ucA9H3Mc1bpbpHw9wi4c44xHu8BiHq/SPK9zDEfdx
jZur9I8HuKV+iDMe4Q6PcbhG/7jCPRxxH9e4wQkPcIuHOOPRNdYfj3FY4ftn
hb8HrdD/Snz018PVtyf3///1/wK9J0D4
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0., 500.}, {-4.425675675675675, -4.243243243243243}},
         "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {0., -4.233108108108118}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 120]], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Generation\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Fitness\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0., -4.233108108108118},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{685.3124999999991, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Fitness Across Generations\"", TraditionalForm],
  PlotRange->{{0., 500.}, {-4.425675675675675, -4.243243243243243}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.960454281746416*^9, {3.960454337297161*^9, 3.960454356543741*^9}, 
   3.960454463300543*^9},
 CellLabel->"Out[645]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQu4XVV5LrxK9t6BgFVb21Nb29r+vVA9nr+/PQeq2XvLgR70WKliQRAq
dyIq92uMGEHlFiBAIoQESIRAEgggFyOREBIwISThJgHCPQEBg9zlIiDgWd+Y
79jre7/xrjn31vzP//zP0/U8M8rac805xve93xjffeyw95EH7H/Q3kd+Zd+9
P/jJw/c+9ICv7HvEB7c/5PD2V6N+r9Xq/VGrNepLH2z1tP//b1qtYf2zqNXa
GH//X+nfUb8ZN25cK3+6/uaI//zNf/7mP3/zn7/5//A3o+0nXe885P8ns/jP
3xS/+XL6t/fDY2es+pf+zvV3/TNWVr/95+qGLbeZftsnB2bcvv3g9Nv+1yfO
Xf33Y89ZHV+zsvE1Fw1Mv/03A9Nvy9fpAzNuo9ecMTB9tb9hytANI3nNxQPn
3uafYk+l19hj/Q1nD577W7zmkv7p9JQz+8/l2dhj/Q3n9k+/feSvmRuINiUS
zR7rbzivfdW+ps9ec1CbSIe2H31Em6NHtwn054Nnr9qveuCl/Tzu7/UH+p03
wDOfOUTguonlu1ubpH9HDXzivNuHJrtP9eT5gTPnDM0Fr54ZEHLh4HAQEl+9
Tf+01fHV68OkVgwGdt4Vbri3ic7y1dsNnHsHv7o33TL0os5/juSxJpQb4bFv
h8d+qv/c2zfCY98Mj/1X+/d3f+yvwmP/bXDGxiDCK+GxO/bP2BhEeCk8dqeB
jcKy58NjdxncKCx7Jjx2t8GNwrIN/fzYL/VvFJY9GUa718BGYdnj4bH7Dm4U
lq0Ljx23caTs4fDYr2wcKXsgPPZAW+1/98feFx57iK3kv/tj1wSAHW678u/+
2LvCaI9qb50b4bG3h8eO3zhStgo6Q37sN/o3CstWQKHJj504sFFYtgybfn7s
8QO/I8uSubLvbz2eGwOETurfKExZFJgyaePI0cIBZsrpG4cpCwJTztw4cnTN
YKW/5cdO3Thy9IMgR+dsnKXv8sCy6YMbhWVZwc6PPb9/o7BsTmDZrBo52rr6
2e+1fvObIVVy1LDeMnuAOXhRDQfxllE7X3bZCN/y/cDQS2pkEG/p+9Bl94zw
LRcMMn/n1Ygk3rLZxybfwm+pqDj0s/DSW4qXzggCO79GYPHSLbY5+574UiPq
8F86LWDjysFGbLz7Xzq2Tn6p0Xj4LzXD0b/06mao/MHHzi/Iu+k2s5YM/6Vn
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
V8P3IR36pYAEQ5/FeIAE2gIxjm1FgI3SMICEo/3KBSTsEJaIpxwSVHPdLidK
FUhQpzuQnt4dCWY74hdWjGCO9+R8703/DmXn3uMosKfYO/YXyiXtnkAC7UVA
AnU4an/muHOnc9lYMoqVsgIkqMLGM8TeUToUgQSv+9llG5QZiDUqJDkigYS3
BBIoCg4k+A3BrqcdEnYWbtwuZz0VSFAFPZSe3B0J5ivavPpFzj+5z812b+HU
pxBhr8A9uE5ZreA6Wd/tz43uzKy8uSTHP567m3AIqsrHs/x94HrpYATXvdJn
l+mr5tcF12ndUs4RcP0dwfUJQnf0q71dzzqu7yK6l3Y5U6ngujqPiQKK3blu
fmBwPWdcpObDmO0+YtU/TGjUFDgD12kXAdfJ/M7vwohzLUsKBOC5pI6A66o0
copY9S2PS3Lda3R2mTAaucD12wXXyVF5VvV8lSBAdADXdwqy/qLjumrf2+V0
ooLrqs6LQmrduW5LI7iekzQecLMl5Q5cJ20D95FbFlxfU4Zpe8jYbhU58ykm
oAwOMFyVTZIfHQwvPcxg+K8Cw20ftnljHNTqA+MgnyUYTm4pjGPiQKHw8XjT
cgBuqz7CXQ70Kbitqr/I6urObWugDG7n0P6Dbqr7i3yobwqSULAZ3L63lPEe
b12bSg4qZ7U22S54JMW5we3LhDJDcQxw23xPkts+vcIu80Tavo9xzBBbOTkr
wW3rRhTHQbkzTdz+kiiV6XLoTcFtdWoZmVLduW3LeF9KfJItWnO22sNu+lRF
CARQ6QTumyw0Okq0BgK8Gf0XHXU6u6yTkaI2GCBAVV5OEwt8GWsAArw+bpcJ
swlvT2ftiFPbQSzw5GhQkSgg4LIigwMIUN17uxwWUyBAVQWSzUQIGOURkM04
y0OI7M+R4kfd3KnYEOw/RXhHaM0F+9eK5d4by6bcg+zZ058sE7XTgP2qQJO6
yYH9ZdShYv9or4TblbMF33APPEMoMZTRAAyUpmOIUzVhQNU8djlmZVgYIGup
GQMfEdlFOStynZs7me3AgKLRjIFS0fNZxRkD/qCHHTpxuJytnAIKeOQ4EQRW
9Zz0amDAWtFJDLwdMJCTfl9yD1QY31HsBCoLhfIam3YCVXHX5YCSAgOqkJTC
1c0Y+JA4WisHHB9zc6eYFzBwtnCGUcwLGKBMf2DA58qbkgEMZAsxBRPwSAqs
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
c8wwvcyQJyV3xCs6JLldjVSbe55O/g4T/8ZhveVIosXx55LwfK3l78/W9ia+
FCI2C9ju8ToTpmdq5hUhTM9j2sLvmndjfJqT/6vwTIYebbe53OLTGhRVHQFM
/NficfPUWYTRj4kXfjkmvrXue3+48VuNyyC8hFnUMSaRIdwPTHzNsGPifxwB
gYkXut6Me3OUuyw9eHsI07PPVjc+WZGzrE99iZj4rJ1WrvHmXnnpfhOaW5U3
TLzjor6pp7JJi4T5Jn4u4wkT76rBHZUtbl02E3/K2iGVzfYKn2Hi5WUtbuE9
YcJiia/lNM4w8U8a98AVVUf6g1UE4bgjTDW4THAmVG6CcnAQdXQmvqqbtA8m
fm7jE87netoMiyiiiTcdxgYEk1v7ti2jE9Pbrpk2TPys5jJVb2CGic9irlXg
DfthdazHnyqqxDmF8oSJt20wsF0uGydJHkx8dtEPCWG7o4Td23v80pgHE+9A
Kgw0TLwl22Hic5Lx1hCcPclErd4KJnCjCdtfvna4iS4tURimcp58v5JX4hVZ
Ld4F7UAq3QYw8Sa/NZJqgQW1TK0xb7UcPF/R0W1Ttt3jDRGImPg8jeq5MPE2
cbsAsZLxKTnN1qu73Y94hZh4twXmFp/mMlQCASZeBMijiReCGyd4c+whg4m/
1GyotxbtFwfR+hiYxW2g9DCebDY9oboYV8CyknELjRFZP1h3KW6acVuOn5cj
jUpKw7rbXRUW41+k31XyP9b9ruTNlAzlMT2cH4xwxro/lk53YAjgHe89nO5T
cUTmW/e59CisuytoMgH8QCH4FwFQ4otj5XMT2FPnBPLCV2O+OKk4Z+XXGbCI
FNoMK//1tcO/depm0koQG/I6E8gfbQJ56eLJxMp9OQ4N0o7Oym9rAnlDaLNS
cVtWeRGtvCkDHtBRbg/J+dyC4vYgtzpL7az6UzOs/JtT0F0V3zAhOQJro1yr
xt05sfLWO1iqB3R/tFN03jDr1i3HrDviWMneAVzRIcesu0p1abiDWbeFLZj1
TAG6K5j11oOi7keC0g/vOEhqaJZ9ZGY1Zt31lW0aY/XDO7E1DuNPbgA6+TvM
ukl/jWRLbvyJZP32rmuGAlP4C575rHCc6Ghh1rMG9uV9sdCypVUtsOHD+JRV
qaXG2nUkLYZZd4WNYq757vlwOOpmBM8Sq4zFrAv/jROIn4RZF/UObGrLO743
3PiwR2wSl5jFRWMSmVJKMevlAbmFn0U8YtZjVDvrthx9L/fWrdwezLrlPLL6
5orDKgGHWXc6ayGRLnYYs24V4TDrmdH7XmDM6aSh0Xyz7iTPJcWFWXdCUs6s
54reSn5gwTjGSLTZzpczzLoQIhan35sz6yKLxnEinzbDrEf/PBO74jUieaKt
/xLXcNwxZv99gwnes9tTs2ozzLoE5Zj1YprzcU7W3dVnyHgPzLqJzgZ71Xf0
Hd1Hp6SnuS3suc9SSKsSBjPMehacqXtdmJD3p9+1UT40BO+GH+ZbWCx1v7My
Xi/sfmeVl7Hsjkt2f++SSzyFZXervqiHY9ktSw/LnotyNgXLvpnhrP4yQL3G
BOxlI2tyTSyXZKWw7K7fnEw2Xov18BaGDTgnf4dlP9z0SJUAbUEZX81wFKZ4
s4Y/5JlPD8fdYgL2LIB9aQjYbaHT+FPzM4xPscBtWrfrmJ1quzHmFpyqCTP+
1AQFzxJ3i8WyX2y2ok+LD4lllygYs1pFkxaUg3i/MaFCoJ5FT2MSGWl4sezF
JHMLP48wx7IPFWf9bTlGX/Yk7w0Buy0/ZAH+SfpdpVVg2bMYW7lGqCyTLXIs
u5WNw7I7VZ2Q3f9kfHnzLbtjUIkLjGV39VHOsufWS9VVZsE41Oi45bTzWSFg
dzrlkvxkvjhxZqePLtppHCcaazP00b9r/tb1E7vNBOyiAspxbzGt1K80AXve
tjgqBOxD7fS0o45ld2GUa85WMpT5uGEFR7TsfzZE6sB63xXS8pnQUnflseyz
ZNSqDzXDstsAEBOSWVFt+/WIELDfadh0tnkFlt1qfWHZs1cei4+H9LIpcmAd
OuySf7Chz1nWHmY9K1E8EMx6Y7HVtAwovXqopKN94TBbf2sCdpcaaszw+uGd
vCuZzEbZyw01J3+HWTebWSMJgsefWKzXuCyVpIUpbJTBU8NxIseFWc9a2V1a
urt/p+5RflHdKcanbGi1cqJ2nRcO662sophbbZreR3VjeJbvr81zAbN+qQnY
RcACs77B5OH3xF87P9z4p8wNlarK9DCescYkMpoYi1EZt0TD3MIz4etm1ofJ
CX9bjuSXVauq549Z/3l6l1UGiNXXaaU2s+7k2oIkmxSMY9atsBxmPdcSlen3
lj6dJ2n9+WZ9LokKs+7anDuznuXs6sLBgiE8Wsy6XTwx64ebQFwIcItbeG9O
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
7aIh4i3hOpfxuN+8TKUXLwXTBeRou3NMSO10l+zAnBV5eTA912e4c9CnOt0Y
5laTDEyvMs+nJ8NchodhFJYVmC5HGDC95nq0LmkbC5j+b/ktwbpK6etoxGPl
9AWm29MnmC5FYcD0O0sk/bRU4Ebql25Z0G1sxc7Ga1t8MXpUEZr3rIVzeroE
mJ5zZtu/tlLb2YJmtslZmrnuuGotAZp5d4vhzMt8oqVCvgLTrUY9vbOnfHdE
qnFzcHnDfoID063oHmtZHFD06nMfIX0OTK8B135kANNdMTGpSgCm5+N6YPqv
84QF02uW47WpwO1ZZu0I/Z+JZOTB13KbGpWbwW89HO7AuOWT52mz+mgwPdvz
bedgt2jhkXuKnZ6V9i8aKPUtHvTWkvopp2QwXfY+ftuiPUF9iv1QssjB9Oft
1KncveVgeo0AHzwUXtZKYTxTSmKB6bZMxuYnS8m8ztiNzqkrx+sRYbmzUiVN
UTbdOr3+nUVT6bpkp9cktu+nd7vZ2Ok2ux1Mt1nxYLpQzZwk1bbx6w4xdrop
NjsX49yVKtWdbyIbImjGO8vpFaxeSmXkOpfnIKQk9i0rSQqmZ49ftF3qH/D+
kveT6kTMrmPOiv0CpmeFgLsHtqrUDwbTK3+qp3qA6VXHsf9+YoaHYZQgK5gu
7jYwverAt2nVHIBg+vfyKIN1lbG3O2G6jBSYbk+fYHr2agWmi1WxMlXqjBUn
8oZbFnTbuMu0p2uWUKSe+nnPWiDnI4NW9PrLip3eVmpiQhsS33qlorWfNEcZ
8+62+UOeLfgiDBEw3daYo3dqQkJ3xLM2Ksevn+DAdFsLj7UsdFAXcl6O6dWX
34OsYPqfGpGRy42dnuntgelSSwFMrwmN1yU7/Vxjpx9q7PQWDCjXreU2pXyI
FlUJBmncUsKKG+bRYHreEduoJu22jyu3fS3vIO1onGS4Zvr5zBnZq8F0qdOR
bPy7ip0u+jxgej0LdtsUTK8B5Y4n7I8/Ns+U0ldgei3GHky4+1PdFzmFOyUm
3l2O1yMycrsSpovw79bp9Vb6Akyv6+tH6d3E98azrUzdNt+uZyQ73RRLVKze
Nn6dpKuAaaaM3EQYfCskIzEPzjN+kWzdxTuLMQlWLxUi4Lql7Af2rep4uybZ
6cIFnwwrsr6/xGmcsDBzVvZgMD2Lv94z2OmnzZtlXlQMTK8CTqelSrT3mZig
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
K1HEPTsGvL/LUEHE28nEfdM8oX8tt62R8Jh37SD2k3JLySjbMI9mOUYxgK6W
xG9bwOa8YuvnYgDNGGUw2tE3jtcxkD/LPQLey/mUx7Q9+ce6z6lvF7zfVfbU
3hRGxkrXj/Oh1AYF7ys2BM5cnfz8lxs/v8iq93f//WmjqhBe7xDGSrSKt06v
t5IRLG5ZAbyEJGGwWN/vssJZbY83TgnxrPGsbA3Gi2/PuVbbx68TJwoAL5sQ
AC8hrc3PkSmoL0EeOtlFn0XZayQU1w9tbHLW1gLgX1F+18EfWKrM7bY5nj8k
p34km6S88lGGFySBTuambIBgfD4nJ3Hapxv73pG4JK8ejK95ik9P9r0ZHU3p
BuMlOgjG/7Lct3kRJ4N9LzlXdKZjET44pPuI9vIfmk5yKMFW+RSjw1NVHp6a
qvBIDdsFtLjo0a7sxfrdk3uD6zJNPTDe1hkH468oG1r7f6PW0bxcfima94S5
vaY4aJhrwrpn+lfJ6a4Fxbbx3hKCuDLZS5LgDAzkOF8Ddh4rhzp2HTHxnNwf
8/BWc9YUra/lGG+jvWC8wVGNro7k9fRzwsRs2mC8jRaC8RKNXRtGa3YPJm4W
/A6Mz227eeDmtznyi3JLIT1vmEezHKPeaRdiSOlW4SCKwf1Ycmh/emDVNnvz
aWUgJQgIxov2A49pqz561nK3wPiaq9rrEDIytlQdc7ThedlHNcYMxlcL4wXE
8jvPmvd87845f/5c8k4/HwPz1ZPU11XaJmb32jq93ipCsr7zKTXeQ9QZWa+V
U3ZZ4uM7k0g47Twrn2atpP328euEJwHmnT/vlJsIzWTz08sdOqYmMH+Jid/L
XsZcsJwM9jlLpQLmrX8fZHpauWeb2+cMR9y8KuKVjzPmlUSdmZ6yBwLz2Yee
6s4I9ZvFvLTgAzBfpYemBu3o6ChzDJgXiu/G8OqRg7my9/RvctCjBx19sGwg
s5+A7UvFYF29V7D9sjK5emydyfW5/GoLSHHRjb1OFYv2IQOyoioFttczY6uL
FNj+vrLImz3fzhYLKIWyh/HYd88jg448c97N3dgrLi/H3qsTC98I4q1l2aPm
pF8zWwNbzVJJv4mZVMwGOS0tx3YbzQXbDX5q9HREriMXA/9yvh5sryzgh5LG
zr3GfhcgZuIa5sVabls7VjPvGgf1V+WWufxdbAf3Gvs9lPx7wJPfttEJbecY
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
aK+B1pKHD6lEnDZ60x+FnfLePgPL88a9Z7NCi3z7F+Hnvplm8h6eY+UknJyu
OOrzhbx9gbBvK3nMNTA7h9xQSY9Lvi1LZW4jnku+nWKGyLcPKtUYzfbPQ5ry
inFDpRBy8u2ZmId8W3rJkm8/SiQeTQkuV09ul0IbOf5xr9EprjtJmUG+/SBh
3E4OFKRQ+xdh2zAlN8HMeizk29FFGR8sFKhbMci+L/hsPnfNuJI8SVHccz+I
XSbfrpVJPxLWFyfaE/R5l1OJVfJtmcuKfFsm+FuctC7FpkK+nfRa5Nuu/zJL
Kfl2ypDbXKaE4HPd6mpMKRjvu8bk27KaJvv7dKHUVjFcSgBPGTfIt98t8rPt
IoRtNb/YOiSgrxbCdvIb4KOhEO/akW9Pq8Dw5mBgFb5yw1cJYTvlpeSpqIIh
zFu+TVMIoDLCk2/XONG28mX7Xc3Pcm5wJpd8MfLtVG5iNt+e6aJCvp2MFOTb
hwphu/pSHM21/JcQ2HGSMG5XBcbjg7AdS4M7345FZzDny32XupRm5NsJXiyL
R3LbATm+KqP6UbTXgJCGoNUDi7wda1Vf0MvbydeXfPtzYaDOtxPv4WaaqetV
1QrZTsQb5vO5IOgf+bby7PTwMYsAsoWcEMRoqiEyqqRVJKNOmYfJqB9RBGxL
gslTeYBQjKfMq2TUM9M7kFFLdRUZtSrNlWIdVs/Zzk6NzfAU55zkTkfOvJcw
Xz9duItHMzc+lj2eyzyzujk58xfLmQMdwyyO8uS9N7iLJw847tIkKnFXJasP
ObN0C+O7cGaPKxJ1KqhKzizTU5Ezy2Q/S91CFLdEsuKUM4us2HPKHRVE6GRO
GuSqRO4fZyaP4mtvF1lxFH/xeVIQoVXMvwrQ+sTa8bX1gjCDthP2vHeJdim1
K1mxmlAotkkTU0ZXbuWZiaDIiqcVNDwriNDC/S0XSCJt/0rcUzwGFVyabZX7
cqZdnQSsopFXBRG6hsOcF0RomYotsuJkApvNiqclurKLrDiRErLilPOIrLhG
qHt9GJsjzv2Jwl4tfQDIipPCj6w4SpKw8i33XerSkpEVJ6Posngktx3A4Gsy
UB9FEwwcq0IGqINL5HXU572rb3qCEKEjDXRW7InX7FIJpLg4qWAtz/GcwYS5
yB33y8VChJ7mfGjVWkf5YLVL2P59eSG4hn/JmVNGMnLmI9eOi9CHFhHa7Js8
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
8fgP89HeDvCxs6p36VRbi2NsB6vn07wdTyfcNnzd3UoPqARr8IpN8V4uxc8G
UWJr22EvXL88b6O9lzIxlttRZ7/jNvrwfKdZi4W23SGDcA038nun7LBv2V8z
igDw7cGP9aC1si3i/6EhAAE+qfk8etBy5/brBdAp6F9f2HyePGiNPTzEi9sP
WpH2ZP4UctSNr9yTW1a1vNmgNTcc0Xye13xOGbQK5XsMWvK0tOFv+FI7TXcN
03FlHkfeerf4uAX7a9qK7hpt+Cte0T5Bre9fJ/35G7jBXdF2+Uabb775mmtf
+9o7Xf/617/LNa95zastLi7ScWARS3Wrrbba6r7Xu9710OYmW2yxxfAqV7nK
Nu1Pb9D89J7Xve517918Vl/taldbOWrQfWuaGG171ateFffvvM022yyuWLGi
9eUc3bD5yX2ap+Fn11y5cuV116/Pl7ftVjUvesrtb3/7dQ95yEMaCoRfjf7S
/P3kXnvtdditb33r5eFwyNOHIRxxm9vc5vsPe9jD2HT4kwMPPPA/73GPe2y+
sLDguPjBN73pTfHtCf/4j//ohPOVO+64I+7tcoMb3MBP887NNH3qQQ96UPuk
9u/vH/nIR75t5513vs3WW2/tz7v2qlWr8O3Hmy45pcLgL9x1113tVyvs78LP
H/7whz9q9erV6DbuPLUZlr/rQTe+8Y0v3WOPPX7ziEc8wttjGfAllgR30Edv
j/d/4AEPeEB4/hDTcs5OO+10naY/3u5L++67L7618fPe9TfbbDPc+0jzPkK9
uVfl9/bNVfGIz+y9995ojyl58/3ud79n3OEOdzi8mf7n3OlOdzr9Xve61/8c
fPDB+P4bzcotNavkmPC/7nnPe+L+Dw844IB/v/Od77xi75vc5CaD0VG3ve1t
z91ll13+eMghh+Dx8y5W+9RVj7zlLW/5F/bmFWvXrn3ozW52sz233Xbbx9zq
VrfCGzH5D9tuu+0mr9kqzD/uYV4PvPnNb46fv/jud787evShBz7wgb5m7Rs3
u2VzDP506KGHXt688exm/C9Zs2YNmuPkjC0be3nT5rtfHHTQQbj/pvve974Y
3cObV128++67497XHvzgB2/ZnMrhplm939k3CzgzvrHfu9tuu9mGoYCxWXPe
cN9fS3POQ5rpxK1v7r///tdYXl5uWy+hM0YKeM1cLT4OJOMPzbRe0Xzueq1r
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
TQl54cHr08X/FZFp+vvBVf4PPSPc8A==\
\>", "ImageResolution" -> \
192.],ExpressionUUID->"f9c53464-e2a5-4677-ae38-653a57b3c693"]
}, Open  ]]
},
WindowSize->{1080, 625.5},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.8 Inherited,
FrontEndVersion->"14.2 for Linux x86 (64-bit) (March 16, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a7f35008-b0ae-4f0a-a7c8-25e4acce5b4d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 459, 8, 23, "Input",ExpressionUUID->"71a8a7db-65c1-400b-bb0d-43614bf3e90d"],
Cell[1038, 32, 579, 9, 38, "Output",ExpressionUUID->"47469e69-30fd-4176-9a97-fc09863595bd"]
}, Open  ]],
Cell[1632, 44, 919, 19, 25, "Input",ExpressionUUID->"6bd7b21e-ea75-4eca-97b9-00313a218a32"],
Cell[CellGroupData[{
Cell[2576, 67, 295, 5, 23, "Input",ExpressionUUID->"5a60049f-0bd5-4ab3-8e5a-cada07e75e60"],
Cell[2874, 74, 13648, 239, 40, "Output",ExpressionUUID->"8dd50aea-f345-4fa8-8222-122803d7074b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16559, 318, 857, 20, 40, "Input",ExpressionUUID->"0fad8de9-07a3-4ab6-bdec-5d5d563164d5"],
Cell[17419, 340, 3841, 56, 137, "Output",ExpressionUUID->"b26fb4d5-34b3-483a-9aaf-71e1288ded30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21297, 401, 413, 7, 23, "Input",ExpressionUUID->"a52063cb-2f26-40c0-8855-35c8a1177008"],
Cell[21713, 410, 3918, 58, 137, "Output",ExpressionUUID->"41b22a2f-93a0-4b70-a2c9-c377a487a9ad"]
}, Open  ]],
Cell[25646, 471, 3041, 82, 155, "Input",ExpressionUUID->"9e4129f7-9ce7-4085-b455-14a4892aac94"],
Cell[CellGroupData[{
Cell[28712, 557, 667, 10, 23, "Input",ExpressionUUID->"07994cfa-2d64-4d0b-a47e-4291c6916e16"],
Cell[29382, 569, 1087, 17, 50, "Output",ExpressionUUID->"0d7474fc-5851-4c24-9407-d637e18b810b"]
}, Open  ]],
Cell[30484, 589, 3496, 85, 197, "Input",ExpressionUUID->"47f1ffff-cd2b-4bf9-9382-bd26e70f23f0"],
Cell[CellGroupData[{
Cell[34005, 678, 502, 10, 23, "Input",ExpressionUUID->"37b97f32-39bd-4c2c-9221-9ad44b0c1fc7"],
Cell[CellGroupData[{
Cell[34532, 692, 734, 16, 30, "Print",ExpressionUUID->"1d24bdfc-556e-4cf3-9292-3018f61a019e"],
Cell[35269, 710, 743, 17, 30, "Print",ExpressionUUID->"05a317db-eb18-4f4a-95e7-ccf1889e30f1"],
Cell[36015, 729, 747, 17, 30, "Print",ExpressionUUID->"51a91b5a-8af8-45fc-b6a7-d6bdab3064b8"],
Cell[36765, 748, 750, 17, 30, "Print",ExpressionUUID->"b2beed2c-2ccb-43b4-9761-3d9354655c44"],
Cell[37518, 767, 753, 17, 30, "Print",ExpressionUUID->"13dbee59-f7df-4613-9523-8a4dbe21b81f"],
Cell[38274, 786, 757, 17, 30, "Print",ExpressionUUID->"b4561e15-6fcb-45ec-9e30-b857c91ac238"],
Cell[39034, 805, 767, 18, 30, "Print",ExpressionUUID->"20109a2b-7d21-4824-9a25-5fdfe5442efc"],
Cell[39804, 825, 781, 18, 30, "Print",ExpressionUUID->"0af49fa8-7635-469c-8c6a-fe7795a998dd"],
Cell[40588, 845, 769, 18, 30, "Print",ExpressionUUID->"6b542ca4-4103-4546-bd80-fffd8185ada5"],
Cell[41360, 865, 785, 18, 30, "Print",ExpressionUUID->"9b887aae-3f66-4595-a0a7-812577ca7263"]
}, Open  ]],
Cell[42160, 886, 719, 13, 38, "Output",ExpressionUUID->"cd98a9e3-b083-4294-8607-482b24d6ee53"]
}, Open  ]],
Cell[42894, 902, 390, 9, 25, "Input",ExpressionUUID->"879147e3-4d58-4e2f-89de-1913fa1f093d"],
Cell[CellGroupData[{
Cell[43309, 915, 59609, 1078, 67, "Input",ExpressionUUID->"b093a16c-8d01-4433-8d2c-9bc1ecfab0df"],
Cell[102921, 1995, 648, 14, 20, "Message",ExpressionUUID->"4c18d0ff-58fd-419c-9a97-1967303787a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103606, 2014, 2501, 69, 106, "Input",ExpressionUUID->"aa9da861-54e9-470f-bf33-68f9408ba886"],
Cell[106110, 2085, 325, 6, 38, "Output",ExpressionUUID->"66a3b961-7503-4c32-b174-f2a40bb09a2e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106472, 2096, 277, 5, 23, "Input",ExpressionUUID->"50046b52-9d90-42f3-bcaa-da9e5e02ce91"],
Cell[106752, 2103, 1134, 19, 38, "Output",ExpressionUUID->"c87b2241-d2e1-4cb5-835e-3d010e9db2c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107923, 2127, 1152, 30, 93, "Input",ExpressionUUID->"0e181ea8-995d-4480-9934-42526dd72fd3"],
Cell[109078, 2159, 569, 10, 38, "Output",ExpressionUUID->"198b5ebe-d845-4556-9036-2cdbd4233d81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109684, 2174, 6396, 158, 574, "Input",ExpressionUUID->"d90f1879-3e47-4699-841f-10ffb9822a90"],
Cell[116083, 2334, 3189, 46, 120, "Output",ExpressionUUID->"e428adde-2b75-4af0-b5a6-534dac3f3820"],
Cell[119275, 2382, 723, 11, 38, "Output",ExpressionUUID->"87292f15-c8b0-457f-a63a-25e0ee820c1e"],
Cell[120001, 2395, 751, 13, 38, "Output",ExpressionUUID->"77ad2092-1274-4c51-8282-42dbb420a795"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120789, 2413, 5742, 146, 544, "Input",ExpressionUUID->"25db33f4-e720-428b-ac02-c9a7e7a56cce"],
Cell[CellGroupData[{
Cell[126556, 2563, 208, 4, 18, "Print",ExpressionUUID->"2292d25e-90a7-4ce2-b0b4-987cd7a60e61"],
Cell[126767, 2569, 238, 6, 30, "Print",ExpressionUUID->"386c5411-b512-49af-888c-16f7b09e72ed"]
}, Open  ]],
Cell[127020, 2578, 243318, 4065, 347, 13277, 292, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"f9c53464-e2a5-4677-ae38-653a57b3c693"]
}, Open  ]]
}
]
*)

