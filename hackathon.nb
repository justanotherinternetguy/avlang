(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    331514,       6009]
NotebookOptionsPosition[    330627,       5985]
NotebookOutlinePosition[    331091,       6003]
CellTagsIndexPosition[    331048,       6000]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"GeoListPlot", "[", 
  TemplateBox[<|
   "query" -> "New York City", "boxes" -> TemplateBox[{"\"New York City\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"NewYork\"", ",", "\"NewYork\"", ",", 
               "\"UnitedStates\""}], "}"}]}], "]"}], 
       "\"Entity[\\\"City\\\", {\\\"NewYork\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""}, "Entity"], 
    "allassumptions" -> {{
      "type" -> "Clash", "word" -> "New York City", "template" -> 
       "Assuming \"New York City\" is a city${separator}Use as ${desc} or \
${desc} instead", "count" -> "3", "pulldown" -> "false", "default" -> 
       "{\"C\", \"New York City\"} -> {\"City\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "City", "desc" -> "a city", "input" -> 
          "{\"C\", \"New York City\"} -> {\"City\"}"}, {
         "name" -> "Person", "desc" -> "a person", "input" -> 
          "{\"C\", \"New York City\"} -> {\"Person\"}"}, {
         "name" -> "VisualArts", "desc" -> "an artwork", "input" -> 
          "{\"C\", \"New York City\"} -> {\"VisualArts\"}"}}}}, 
    "assumptions" -> {}, "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.724173`6.311387322083009, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"], "]"}]], "Input",
 CellChangeTimes->{{3.9608310937896757`*^9, 3.9608310968375387`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"d3a268e7-f89f-41b9-9678-d994901b8b94"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1: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
4HX7/FctUn/+q7L0hSp6tQCHDr4+7dr7Ovi8LU/GmtvXWkEsMycgtkx42+DU
10WNqDev9qpgsrbj6tYCGW8eJxRyt+Te5a9g9o7VVHGQMd9pWhD0NGF3Det+
Fa5AdfqnUH3tQmisDaKfqXXEVpOVEi2Mz1c3XOWYZDAHT+uSHCpeZemQsGQp
EGm/GAqR9Ihi1Pu65hWghIFinRYNAu5aFzISiPHQs0oFh0OoPhE3pj1ibTEI
+vWbVvzeXUHeEyc8V0CWu8gnB7PcmYJP0gyOIZx0/HTw/MJh9z/OoOg+iWh/
bCMjjP9cINQSOAedTsVII1KfpGJmHMgCT41Wb15U0HsHZ4awF5ARinpc3kPz
Ajf9nFx62nbs7TbRGhWNNN9LFCriC2CvUJRcKd+R8JN8VP++Jqw2Uu3NmiDJ
4BYTyuvlBaexfw+j2OUaKB6RMSUItUrt0MecjEcscYdQZpOM7klPMr0qNIUh
n65XbNI6QXeRhxlgtL0EpucicuCnzcethobZbsGN8JS0k1L62DeryaKJn8FP
O5fzL49PvIwGNVmZDy0nIZKWwg+gFUFGYmP+tOYvAaDWZrlUuZBoU0ebkpms
x0ysXhQON0hScBS8H/XZY36DRoQ2vU3aAsGjzDn68kQWhC7vTpo2n33mx3k+
p4orifrHmReRSdE6KBpslbaL5m4ix5KYjp49Ge+NWiWhi799hexZt80tHlQs
mMpW8JmY2zNNUtIx62HQ6ehDcU6r7k/TmT5efDnZ4DnzBsT4qSfEKrnm3sgo
G2SIKClkXj5GjZgHK7XkmWeg3xT6ec273nAFZla6vY3Ox0v/92fBUhsbNkrY
Zn/OnZ9PkzD/Jxyxbp4o6P2HO6R/CEWfFxEFQmX57m82WP3FQhMb/MFSBj8F
WfBPjOgxzHOjTMhgo351UlBeFj0F6b3mDE6DJH4xCNJ599dpOWdJp/fvaHeE
ioTY2q9rQD1OC04FF4CnmKclhG/XKnUTYfZSd+stEqU2xbzRAvepg11TT8hJ
KJMOhnoOrR45DQA57CBHmRfzjDdLOlOpcFHbESaTtmcGGlH+cy8Pg++OoEln
edqF9TzunyiEbDUsKj1Bwm7SiCv+MCQ3isdHikapeD7LgXBe1MuScHL9SuLg
bPw+k32U/76MdLhZgplRN1LNYi1VhrS1ii5vuTFNQIr0cpqcjidXadBteO0b
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
ZVkZy4Nkb3PkEsLomf4JWb7bN87oARDn5B4xQb78vCcAFAI74dSMi5HT+afm
S8Za15+6ILGnQt/0Kst//6or4x1CdXB33uWOxS1F/Gjgnpjw0xZdqtUvCigo
GiKCgxoJE8eLxDcn/lKc0FvcCuXcZNbB4CYV3MWNiUVo4bS8yVxAzVZE5rtT
L5NCz9PycC/spTJptlut7EOXWtvHcSd+goXuxCyGZaGE/2mJl+11KzsK4OCt
OuKYlBfUgDnxvzSPUBvWYifUijOUBKR+/fNqnPqVVRtd+6eDtErUVSzcckfq
3GkSKkMkr+oYcBqAnOZKClhqTY4etlulSReW9xCquCKZYJ9Nfn1n5lVun9X8
tgpfll8WO91bO0/SlyUkxB02g3ZK4hHdCuTnoKEjSQTeQ5mkrmHeH5gnnyaa
Fw5m64Nv2+nMnhZuE5LDidpamx5ZrVluWqhIyGk+zzTeR8oohaLkLCWdAs49
neF+g/mLXEnqGtUnJ0BoP+V74CfMM24cwJs8hKKbRDzdo/B6FTl/QsoKEY0T
471O1plnP9jymVkj2NQJfhIUbx4LnsnjXV3JV6ALtbSSCq8SKEhNeK8JzbzW
p17nYfvkxB52F2r3nHBu9mq6PsJPobRwTK9xPpLe16pFwfhmZ7hX42FodlO7
6IVFegziJEPws9vf0DbFJKt7C+BkxnLPgOrho6GOvTrxOMH+7mdDyfabhXEA
4T9SwzZaj1rCSQ3BZlplM+dG92Zz2j6ct7iecGx79UML71qN9ssCUtyeZPjA
Qs29HKYkzFBc0Vc6q3IK26QQSRCtN9p77KgUeGqzexPfAD/5r4aOf7c4Vli4
HONnq1kvE01o1NGUEBbhqImbx+lf7dQvBHPzNELdBbNwzz2t2Q2G9KNS99ba
FSK8nBf/BcQ0p8wd9KBxHH7m+Sf+ahcNlmnpOEnEQa/OPDtBUF3IqZNqh4o2
YQhnkRiVAU59CKbinKVB8H38GYFn/9pzn0z/X8JAwaPg68Hqj8FPEgMMGJsz
uiPt5iKhw95WldlKdqgGrYTxiwbQuyLwzINVJmdpfKmaYNfYs84eAUCqNXU8
2q8+FwW10bI+Sg6hlHD6INmMdtKsa8JPVyOh3VJ8SDg5NTxUhx6geaqjwivH
zNgPqfurK6OvPUzbkpISPxI/qR4C2RzokgSzL7efJOp0NspoyieCxoGkTJmS
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
uzdncH1YdyqtL82yOyd1OyzmHqrs0SFpW3uITay8GDzzLNQpKPtKyrhS6kir
rMr0T9FBTUog0ygtWKrrpnNxd1C8CyH5oJ5i2CuSH1pf4pg7fgm6Ymkl0irD
3hkwdkDJsh1Kk5uhXizGUhmV+boeh69QZ72l79gZ3TAIJaDjRrFHkR4G/0/3
k233ag51GZ785r1b5weh9ob5Rtavv0XrAVPxujkuQ1VTb2Rte5gCTWEdhra3
wHMFCTFbB7Tq3iZZphcrO8J/O+AUQjU0T8V4dSliT+nmhRctrTRNqNAbfSeD
n5P13nurI/Dz4ectMU8klO/s39CIjXfvd5nPf7PEy2Hymfkvfsve/kZ5IRV8
WzmnxxV7XE/jzgXLJN8pnu4t/d/3V14jValvDpO/TJyf1oSxECc4eRAq74nV
jgSe1c1EqxNnO5iJ6wnyaUmbl77L9okv43nziZZm4w8iR/gbLddFHCZUF2Jj
CuUyGCgsFe1JVpzqZWG4E92Rlns82CyJTERg6aD08FGLY9ASaalHa+dtxVl+
M3G4vf/Hxjf0QHattkiwiT/hVrtHIjd9nAnZO/kU+FgRUEhE99L+o1TMXN/n
1MRCh+LIY8/qEwGU4PHWlX8aAPjZpFEjzYbIWQI8Py1+T1fYNEs3zHY2Mzxg
IHX6riRviZ1F83BafvLSaZT0HEWFnF6tqe+gde86SxrnJyc0L9iahpDfF01i
E5a4FUyD7dVr3E1uqK4Djp08ZmYQNaGgV79jDUPr01Y7n4KYRd8Cn7TM9oOG
rqc+0TFjxTiWWpnVggGseS00fyNFBW+QKsLgyxAKzD70SYbx6j0NU5hc7CgI
F7whaNIDLHPM3PWBFmZgzXxod0oCRo1Nq4MYgaKCLM+QwQtqLPT6WyYsfLfR
vf6K/tz/4L/n0TI/9E19v1M+JxaqAbxbCtDiu7LZK+vv/+e/7+tGHOcNiOP4
+C2xvoG+YnXS7OjdjpBzvbspoDubCj3BNk2fLU283+lV9H2P1At49TSKacha
F+d8cNTBcke7Xm/0/GjL+gL8PwOecUkXuevW2Dc13k/2fLrbc+Qpd7c2RCNF
aJNk2uplMFB80guRrFVc8HN2p14WfnYnn6eru3uEXOgYtU/cqiSUxkDdDzp4
SCgv3F0rh2dJ8NVPyWds4IiaOvnUJ84qEz+Vp+KnWdD8UBNNjNdaYxxuCVs0
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
vdRZXmissmAeCG0W5nUwqtLQxiqoKG89aHB3tRCuhTn10pAaqNFI0JSqB9/O
EyHK7umE5ZtC81AvIJDH90iOeSvlZo7+ElOvJ6fMV52B7wCmGoLc3uQCnLJf
kw7PKSfs8n6GYzk3mzAgPF97htDpIbz+J4vqIYKOBhXSfaNMf2P3e05kwxkp
rXFRsJFyp/ouuO9XfTOaqiW97dEIdlweSc7yeR0WnlNOeN6rBFS/Tq8apwO/
1Eyd4IGpfbXtmReprz8U1+2OdO/mpyTQ8evAxqGyZVVvoWwIl3MQEggJbPJX
0u2b9+U7G1f+Vs09ufImSPgwFuMDgzEWfr5w5u7Bw3P1+MZSXCJ33AoOn28u
98vHQp/JQugguaTBV6QHeUmlk14vkZ/wXankk/X7/8TRwO52yG6TyZVMIAgv
7/NajBE6bIO9m2HGh8z07m08pi5926g0ykyj9PkCssxeepVz+ZTp+2o2xJmD
UnrKtJeBVlwCY4kr4yYikFYXXgRZrHCduS7nQqjDz+QfZR4xGYjQHhgsNWJw
p4jlIf3dDzsDR1L1kGDWN7qXCXG9zGcvAYPL83fEgk5pZUv4hLuLonZJtszL
EkHeThqPEzfhgqf3M4wvFyjNDPuA/NQBaEjQ6jWovW5CTrIpuqRIcBygVbIq
qpRORe5/6q5MSOvzODqOur6E4J0bqQ617HlYPB55CRTkfPnXJm08ON/pZPj1
h+xl565Vdk8blM2YdJic8M7iT7VWef/Kt3f+D5BYm/5h+eqPijfeVr2nnNHw
AKAVv7N6/1M2l+aKgTmX2eEhboiDAJKqFuKvTXy6IKtszaart8NqhB/3onL8
9MLCPe9TK839igitrvz6QH4eNoQfkJO99DAeCy9dlJVMuLgXyz8FRcVkgjyg
JdvbApK6YDXJzFupY61794cnu3/4Cv+aXVOd93AK4ZHEKo2nm6rOE2Lx53cv
bZpVPH48kVLstlLkihee+tIuk2VeCXUHgRUcjhR8VttdlIFNvMsI8PUZc/jz
aXMZDMEp4IlYXnLxvgjtdJB4dGG/9/hXH346DTkFzoCn8FMO/lrr3M7xlPhe
6MV7NJ9MHvmYz40llqrye+pb9m+o2neuim9e3vCcsi6Kr4+E8Mwycw0QZolb
Pplbr8RnuNCHj7cbnLpISbPDkpfnLMQapFT+zMSvPM8jRtY9vN7FiBCLLky7
+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
Jp/o/T95yjPwmdLJE+f1FkzeOZ4gCQ4Lv6oL1+EAkZMqJaLkI5GJ/Qu7i7Ao
lP6T8OzVv1rnJzwn4Aly0nYCkvhU4JSznkXqZ2Uj1ad7IeBZb8fp7PZ2qvmg
cyXXfKbcfhTCT/GcukDUfae8gVuWdHhKryQ1R6N7t/u+Vl0pS6BAMcJqSJre
d4L3RoZbkNSme6e3w5TGT5Aw7mSF5vNqOzxb0HO4Z/amO3kz2r3uxOt743eu
f6rtkw4/BZsyesNIGDF+x6m0URKoivnk0ha3IDF4V5Fpu84T3ItYC2pZbOW+
d0QFvwuEp9FPXh+gzLZLsu+JBY0QTO+hOACM9zJUg5SAirxXw8PwJedue6qI
PB3lw3PReDYCTsIHun3y28E4W4CCjewYj1Oe10e68+DsOoLrsEaUkzp78YQ4
bb/v6q3v01D6CNJX2hG/c2sSEIp3LVnNHRj+G8E7bCfXM1UJ1vJlqZE2n1HD
8u7k5WRtfJ5f/lXlZb5M1cfa7I2g1H78pfc6JrPNT9+3CUYO5MQ3F6eG+XT3
YG6V8K9nksq8+V9082ksgYLGoBB3iRqUVt0eilnuqVejih1+QgjDdSQCm5Fy
BUIkgv8iylOrZE6XvClnwRPXwU2gq4mat3Py4reLcDKwnU46LG2Mced3nHg0
bmsshOKa3P7J4R1AHP5kI1AwTR/GwRF1etjepXoO7gLfEZaFc5VMrql7Tlkx
wF3QnlV3Er0sTS/F+3YBOnKF/BT71PmZTxmCKTaSotvkeqYM1NC3tJOKbvFn
PScDN1k3i/CcvGW1J72obu/dMLaV5cYEvFZ4X7TPbZq/0SelO06nd04DZDqe
FU23w4kDb4sfI6izuPFwAVE5xw1IGrGX+NKxNQpO/8PthNk47AfjjHUpujH0
x3Bk7Sz/REelpIS8YTUcI2PhbOux2qepLX7qe9g7uzUv/QAeYN+ztUcNnuv7
Mdh19s3Bf6qdRFZCTx7RfAo/cUmyliLQIuUcsCldmK46kwSBUPLTt34J/AR8
WLQANyJb4NkAWbeXvrX3gk0J23EJvpuEMNuE6j8Z+Hjj7mSjt77gSbE3XfLB
57havhahnWC6oVKJImoDTrmtKc6OebUII1lc8wjfkdPrBYoHw9ICDsliS3nC
TeYFM/r2nRPHHxrhp/PpSssHDE+WC564Ap5+bEVtgsCryqZVTbtEukKyUYXz
UhEUuOFzc4XvuCAUD/VkXwF9Qkck9IXsS+pzE2Dzo5kkO1SrvNu3izCuxYf/
rMo1Fy7qe1eNXyX9NQQ5uXSPD+GTyim+xSeoseYnc+5efhpvE1wloVFy9gvr
mH3xLCubqmSIRtPpiuw1n7IE2l/pxCK+dyruaGXdIN1JHnFUXLydVcflLBai
EBrD+qoWoDffw59AKATM4pr6DePtRCo+ooAPPm+cYEXuGfPjeq15GpM3AVLu
0JRKURmrRH7SUHmHm4vYjU119rMfcfdlrPSAjgKnQCj9Jx8PrsPGdPHUHO7r
NAzGYUtA9VomfG1l6pA+g8Mw27vawgV/TUAJ1bXDid+5C4D1SHCYOAKTaHi+
5Ccu4RtHx8VWS1JBgYMIP3ETBLBwYtt76jcOB8EZCISp1ErsGXKq3zKG8K8e
v311xZrq3k1AsSWLLDjHQp/hyqRuJT4zKDmdAY54pkfYtDssqXLNcebnrpNV
l8nFvfhpN9RgYrWe00h0+NlI7Nkq+C03Cvuv1Mg5qTmpX/uhqmvqnqqpi607
fXckbdUL3LlJ/8bYnIufXdkfZ9a8HkrHqg+4dMAUPMuWcAqEevmJkJz+87Uz
b4i/2tJGqZfkv1x4ZIadQ5F4Ho+Zc431pQAGrcIQr/NsFedZsIcvC/GL7zhr
q5ztD+vtd8EdRUfrlcqHDrvmObh+dWn5N9ORQ91ETyTp7TQNh7nbrl9lmOn2
8XCKr2T6MF0lLpQsuZE8wsvL5j844+39ghcNB2EnusVcbegBLGJwwjD19Ydw
mCLvNRHjS7zPVdMD4al+RJxPL34gTunDcHoad34CjAjMIb4XnVXN7vdru5kH
LVftR+zVyevgDG5e2I4yqM9/+Y5E7mpmh5/5PJClagUgscIPP8wn+SmjNiOV
FGDIU+AUv7MG37gJRc1/18qW9KhfVySxwLaf+AQKmnyBqZ8SnkAcJ28ClWwj
rxcvGePzuD3Ti5G2E0tLY0+jBymjVFKC3xEYUQIEFhQW9/S+L0cYBM9NMfLn
FecNAkhZxcSsOsuKVMMB53cBf3IUO5eFGarjv6nkk1JBvYaqFUN+jZBkXM8B
KxRdJQQniftiNn9EglaYSbwg+E1RPyuRqjS4U5XbPUpPpQMJVV/4pZGG2G91
kRN/Mj00LqG6r8Y6pWXZYcTm0n/eEMdxSolml/l0MkcczQapnXftyL0S+RPr
22VhcECQ4jtlV9I0nzi/Y6kmTupxOoufU84mBSaSoPl8yVvQTv+JEJ4ROs0n
10LvZfPGlWE+8eXFt7jPrnYJmXkG5IRxTdUjOI9bkWzGs+BgOP0STkZ+3W5r
L1V5jDdX7/+JjT3j1bm0vWTQWIa/k8y0Z6A97vdUw7TBS0B1gZ++UT/IBh4K
KkVMsuM5qrLbl27xrfptKlsIq40XFv9l0I0nPvq40Ctj8WiltQi8aKdCqX1l
r+1sliO+7p0fHpITr8lYk3MCtNWDnL5iZ/hOvbpjPuPOVgupli/feIv/JUMG
acqhf0GcCZ4r7D/PkSjqcYbd5vNgZqRcSVRz+rKnvv7JLUj0n3p7N9Z/GiVM
keQsENqrn5LvbiNhqT413ngW3Lmpiz0n9WvST6omvY+vcpNdMn9PX1zVsYyb
gzzZ5BKXBMnn045JWQJ6sseEXZRPhV7tYPwGAZK0lEQljeWIU0INd/464/3t
kHrOmWiObIQFNXY/SXTfcZ6b0d3e0foEeM6JkcCQJlP2s7MTcq2S6rXZR3op
J2ohRs2sXWfHOdxqcGZKvxfYYHBGaqJYmCTmcy7j30apA7d7v+fDKFx7C4/K
u+DJFso6P1W1Yd9jirg0qkYAO8Pjej0XOFKDn7iENeHe63PZk30sm7sVneRq
d3wrq9fkF9aikcQC0/pHbkw3uMDPw65/HihmcHhKgai8ZCwg6SsG6QY8fbvM
1eb+B/EYCX3h7hqIxXTbKUpnL3bI2cpKhojrGJNEznFf/6w6rT65FUjnZyfz
3lhFjI9vdL8On+2GD/norWq7J7wOENjU+l6GM/j2tkpMFFpb7lbQ0vMnvKaV
VT0waT4BcLhN9SAdfk7HG322n1Plqz9y6+cXP/e9AofOdOJ3Z4eyDliZ8XEt
WdPbxROJrAjFKRxgr58DPFn9v3AL3AvDP/Wk/KsXGVn2xAvCYXD6o1VJ9kZM
EIqoFl8lHB/AOZvPxnGGdJwfGbu0+rT+QJAu4TnCeYOc9YVfyiU4YzfSrHqV
3Dre96Enwk5c485PwDPuVHXq+SN9Tzr4ie91wY66O+Jba5CamrSRh9RWI6fh
GOJ3FiwpIDsYVFMUW9mmXZJu8MXnsafN5f2W+kllHT7rJ4vtMZSsFdxyOuCB
rsmNsHqQTvAOlh5gEWPXuYZgX3nT2L+pa0rbxanzU5jJmmdjOgaE333ZzA4j
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
cAajuuZIavwsNjupbbUtPXYztzINxwvt2dkXz7LuYmZb7HXs/qml1KHk/c8b
jdWtZnbfGcGmPG2r4OyWirBFSakRIy2ZpeLuUe57wuWJ+hICdmkrR5wyfldt
8IvzucdX2ZUu/fAPL1tBK/KAn+dCEswO/ZGMo8TXIYguXfsxMKXXArGsHReW
i2rNsxL5U/3aDxk+wwTWn62LCUSM3NnPqC2BCjndpMzMP6pFy6t/X84sgH44
CEEtxNbpzcQQeKtGZuxUcF8cFs/B8Wow09I3OIgUXwHpq/YjVpmqrs7OmiQu
YU1pfTNaTs6q1h+FW5XcYjx2A2cQrYOc5fCV0uMvIPhPu5Fu7lZGaizmsBSs
f06wzluh5imJ1eZry5cl+a7KMmPXVU6nva2yycnpDjnV+ctv1O++I46Ue4uK
z2NzmQ4/aUGvR9fteqFqJUBLYFCZW7Gal9/AXUiE3iWH52sPLsD6smRdVik5
rViVg+ZUnyjcNTsqQ7Cgqmag4Sbcmdx3A/bY9XToImcV0WFC7KSkonWHnKXY
7XwtgmD8XHnOXpmjQJMtrnOOe++jUVB65gN95ztOxc6tPnnYCa670zdqpfTW
39Xvvbc+94H18Hfprz58evNn+S/fUcby6o8YboOBRrrcPI5cokG16dRwGgXt
qqQzFwWHEapHV+bwOJPRBQTysshJhWthSYWrRnzOD0Hq3u/zS59DqgFI7DaC
dJhMnI+FPoOis59WMgtwoedw5GJQ+XkOFUTrJytj57uqn2zDh/lrIKvjRQeW
sQjgG54zXaUYq5lP0FhCfjW6rpLmHqJ0YhH8xJ+y+AlxB5O3TBQxe7MwT2zC
YQKSJSv08q9NDt/kTtJ8c0XZ5qbyt+PSKOlkFVR+njcFnvPEhYjYzbA7O98b
jVXZ6WM3Mmo50c42NvLlYnYz9ZXKSn/1IWwnzCfoZy5XMvtz5c1nV/62cO0t
eFE40uzN93ATmEDE72vLl2EI4SQR1OP4DMzd6cnOodZmfiHwxIMBOdWVK6rF
nD4zTs+YG7VJagdT+GJq4Q+EJ8L2qNPrGNeEw9zeU7QkQoFT/Hmepy72qfyk
YFC/WAmMytjrz1Eb72PgOU9Dhe0o95Xn0isQLB/+BDn1neadbe+eWiaVV7IS
aoUTgC0mZAn0ati6lbKhpl1yZ6a3e9PpjZh29q1ELZS8+9v1uQ/AXtBS+oHA
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
Y9aFBy/8pE6bnzjUk83FcbWgAT8D9dD/BxLzwYc=
          "], {{0, 467.}, {448., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag[
         "Byte", ColorSpace -> "RGB", Interleaving -> False, 
          MetaInformation -> <|
           "Exif" -> <|
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com"|>, 
            "GeoMetaInformation" -> <|
             "GeoModel" -> "ITRF00", 
              "LonLatBox" -> {{-74.28677670000002, -73.67223529999998}, {
               40.454521650000004`, 40.93976135}}, 
              "PlotRange" -> {{-74.28680419921875, -73.67156982421875}, {
               44.306488037109375`, 44.94781494140625}}, "Projection" -> 
              "Mercator", "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com", 
              "TileSources" -> {"Wolfram", "OSM"}|>|>], Selectable -> False], 
        DefaultBaseStyle -> "ImageGraphics", ImageSizeRaw -> {448., 467.}, 
        PlotRange -> {{0, 448.}, {0, 467.}}]], 
      PolygonBox[{{-74.28677670000002, 
       44.30682893909516}, {-74.28677670000002, 
       44.94685070158649}, {-73.67223529999998, 
       44.94685070158649}, {-73.67223529999998, 
       44.30682893909516}, {-74.28677670000002, 44.30682893909516}},
       VertexTextureCoordinates->{{0.00004469714282606674, 
        0.0005315572814765801}, {0.00004469714282606674, 0.998496492485657}, {
        0.9989183377777948, 0.998496492485657}, {0.9989183377777948, 
        0.0005315572814765801}, {0.00004469714282606674, 
        0.0005315572814765801}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], RectangleBox[Scaled[{0.8, 0}], Scaled[{1, 0.2}]]},
       TagBox[
        GridBox[{{
           StyleBox["\"Geo data sources\"", Bold, StripOnInput -> False]}, {
           
           TemplateBox[{
            "\"Wolfram Knowledgebase\"", "\" (\"", 
             "\"https://www.wolfram.com/\"", "\")\""}, "RowDefault"]}, {
           
           TemplateBox[{
            "\"\[Copyright] OpenStreetMap contributors\"", "\" (\"", 
             "\"https://www.openstreetmap.org/copyright\"", "\")\""}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
      Annotation[#, 
       Column[{
         Style["Geo data sources", Bold], 
         Row[{
          "Wolfram Knowledgebase", " (", "https://www.wolfram.com/", ")"}], 
         Row[{
          "\[Copyright] OpenStreetMap contributors", " (", 
           "https://www.openstreetmap.org/copyright", ")"}]}], "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {{{
       {RGBColor[0.790588, 0.201176, 0.], PointSize[Large], Opacity[1], 
        EdgeForm[{Opacity[0.4], Thickness[Tiny]}], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], 
        PolygonBox[{{{-74.040747, 44.6302477311335}, {-74.038368, 
          44.628295587300045`}, {-74.039931, 44.628167644252464`}, {-74.04074,
           44.63020024603912}}, {{-74.047207, 44.61801589130665}, {-74.043455,
           44.616350203130985`}, {-74.044792, 44.61497863878573}, {-74.047207,
           44.617949948973454`}}, CompressedData["
1:eJxF1Hs01GkYB3Bh6yiOZLfVhVZNsWVMjEuXNd7G9KZEenXRbFYjlVu5zURh
XDNujcGqtJ3SKcclZtOqVcgbRU00WEYXGayi0xajy65cdh9/7R9z5nzO88xv
nt97nvdr7hdKDmlraWn5wGfm++C7kZBsGaHlhYoajTVGWVvjWafABkzJJ/+1
GI3eL//WBXzJ7K2zzAYjn4xrirvZhFpoGeQJbTHKrbAu1oX6HVpXqe+AkXmu
ebMK6oHXVb1OjhhFsHsSlFJCXcuaawfXYZT84nnDh9OE8qp0zNPBSQPN52rA
T1RTs5atx6i7p/3fCHBnRomO90aM/lz4IdIFHCNmu9Y6YaT/ZnR+UxahJ5sy
OgOc/zdbIcYqsKGeemIJ9FcbxAc/RhgN04gUffDtPUl/M7kYMW5PSj5CPzfM
vrAALBWFLzGAekdDUXW/C0ZRTPNlM/XWcyFpizZjND32KKM/k9Dj1Y4p6Vsw
EuwiFoXgwCeCxIvge8ee3rJMJ3TEhSt5jjEamvy6OTGNUP/qcfkKqG9mtlbM
Bx9wWBnTD/XJ/qH6ORJCA7TF3X1QL02x+PjlFKEK/6yBGR9zv8PMAe8dVseL
XDFaP4b8c5IJbdO1shOCubVy3+uJcN4V2jalnhiFiht5yWCtuQEdlV4YpegP
PnuVQKh4xcYtPnyYN/Ml51ocoT7M5aXzDmOUGRy7aiKWUJOJdsQKwig/bZSV
FEPoUO9ASmYYRiZny6oenCS07IbnY5EIIy9+vJtWFKEHWW+LUyMwquwTUx0w
16ghuxMcp7DZ13Oc0A3eiuEx8Aq319694DpHTtGOSIwSnnZcKQXf91xQdRbM
P2yUUQH+7VyY/QT4ddT5lmiwZur3byyFGC2SDrELwXx71sPbUJ/0KuM9ExEa
2dtmsgZsF9olKgFfCnKVC8MxkvToO/aFEmqprAsrP4rRgn8alfFhMA9+8T0v
EKP9gxfl78MJPbF1n/UseP+tdcURz8G5Eg7n1EGMdAfdSvqg37FssSbuAEaz
mYwDQnDSi1faLb4YnVbt7NIF1wq+epL3E+ynLUwYQmhLi2VM0j6MjNdcyVGC
FwsKnchejOYwBGqPo4R6JJl47N6N0SO+S2ndMZi/YErmtwujqTTfylRwcJPz
60iCUVO9sjoMPPcO47KtO0Yizg9uMvB0efHpzdthH4IKxy+A99sp1Ee2YSQb
T0BHwIwoL1kB7EN3g1VVJLz/xIN8Eznsj6m3VJYIdpEEtqfDvrkuXJv4Izjw
0P6hG7DPn8++zJOARxTal+Xg1us7VaHgew6GqUuhX2NkszIXvA3puq8FM2cb
/nEXPOCr130T+hNc6+NM4fyc1r3bxOVhpBOz/aodeGlRW7kS7o+tNOcvI/DP
Gj9/d7hfse1mrKtwflZ9yy79ugn2fUeExB08fX5QnQr+PO944y14/tvlHhZN
YLMv7/ecAdtLTILmgHVudNc4g9MPjTDs4D6fyfP8wgXLrs33M4b7npw6rWcN
9nuqtDnDgf38x11QBDZSjWbngbVTDFfy4f/4EhV7B+RHTbwVTwJmq7OMEOSP
9IRp+EPwy4ddcQLIq52262+yYf7vQkre/GKH0YSuZ5ZVBOST0niLADyvq/WB
Wkio2WXF6mbIvxqDoPqbsK+cLr5wDPIy399UKp+5H0s/hXizIE8/R5ubRhO6
SC+gxxRsq5OvGQFHz3YwLrGCvFkcWFp7glBpQfSjAiZGnw53xuaLCSXBjTwG
PL9Ac6sjGPJz+fj4qsnVGMUwh+tsIG87Pl4Qy+H3Sz5sGJCB1y0YbquF/P4P
iki4OQ==
          "]}], {}}, 
       {RGBColor[0.790588, 0.201176, 0.], PointSize[Large], Opacity[1], 
        EdgeForm[{Opacity[0.4], Thickness[Tiny]}], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}]}}, {}}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, "Mercator", "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, "Mercator", "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"VectorMapRemoveLabels" -> True, "OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoStyling[], {
         Directive[
          Opacity[1], 
          RGBColor[0.790588, 0.201176, 0.], 
          EdgeForm[
           Directive[
            Thickness[Tiny], 
            Opacity[0.4]]], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], {
          Polygon[
           
           GeoPosition[{{{40.700167, -74.040747}, {40.698687, -74.038368}, {
             40.69859, -74.039931}, {40.700131, -74.04074}}, {{
             40.690893, -74.047207}, {40.68963, -74.043455}, {
             40.68859, -74.044792}, {40.690843, -74.047207}}, CompressedData["

1:eJxN1H841VccB3Ai/aCVJquMpRRrbkKtpy0cHJUu6n6ZhX5Q0lRcrh/Xr0KI
0M0lZP26TVtu8msP1kKOWpmWh2xCEZXErORHoi7tbX/tj/vc5/Wc85zv+XzO
5/PR3yPk9k1TUlLaid/Uf3OjmqcKoWTvy4FDJ9M4Jn9zJFfXmpJU+2iTBNjR
d4KnbEPJ69+ufmILi/kiVgjvTM6/e+Mkx0K36mkfsKMkvWDVZVWsu2k7KAQb
KdFP1699gPUE65yNGZsoEZm3xzRIONakMC1whOMePbw5fIJjC66cSamGjz6t
PV0Ba4kr64T2lLS03/8ggt/2hd0jfEqeaQ8H2cJF06vWHXOgRKPv9bw7qRwr
O2ElaPufs68mB2Q4UjJ3Vud7Hezv8JCeljlR0stE8RpwaUaNYAg2+FWROIL9
xJHn0b+VEklIoM4crK9YW6rcuo0SMU//s6n15n7t2BKOksmhuuQnKRzbMz7s
VwN7uXCGMvgNL+i6MVzj31pudBz3i2AbvOEXCq3a2CSOTaqrKpvBdrz6gnnw
f3HDiicvqmckcszlW8s/piyPNxx5l8Cxv9MDU72dKfF3vM6TwjHz6tL2wuuH
iLc0jmP+B2TjZ90osa4s3F0cy7EbP3gU9XlQIjxyi8bB+Wpe/m89KYnX6G57
HsMxZVayv8EX903psMw/zLHR8pzZg4coSTkYteJ9FMfO2w24sEBKTiW9Njka
yTHt1bEe4hBKFmZfKb0dwTF+mE2RVRAlzu7RfCUxx9oys6QRcEnXEaYCpy87
FyuFD981dWsP5ViEvPV0C7yM37P9MWwUVf7RR8GUxLQ25crhmSFSGzfY3Ucz
uQD+bmatcSTcI/7+XhjcddGo0RBeJHlhLoN3DVmNV+A8hfMV2haCemq0zg4Q
UWIubA7Jg231ak6cElKS2K6xrkvIsYmRC2utEN/8sVsN0QEcUy/7KbwW8e/o
Pl/4KpBjYbtWftmznxL7qsuih3Dl12auZ/ZRotrNz+vC/tYRmUwLVuMZeAbD
wf1rLYy80Q8PBM2qsFrlvWIB8ttihhse4ljF7M+t5Lso+fiLXGkDvGDiYo7h
TkpmGHh1OvlxrL9OkSvcQUmdu628yp9jvs+SysbcKZlI2l1yDE7w/KZK4UrJ
neqGawHwL3iezXCI5QZ+GjyVhscuqIepd4fjDr7qjUY9pI3HkP2wWbqFTT3q
p+WmcWkQ4q+3MIgaEFCiu12SFgtrLZnt4wBvnnpYONZSamgPj2Z3ZCTCD5dk
pJ6F64sFD4Tw2VyJJB8e1DRdng77qYhlTjBPbe6fN2CdqsWyNeiPmM3Vh3WR
P41lVXkd6B+VSIdLa2DP4PCga+gvM4n0H0343LVPiwgcdV/P5BLy52REmT4s
3ypKdITFJm/rBPCoeuitcpz/fLBUwdC/eu9euWbBfVFhWUtglZ9bKqzg1T58
Vzv0e1bGtnc28CLXwY09mA9xxyZnrYKDmjds6oZLxhy9foSDyfzRl1somRY/
d7k7vrewuHulNuZNRbQxTYQvnLKf44d5JQnXDfwd3pTv3iSglAjM1peZ4/7e
va3Wy+H3qttSjUWoz1HV4y8x/9Sb6293BnMs7w5/3XHMy4o5B6rLUK/Oblqh
AszTTG9dSSH6Y+rzBnDqaJi+bhjina85aWeJ/KhkDg7Anq5GTRNw6GJfeWU4
x0xtwkoDcf4bn7+iMo9wTO/D9KNKFpTkDJY3HcT8rFw61rkF+yN5vVWmmLee
zxuXPrKiRGf4q6dp8L8Vlbze
             "]}]]}, {}, 
         Directive[
          Opacity[1], 
          RGBColor[0.790588, 0.201176, 0.], 
          EdgeForm[
           Directive[
            Thickness[Tiny], 
            Opacity[0.4]]], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], {}}, {}}, {
       GeoBackground -> GeoStyling["GeoPlotMap"], 
        Method -> {"VectorMapRemoveLabels" -> True}}]], 
    "BasicGeoRange" -> {{40.476578, 
     40.917705}, {-74.25884300000001, -73.70016899999999}}, "OriginalInput" -> 
    HoldForm[
      GeoGraphics[{
        GeoStyling[], {
         Directive[
          Opacity[1], 
          RGBColor[0.790588, 0.201176, 0.], 
          EdgeForm[
           Directive[
            Thickness[Tiny], 
            Opacity[0.4]]], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], {
          Polygon[
           
           GeoPosition[{{{40.700167, -74.040747}, {40.698687, -74.038368}, {
             40.69859, -74.039931}, {40.700131, -74.04074}}, {{
             40.690893, -74.047207}, {40.68963, -74.043455}, {
             40.68859, -74.044792}, {40.690843, -74.047207}}, CompressedData["

1:eJxN1H841VccB3Ai/aCVJquMpRRrbkKtpy0cHJUu6n6ZhX5Q0lRcrh/Xr0KI
0M0lZP26TVtu8msP1kKOWpmWh2xCEZXErORHoi7tbX/tj/vc5/Wc85zv+XzO
5/PR3yPk9k1TUlLaid/Uf3OjmqcKoWTvy4FDJ9M4Jn9zJFfXmpJU+2iTBNjR
d4KnbEPJ69+ufmILi/kiVgjvTM6/e+Mkx0K36mkfsKMkvWDVZVWsu2k7KAQb
KdFP1699gPUE65yNGZsoEZm3xzRIONakMC1whOMePbw5fIJjC66cSamGjz6t
PV0Ba4kr64T2lLS03/8ggt/2hd0jfEqeaQ8H2cJF06vWHXOgRKPv9bw7qRwr
O2ElaPufs68mB2Q4UjJ3Vud7Hezv8JCeljlR0stE8RpwaUaNYAg2+FWROIL9
xJHn0b+VEklIoM4crK9YW6rcuo0SMU//s6n15n7t2BKOksmhuuQnKRzbMz7s
VwN7uXCGMvgNL+i6MVzj31pudBz3i2AbvOEXCq3a2CSOTaqrKpvBdrz6gnnw
f3HDiicvqmckcszlW8s/piyPNxx5l8Cxv9MDU72dKfF3vM6TwjHz6tL2wuuH
iLc0jmP+B2TjZ90osa4s3F0cy7EbP3gU9XlQIjxyi8bB+Wpe/m89KYnX6G57
HsMxZVayv8EX903psMw/zLHR8pzZg4coSTkYteJ9FMfO2w24sEBKTiW9Njka
yTHt1bEe4hBKFmZfKb0dwTF+mE2RVRAlzu7RfCUxx9oys6QRcEnXEaYCpy87
FyuFD981dWsP5ViEvPV0C7yM37P9MWwUVf7RR8GUxLQ25crhmSFSGzfY3Ucz
uQD+bmatcSTcI/7+XhjcddGo0RBeJHlhLoN3DVmNV+A8hfMV2haCemq0zg4Q
UWIubA7Jg231ak6cElKS2K6xrkvIsYmRC2utEN/8sVsN0QEcUy/7KbwW8e/o
Pl/4KpBjYbtWftmznxL7qsuih3Dl12auZ/ZRotrNz+vC/tYRmUwLVuMZeAbD
wf1rLYy80Q8PBM2qsFrlvWIB8ttihhse4ljF7M+t5Lso+fiLXGkDvGDiYo7h
TkpmGHh1OvlxrL9OkSvcQUmdu628yp9jvs+SysbcKZlI2l1yDE7w/KZK4UrJ
neqGawHwL3iezXCI5QZ+GjyVhscuqIepd4fjDr7qjUY9pI3HkP2wWbqFTT3q
p+WmcWkQ4q+3MIgaEFCiu12SFgtrLZnt4wBvnnpYONZSamgPj2Z3ZCTCD5dk
pJ6F64sFD4Tw2VyJJB8e1DRdng77qYhlTjBPbe6fN2CdqsWyNeiPmM3Vh3WR
P41lVXkd6B+VSIdLa2DP4PCga+gvM4n0H0343LVPiwgcdV/P5BLy52REmT4s
3ypKdITFJm/rBPCoeuitcpz/fLBUwdC/eu9euWbBfVFhWUtglZ9bKqzg1T58
Vzv0e1bGtnc28CLXwY09mA9xxyZnrYKDmjds6oZLxhy9foSDyfzRl1somRY/
d7k7vrewuHulNuZNRbQxTYQvnLKf44d5JQnXDfwd3pTv3iSglAjM1peZ4/7e
va3Wy+H3qttSjUWoz1HV4y8x/9Sb6293BnMs7w5/3XHMy4o5B6rLUK/Oblqh
AszTTG9dSSH6Y+rzBnDqaJi+bhjina85aWeJ/KhkDg7Anq5GTRNw6GJfeWU4
x0xtwkoDcf4bn7+iMo9wTO/D9KNKFpTkDJY3HcT8rFw61rkF+yN5vVWmmLee
zxuXPrKiRGf4q6dp8L8Vlbze
             "]}]]}, {}, 
         Directive[
          Opacity[1], 
          RGBColor[0.790588, 0.201176, 0.], 
          EdgeForm[
           Directive[
            Thickness[Tiny], 
            Opacity[0.4]]], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], {}}, {}}, {
       GeoBackground -> GeoStyling["GeoPlotMap"], 
        Method -> {"VectorMapRemoveLabels" -> True}}]], 
    "BasicGeoRange" -> {{40.454521650000004`, 
     40.93976135}, {-74.28677670000002, -73.67223529999998}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> GeoStyling["StreetMapNoLabels"], GeoCenter -> 
      GeoPosition[{40.6971415, -73.979506}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-74.28677670000002, -73.67223529999998}, {
       44.30682893909516, 44.94685070158649}}, GeoGridRangePadding -> None, 
      GeoModel -> "ITRF00", GeoProjection -> "Mercator", 
      GeoRange -> {{40.454521650000004`, 
       40.93976135}, {-74.28677670000002, -73.67223529999998}}, 
      GeoRangePadding -> Full, GeoResolution -> Automatic, GeoScaleBar -> 
      None, GeoServer -> {Automatic}, GeoZoomLevel -> 10, 
      MetaInformation -> <|"GeoMetaInformation" -> <|"Attribution" -> Row[{
             Hyperlink["Wolfram Knowledgebase", "https://www.wolfram.com/"], 
             ", ", 
             Hyperlink[
             "\[Copyright] OpenStreetMap contributors", 
              "https://www.openstreetmap.org/copyright"]}], "GeoModel" -> 
          "ITRF00", 
          "LonLatBox" -> {{-74.28677670000002, -73.67223529999998}, {
           40.454521650000004`, 40.93976135}}, 
          "PlotRange" -> {{-74.28680419921875, -73.67156982421875}, {
           44.306488037109375`, 44.94781494140625}}, "Projection" -> 
          "Mercator", "Software" -> 
          "Created with the Wolfram Language: www.wolfram.com", 
          "TileSources" -> {"Wolfram", "OSM"}|>|>}},
  PlotRange->{{-74.28677670000002, -73.67223529999998}, {44.30682893909516, 
   44.94685070158649}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.960831101393292*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"b290da0a-dffa-44b9-9cd9-5f231d7a37de"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.960831467845725*^9, 
  3.9608314689152412`*^9}},ExpressionUUID->"55d700a8-fedd-4da6-9a05-\
6ad9e18be7e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"srTmp", "\[NotEqual]", "sr"}], ",", 
      RowBox[{
       RowBox[{"SeedRandom", "[", "sr", "]"}], ";", 
       RowBox[{"mode", "=", "1"}], ";", 
       RowBox[{"srTmp", "=", "sr"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"nodes", "\[NotEqual]", "nodesTmp"}], ",", 
      RowBox[{
       RowBox[{"mode", "=", "1"}], ";", 
       RowBox[{"nodesTmp", "=", "nodes"}]}]}], "]"}], ";", 
    RowBox[{"If", "[", 
     RowBox[{"mmas", ",", 
      RowBox[{"nAnts", "=", "nodes"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"mmas", "&&", 
       RowBox[{"mmas", "\[NotEqual]", "mmasTmp"}]}], ",", 
      RowBox[{
       RowBox[{"nAnts", "=", "nodes"}], ";", 
       RowBox[{"\[Alpha]", "=", "1"}], ";", 
       RowBox[{"\[Beta]", "=", "3"}], ";", 
       RowBox[{"nCand", "=", "20"}], ";", 
       RowBox[{"evapFac", "=", "0.98"}], ";", 
       RowBox[{"mmasTmp", "=", "mmas"}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Which", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mode", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pts", "=", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"RandomSample", "[", 
           RowBox[{
            RowBox[{"Union", "[", 
             RowBox[{"RandomReal", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.2", ",", "6.8"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"100", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
            "nodes"}], "]"}], ",", "0.001"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"time", "=", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Time: 0.0\>\"", ",", "12", ",", " ", 
          RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"currentPlot", "=", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Yellow", ",", 
            RowBox[{"PointSize", "[", "0.018", "]"}], ",", 
            RowBox[{"Point", "[", "pts", "]"}]}], "}"}], ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"GrayLevel", "[", "0.8", "]"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "440"}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "7"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", "1"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Adjust parameters\>\"", ",", "12"}], "]"}]}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"message", "=", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Click \\\"run\\\" to start\>\"", ",", "12", ",", " ", 
          RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}]}], 
         "]"}]}], ";", 
       RowBox[{"s", "=", "False"}], ";", 
       RowBox[{"mode", "=", "4"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"mode", "\[Equal]", "2"}], ",", 
      RowBox[{
       RowBox[{"s", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ants", ",", "antsPlot", ",", "commonEdges", ",", "cycleEdges", ",",
            "cycleLengths", ",", "cycles", ",", "high", ",", "iterationBest", 
           ",", "l1", ",", "l2", ",", "label", ",", 
           RowBox[{"loop", "=", "0"}], ",", "low", ",", 
           RowBox[{"maxLim", "=", 
            RowBox[{"2", "nodes"}]}], ",", 
           RowBox[{"minLim", "=", 
            RowBox[{
             RowBox[{"nodes", "*", "nodes"}], "-", 
             RowBox[{"2", "nodes"}]}]}], ",", "newCycles", ",", "phMax", ",", 
           "phMin", ",", "start", ",", "\[IndentingNewLine]", "optimalTour", ",", 
           RowBox[{"edgesAsPairs", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "j"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"nodes", "-", "1"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", 
                  RowBox[{"i", "+", "1"}], ",", "nodes"}], "}"}]}], "]"}], ",",
               "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"edgeSegments", "=", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"pts", "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], "]"}], 
               "&"}], "/@", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"i", ",", "j"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{"nodes", "-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", 
                    RowBox[{"i", "+", "1"}], ",", "nodes"}], "}"}]}], "]"}], ",",
                 "1"}], "]"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"nElite", "=", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"Ceiling", "[", 
               RowBox[{"nAnts", "*", 
                RowBox[{"eliteAnts", "/", "100"}]}], "]"}], ",", "1"}], 
             "]"}]}], ",", 
           RowBox[{"globalBest", "=", "100.0"}], ",", 
           RowBox[{"globalBestCycle", "=", 
            RowBox[{"{", 
             RowBox[{"100.0", ",", 
              RowBox[{"{", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
           "MMASphMinMaxRatio", ",", "phMatrix", ",", "updateAnt", ",", 
           "updateAntCand", ",", "prob", ",", "depositPheromone", ",", "TIA", 
           ",", "nbh", ",", "nnb", ",", "\[IndentingNewLine]", 
           RowBox[{"WAM", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"EuclideanDistance", "[", 
               RowBox[{
                RowBox[{"pts", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"pts", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "nodes"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "nodes"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"cityPlot", "=", 
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{"Yellow", ",", 
               RowBox[{"PointSize", "[", "0.018", "]"}], ",", 
               RowBox[{"Point", "[", "pts", "]"}]}], "}"}], "]"}]}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"updateAnt", "[", "path_", "]"}], ":=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "path", "]"}], "<", "nodes"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"curr", "=", 
                 RowBox[{"path", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"updateAnt", "[", 
                RowBox[{"Append", "[", 
                 RowBox[{"path", ",", 
                  RowBox[{"RandomChoice", "[", 
                   RowBox[{"prob", "[", 
                    RowBox[{"curr", ",", 
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"nbh", "[", 
                    RowBox[{"[", "curr", "]"}], "]"}], ",", "path"}], "]"}]}],
                     "]"}], "]"}]}], "]"}], "]"}]}], "]"}], ",", "path"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"updateAntCand", "[", "path_", "]"}], ":=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "path", "]"}], "<", "nodes"}], ",", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"curr", "=", 
                  RowBox[{"path", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
                 RowBox[{"pos", "=", 
                  RowBox[{"Complement", "[", 
                   RowBox[{
                    RowBox[{"nnb", "[", 
                    RowBox[{"[", 
                    RowBox[{"path", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
                    "path"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"updateAntCand", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"pos", "\[Equal]", 
                   RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Append", "[", 
                   RowBox[{"path", ",", 
                    RowBox[{"RandomChoice", "[", 
                    RowBox[{"prob", "[", 
                    RowBox[{"curr", ",", 
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"nbh", "[", 
                    RowBox[{"[", "curr", "]"}], "]"}], ",", "path"}], "]"}]}],
                     "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Append", "[", 
                   RowBox[{"path", ",", 
                    RowBox[{"RandomChoice", "[", 
                    RowBox[{"prob", "[", 
                    RowBox[{"curr", ",", "pos"}], "]"}], "]"}]}], "]"}]}], 
                 "]"}], "]"}]}], "]"}], ",", "path"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"prob", "[", 
            RowBox[{"curr_Integer", ",", "nbh_List"}], "]"}], ":=", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"ph", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"phMatrix", "[", 
                   RowBox[{"[", 
                    RowBox[{"curr", ",", "nbh"}], "]"}], "]"}], "^", 
                  "\[Alpha]"}], ")"}], "*", 
                RowBox[{"(", 
                 RowBox[{"1.0", "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"WAM", "[", 
                    RowBox[{"[", 
                    RowBox[{"curr", ",", "nbh"}], "]"}], "]"}], "^", 
                    "\[Beta]"}], ")"}]}], ")"}]}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"ph", "/", 
               RowBox[{"Total", "[", "ph", "]"}]}], "\[Rule]", "nbh"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"depositPheromone", "[", 
            RowBox[{"{", 
             RowBox[{"tourLength_", ",", "tourEdges_"}], "}"}], "]"}], ":=", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"p", "=", 
               RowBox[{"1.0", "/", "tourLength"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Scan", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"phMatrix", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "=", 
                  RowBox[{
                   RowBox[{"phMatrix", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "=", 
                   RowBox[{
                    RowBox[{"phMatrix", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "+", 
                    "p"}]}]}], ")"}], "&"}], ",", "tourEdges"}], "]"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TIA", "[", "cyc_", "]"}], ":=", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"h", "=", "cyc"}], ",", 
               RowBox[{"flag", "=", "True"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"While", "[", 
               RowBox[{"flag", ",", 
                RowBox[{
                 RowBox[{"flag", "=", "False"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Do", "[", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"WAM", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"h", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "+", 
                    RowBox[{"WAM", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"h", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "]"}]}], "<", 
                    RowBox[{
                    RowBox[{"WAM", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"h", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "+", 
                    RowBox[{"WAM", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"h", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"h", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"RotateLeft", "[", 
                    RowBox[{"h", ",", "1"}], "]"}], "/.", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x_", ",", "y_", ",", "z___"}], "}"}], "\[Rule]", 
                    
                    RowBox[{"{", 
                    RowBox[{"y", ",", "x", ",", "z"}], "}"}]}]}], ")"}]}], ";", 
                    RowBox[{"flag", "=", "True"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"h", "=", 
                    RowBox[{"RotateLeft", "[", 
                    RowBox[{"h", ",", "1"}], "]"}]}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Length", "[", "cyc", "]"}], "}"}]}], "]"}]}]}], 
               "]"}], ";", 
              RowBox[{"Append", "[", 
               RowBox[{"h", ",", 
                RowBox[{"h", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"message", "=", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<Busy! \>\"", "<>", 
              RowBox[{"ToString", "[", "nAnts", "]"}], 
              "<>", "\"\< ants on the move. Elite ants: \>\"", "<>", 
              RowBox[{"If", "[", 
               RowBox[{"mmas", ",", "\"\<1\[VeryThinSpace] (MMAS)\>\"", ",", 
                RowBox[{"ToString", "[", "nElite", "]"}]}], "]"}]}], ",", 
             "12", ",", " ", 
             RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"nbh", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"Range", "[", "nodes", "]"}], ",", 
                 RowBox[{"{", "#", "}"}]}], "]"}], ")"}], "&"}], ",", 
             RowBox[{"Range", "[", "nodes", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"nCand", ">", "0"}], ",", 
            RowBox[{"nnb", "=", 
             RowBox[{"initNNB", "[", 
              RowBox[{"nCand", ",", "nbh", ",", "WAM"}], "]"}]}]}], "]"}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"mmas", ",", 
            RowBox[{
             RowBox[{"nAnts", "=", "nodes"}], ";", 
             RowBox[{"MMASphMinMaxRatio", "=", 
              RowBox[{"1.0", "/", 
               RowBox[{"(", 
                RowBox[{"2", "nodes"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"phMatrix", "=", 
              RowBox[{"Table", "[", 
               RowBox[{"100.0", ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "1", ",", "nodes"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"c", ",", "1", ",", "nodes"}], "}"}]}], "]"}]}]}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"phMatrix", "=", 
             RowBox[{"Table", "[", 
              RowBox[{"initPh", ",", 
               RowBox[{"{", 
                RowBox[{"r", ",", "1", ",", "nodes"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"c", ",", "1", ",", "nodes"}], "}"}]}], "]"}]}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"antsPlot", "=", 
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Red", ",", 
               RowBox[{"AbsoluteThickness", "[", "4", "]"}], ",", 
               RowBox[{"Line", "[", "edgeSegments", "]"}]}], "}"}], ",", 
             RowBox[{"Background", "\[Rule]", 
              RowBox[{"GrayLevel", "[", "0.8", "]"}]}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "7"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "7"}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"currentPlot", "=", 
           RowBox[{"Show", "[", 
            RowBox[{"antsPlot", ",", "cityPlot", ",", 
             RowBox[{"ImageSize", "\[Rule]", "440"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Level of convergence: 0.\>\"", ",", "12", ",", 
                " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}]}], 
               "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"optimalTour", "=", 
           RowBox[{"shortestTour", "[", "pts", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"start", "=", 
           RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"mode", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"loop", "++"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"nCand", ">", "0"}], ",", "\[IndentingNewLine]", 
               RowBox[{"ants", "=", 
                RowBox[{"Map", "[", 
                 RowBox[{"updateAntCand", ",", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "nodes"}], "}"}], "]"}], "}"}], ",", 
                    RowBox[{"{", "nAnts", "}"}]}], "]"}]}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"ants", "=", 
                RowBox[{"Map", "[", 
                 RowBox[{"updateAnt", ",", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "nodes"}], "}"}], "]"}], "}"}], ",", 
                    RowBox[{"{", "nAnts", "}"}]}], "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"newCycles", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"tia", ",", 
                  RowBox[{"TIA", "[", "#", "]"}], ",", 
                  RowBox[{"Append", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], "&"}], "/@",
                "ants"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"cycleEdges", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"Partition", "[", 
                 RowBox[{"#", ",", "2", ",", "1"}], "]"}], "&"}], "/@", 
               "newCycles"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"cycleLengths", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"Round", "[", 
                 RowBox[{
                  RowBox[{"Total", "[", 
                   RowBox[{"Extract", "[", 
                    RowBox[{"WAM", ",", "#"}], "]"}], "]"}], ",", "0.0001"}], 
                 "]"}], "&"}], "/@", "cycleEdges"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cycles", "=", 
              RowBox[{"Sort", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{"cycleLengths", ",", "cycleEdges"}], "}"}], "]"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"phMatrix", "=", 
              RowBox[{"evapFac", "*", "phMatrix"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{"mmas", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Which", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"loop", "<", "26"}], ",", 
                  RowBox[{"depositPheromone", "[", 
                   RowBox[{"cycles", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"25", "<", "loop", "<", "76"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"loop", ",", "5"}], "]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{"depositPheromone", "[", "globalBestCycle", "]"}],
                     ",", 
                    RowBox[{"depositPheromone", "[", 
                    RowBox[{"cycles", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"75", "<", "loop", "<", "126"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"loop", ",", "3"}], "]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{"depositPheromone", "[", "globalBestCycle", "]"}],
                     ",", 
                    RowBox[{"depositPheromone", "[", 
                    RowBox[{"cycles", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"125", "<", "loop", "<", "251"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"loop", ",", "2"}], "]"}], "\[Equal]", "0"}], ",", 
                    RowBox[{"depositPheromone", "[", "globalBestCycle", "]"}],
                     ",", 
                    RowBox[{"depositPheromone", "[", 
                    RowBox[{"cycles", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"250", "<", "loop"}], ",", 
                  RowBox[{"depositPheromone", "[", "globalBestCycle", "]"}]}],
                  "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"iterationBest", "=", 
                 RowBox[{"Min", "[", "cycleLengths", "]"}]}], ";", 
                RowBox[{"globalBest", "=", 
                 RowBox[{"Min", "[", 
                  RowBox[{"cycleLengths", ",", "globalBest"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"globalBest", "<", 
                   RowBox[{"globalBestCycle", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{"globalBestCycle", "=", 
                   RowBox[{"First", "[", "cycles", "]"}]}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"phMax", "=", 
                 RowBox[{"1", "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "evapFac"}], ")"}], "globalBest"}], 
                   ")"}]}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"phMin", "=", 
                 RowBox[{"MMASphMinMaxRatio", "*", "phMax"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"phMatrix", "=", 
                 RowBox[{"(", 
                  RowBox[{"phMatrix", "/.", 
                   RowBox[{"x_Real", "\[Rule]", 
                    RowBox[{"Min", "[", 
                    RowBox[{"x", ",", "phMax"}], "]"}]}]}], ")"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"phMatrix", "=", 
                 RowBox[{"(", 
                  RowBox[{"phMatrix", "/.", 
                   RowBox[{"x_Real", "\[Rule]", 
                    RowBox[{"Max", "[", 
                    RowBox[{"x", ",", "phMin"}], "]"}]}]}], ")"}]}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Scan", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"depositPheromone", "[", "#", "]"}], "&"}], ",", 
                  RowBox[{"cycles", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ";;", "nElite"}], "]"}], "]"}]}], "]"}], ";",
                 "\[IndentingNewLine]", 
                RowBox[{"phMax", "=", 
                 RowBox[{"Max", "[", "phMatrix", "]"}]}], ";", 
                RowBox[{"phMin", "=", 
                 RowBox[{"phMinMaxRatio", "*", "phMax"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"phMatrix", "=", 
                 RowBox[{"(", 
                  RowBox[{"phMatrix", "/.", 
                   RowBox[{"x_Real", "\[Rule]", 
                    RowBox[{"Max", "[", 
                    RowBox[{"x", ",", "phMin"}], "]"}]}]}], ")"}]}]}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"time", "=", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"\"\<Time: \>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"AbsoluteTime", "[", "]"}], "-", "start"}], ",", 
                    "0.1"}], "]"}], "]"}]}], ",", "12", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"antsPlot", "=", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Red", ",", 
                  RowBox[{"AbsoluteThickness", "[", "4", "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"MapThread", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", 
                    RowBox[{"#1", "^", "1.2"}], "]"}], ",", 
                    RowBox[{"Line", "[", "#2", "]"}]}], "}"}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Extract", "[", 
                    RowBox[{"phMatrix", ",", "edgesAsPairs"}], "]"}], "/", 
                    RowBox[{"Max", "[", "phMatrix", "]"}]}], ",", 
                    "edgeSegments"}], "}"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"Background", "\[Rule]", 
                 RowBox[{"GrayLevel", "[", "0.8", "]"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "7"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "7"}], "}"}]}], "}"}]}]}], "]"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"low", "=", 
              RowBox[{"Count", "[", 
               RowBox[{"phMatrix", ",", 
                RowBox[{"x_", "/;", 
                 RowBox[{"x", "<", 
                  RowBox[{"0.05", "phMax"}]}]}], ",", "2"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"high", "=", 
              RowBox[{"Count", "[", 
               RowBox[{"phMatrix", ",", 
                RowBox[{"x_", "/;", 
                 RowBox[{"x", ">", 
                  RowBox[{"0.85", "phMax"}]}]}], ",", "2"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", "low", ")"}], "<", "minLim"}], "||", 
                RowBox[{
                 RowBox[{"(", "high", ")"}], "<", "maxLim"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"currentPlot", "=", 
                RowBox[{"Show", "[", 
                 RowBox[{"antsPlot", ",", "cityPlot", ",", 
                  RowBox[{"ImageSize", "\[Rule]", "440"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"PlotLabel", "\[Rule]", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Level of convergence: \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sign", "[", "low", "]"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"low", "+", "high"}], ")"}], "/", 
                    RowBox[{"nodes", "^", "2"}]}]}], ",", "0.01"}], "]"}], 
                    "]"}]}], ",", "12", ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}]}], 
                    "]"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"l1", "=", 
                    RowBox[{"optimalTour", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "\[Equal]", 
                   RowBox[{"(", 
                    RowBox[{"l2", "=", 
                    RowBox[{"cycles", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"message", "=", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Optimal tour found. Length: \>\"", "<>", 
                    RowBox[{"ToString", "[", "l1", "]"}]}], ",", "12", ",", 
                    " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}]}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"commonEdges", "=", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Intersection", "[", 
                    RowBox[{
                    RowBox[{"Sort", "/@", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"optimalTour", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "2", ",", "1"}], 
                    "]"}]}], ",", 
                    RowBox[{"Sort", "/@", 
                    RowBox[{"cycles", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "]"}], "]"}]}],
                    ";", "\[IndentingNewLine]", 
                   RowBox[{"time", "=", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Time: \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"AbsoluteTime", "[", "]"}], "-", "start"}], ",", 
                    "0.1"}], "]"}], "]"}], "<>", "\"\<. Common edges: \>\"", "<>", 
                    RowBox[{"ToString", "[", "commonEdges", "]"}]}], ",", 
                    "12", ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"message", "=", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Optimal tour (--): \>\"", "<>", 
                    RowBox[{"ToString", "[", "l1", "]"}], 
                    "<>", "\"\<. Ants tour: \>\"", "<>", 
                    RowBox[{"ToString", "[", "l2", "]"}]}], ",", "12", ",", 
                    " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}]}], 
                    "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"label", "=", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"l1", "==", "l2"}], ",", "\"\<Great Job!\>\"", 
                   ",", "\"\<Not optimal\>\""}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"currentPlot", "=", 
                 RowBox[{"Show", "[", 
                  RowBox[{"antsPlot", ",", 
                   RowBox[{"Graphics", "[", 
                    RowBox[{"{", 
                    RowBox[{"Dashed", ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"pts", "[", 
                    RowBox[{"[", 
                    RowBox[{"optimalTour", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
                    "}"}], "]"}], ",", "cityPlot", ",", 
                   RowBox[{"ImageSize", "\[Rule]", "440"}], ",", 
                   RowBox[{"PlotLabel", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"label", ",", "12", ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", "\"\<Times\>\""}]}], 
                    "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"mode", "=", "4"}]}]}], "]"}]}]}], "]"}]}]}], "]"}]}],
       ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"mode", "\[Equal]", "3"}], ",", 
      RowBox[{"currentPlot", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Yellow", ",", 
             RowBox[{"PointSize", "[", "0.018", "]"}], ",", 
             RowBox[{"Point", "[", "pts", "]"}]}], "}"}], ",", 
           RowBox[{"Background", "\[Rule]", 
            RowBox[{"GrayLevel", "[", "0.8", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "\[Rule]", "440"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "7"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "7"}], "}"}]}], "}"}]}]}], "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Adjust parameters\>\"", ",", "12"}], "]"}]}]}], 
        "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"mode", "\[Equal]", "4"}], ",", "True"}], "\[IndentingNewLine]",
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Which", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"save", "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"savedTime", "=", "time"}], ";", 
       RowBox[{"savedMessage", "=", "message"}], ";", 
       RowBox[{"savedPlot", "=", "currentPlot"}], ";", 
       RowBox[{"s", "=", "False"}], ";", 
       RowBox[{"save", "=", "3"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"save", "\[Equal]", "2"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"currentPlot", ",", "savedPlot"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{"savedPlot", ",", "currentPlot"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"message", ",", "savedMessage"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{"savedMessage", ",", "message"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"time", ",", "savedTime"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{"savedTime", ",", "time"}], "}"}]}], ";", 
       RowBox[{"s", "=", 
        RowBox[{"!", "s"}]}], ";", 
       RowBox[{"save", "=", "3"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"save", "\[Equal]", "3"}], ",", "True"}], "\[IndentingNewLine]",
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"mode", "=", "4"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Pane", "[", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Dynamic", "[", "currentPlot", "]"}], ",", 
         RowBox[{"Dynamic", "[", "message", "]"}], ",", 
         RowBox[{"Dynamic", "[", "time", "]"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"If", "[", 
          RowBox[{"s", ",", "Green", ",", 
           RowBox[{"GrayLevel", "[", "0.8", "]"}]}], "]"}]}], "}"}]}]}], 
     "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<random seed\>\"", ",", "9"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sr", ",", "123", ",", "\"\<\>\""}], "}"}], ",", "1", ",", 
     "200", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
     RowBox[{"AppearanceElements", "\[Rule]", "\"\<InputField\>\""}], ",", 
     RowBox[{"Enabled", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"mode", "\[NotEqual]", "2"}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mode", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", "\"\<new\>\""}], ",", 
       RowBox[{"2", "\[Rule]", "\"\<run\>\""}], ",", 
       RowBox[{"3", "\[Rule]", "\"\<stop\>\""}]}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nodes", ",", "25", ",", "\"\<cities\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "20", ",", "25", ",", "30", ",", "40", ",", "50"}], 
      "}"}], ",", 
     RowBox[{"Enabled", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"mode", "\[NotEqual]", "2"}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nAnts", ",", "25", ",", "\"\<ants\>\""}], "}"}], ",", "10", ",",
      "200", ",", "5", ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"AppearanceElements", " ", "\[Rule]", " ", "None"}], ",", 
     RowBox[{"Enabled", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"!", "mmas"}], "&&", 
        RowBox[{"mode", "\[NotEqual]", "2"}]}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<elite ants (%)\>\"", ",", "9"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eliteAnts", ",", "10", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "8", ",", 
       "10", ",", "15", ",", "20", ",", "30", ",", "50", ",", "80", ",", 
       "100"}], "}"}], ",", 
     RowBox[{"Enabled", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"!", "mmas"}], "&&", 
        RowBox[{"mode", "\[NotEqual]", "2"}]}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<candidate list:\>\"", ",", "9"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nCand", ",", "16", ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<m\>\"", ",", "9"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "\[Rule]", "\"\<All\>\""}], ",", 
       RowBox[{"2", "\[Rule]", "2"}], ",", 
       RowBox[{"3", "\[Rule]", "3"}], ",", 
       RowBox[{"4", "\[Rule]", "4"}], ",", 
       RowBox[{"5", "\[Rule]", "5"}], ",", 
       RowBox[{"6", "\[Rule]", "6"}], ",", 
       RowBox[{"7", "\[Rule]", "7"}], ",", 
       RowBox[{"8", "\[Rule]", "8"}], ",", 
       RowBox[{"9", "\[Rule]", "9"}], ",", 
       RowBox[{"10", "\[Rule]", "10"}], ",", 
       RowBox[{"11", "\[Rule]", "11"}], ",", 
       RowBox[{"12", "\[Rule]", "12"}], ",", 
       RowBox[{"14", "\[Rule]", "14"}], ",", 
       RowBox[{"16", "\[Rule]", "16"}], ",", 
       RowBox[{"18", "\[Rule]", "18"}], ",", 
       RowBox[{"20", "\[Rule]", "20"}], ",", 
       RowBox[{"25", "\[Rule]", "25"}]}], "}"}], ",", 
     RowBox[{"Enabled", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"mode", "\[NotEqual]", "2"}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tia", ",", "True", ",", "\"\<TIA\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}], ",", 
     RowBox[{"Enabled", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"mode", "\[NotEqual]", "2"}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mmas", ",", "False", ",", "\"\<MMAS\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}], ",", 
     RowBox[{"Enabled", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"mode", "\[NotEqual]", "2"}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<pheromone:\\n\>\"", ",", "9"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<    evaporation\>\"", ",", "9"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"evapFac", ",", "0.98", ",", "\"\<\>\""}], "}"}], ",", "0.8", ",",
      "1.0", ",", "0.01", ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"AppearanceElements", " ", "\[Rule]", " ", "None"}], ",", 
     RowBox[{"Enabled", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"mode", "\[NotEqual]", "2"}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<    initial level\>\"", ",", "9"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"initPh", ",", "1.0", ",", "\"\<\>\""}], "}"}], ",", "0.1", ",",
      "5.0", ",", "0.1", ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"AppearanceElements", " ", "\[Rule]", " ", "None"}], ",", 
     RowBox[{"Enabled", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"!", "mmas"}], "&&", 
        RowBox[{"mode", "\[NotEqual]", "2"}]}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<    min/max ratio\>\"", ",", "9"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"phMinMaxRatio", ",", "0.01", ",", "\"\<\>\""}], "}"}], ",", 
     "0.001", ",", "0.04", ",", "0.001", ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"AppearanceElements", " ", "\[Rule]", " ", "None"}], ",", 
     RowBox[{"Enabled", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"!", "mmas"}], "&&", 
        RowBox[{"mode", "\[NotEqual]", "2"}]}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "1.0", ",", "\"\<\[Alpha]\>\""}], "}"}], ",", 
     "0.0", ",", "5.0", ",", "0.1", ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"AppearanceElements", " ", "\[Rule]", " ", "None"}], ",", 
     RowBox[{"Enabled", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"mode", "\[NotEqual]", "2"}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "3.0", ",", "\"\<\[Beta]\>\""}], "}"}], ",", 
     "0.0", ",", "5.0", ",", "0.1", ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"AppearanceElements", " ", "\[Rule]", " ", "None"}], ",", 
     RowBox[{"Enabled", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"mode", "\[NotEqual]", "2"}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"save", ",", "3", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", "\"\<save\>\""}], ",", 
       RowBox[{"2", "\[Rule]", "\"\<toggle\>\""}]}], "}"}], ",", 
     RowBox[{"Enabled", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"mode", "\[NotEqual]", "2"}], ")"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"srTmp", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nodesTmp", ",", "25"}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mmasTmp", ",", "False"}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"currentPlot", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"message", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"savedTime", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"savedMessage", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"savedPlot", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"TrackedSymbols", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"AutorunSequencing", "\[Rule]", 
    RowBox[{"{", "3", "}"}]}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"shortestTour", "[", "pts_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ln", ",", "cyc"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ln", ",", "cyc"}], "}"}], "=", 
           RowBox[{"FindShortestTour", "[", "pts", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Round", "[", 
              RowBox[{"ln", ",", "0.0001"}], "]"}], ",", 
             RowBox[{"Append", "[", 
              RowBox[{"cyc", ",", 
               RowBox[{"cyc", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"initNNB", "[", 
        RowBox[{"cand_", ",", "nbh_", ",", "wam_"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"tmpNNB", ",", "tmpMX", ",", 
           RowBox[{"n", "=", 
            RowBox[{"Length", "[", "wam", "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Scan", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"tmpNNB", "[", "#", "]"}], "=", 
               RowBox[{"Nearest", "[", 
                RowBox[{
                 RowBox[{"nbh", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ",", "#", ",", "cand", ",", 
                 
                 RowBox[{"DistanceFunction", "\[Rule]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"wam", "[", 
                    RowBox[{"[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], "]"}], "&"}], ")"}]}]}],
                 "]"}]}], ")"}], "&"}], ",", 
            RowBox[{"Range", "[", "n", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"tmpMX", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"r", ",", "1", ",", "n"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"c", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Scan", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"tmpMX", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "=", "1"}],
               ")"}], "&"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Union", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Union", "[", 
                   RowBox[{
                    RowBox[{"Tuples", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "#", "}"}], ",", 
                    RowBox[{"tmpNNB", "[", "#", "]"}]}], "}"}], "]"}], ",", 
                    RowBox[{"Tuples", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tmpNNB", "[", "#", "]"}], ",", 
                    RowBox[{"{", "#", "}"}]}], "}"}], "]"}]}], "]"}], "&"}], ",", 
                 RowBox[{"Range", "[", "n", "]"}]}], "]"}], ",", "1"}], "]"}],
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"tmpMX", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
              ")"}], "&"}], ",", 
            RowBox[{"Range", "[", "n", "]"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", ")"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"6f0f65b8-45b7-4056-a9d0-5cc339e79209"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`currentPlot$$ = Graphics[{
      RGBColor[1, 1, 0], 
      PointSize[0.018], 
      Point[CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/UrNkGONDLODX5JAhOUWToeQx0tnH1H4Yi/cfODU
QtdP9pvmvl9+zJvDIab/0FeNGFGHi0q3f9a9EncAkll7vkg4RKVY3/fnlXR4
WCWyzv3hK3tlsAS3A9iYDdwOM/KEmg94STrMmgkCPA65z3+v/Bgk5iB+89z3
4GQJh2qQtqoP9geBtm37/N++dzpIwzf7497mnY4J7A67PHmYtNu/2D8Bm8fv
cH1xgS3X9dv2TglPLyjdfmnvYBoHVCLu8AHoSvPOn/YgXU8vCDrMAaouymCH
uovHAWSLyLrf9mtkQC6WdIDZ5wESPi7uADauUhDqT0EHmL/B5nIKOfiADE4V
dDhZtm++1HoBBzsukEt4HFjC+HQ3zeV3qM/aUzJZgtuBrXGqc3cOF8R/j9kc
ijMmvq2xZ3LYIdf6OnAHjwO/Lsjkf/ZnzwCBjxDUnVIOEP++tQcAtQu6AA==

       "]]}, Background -> GrayLevel[0.8], ImageSize -> 440, 
     PlotRange -> {{0, 7}, {0, 7}}, ImagePadding -> 1, PlotLabel -> 
     Style["Adjust parameters", 12]], $CellContext`eliteAnts$$ = 
    10, $CellContext`evapFac$$ = 0.98, $CellContext`initPh$$ = 
    1., $CellContext`message$$ = Style[
    "Click \"run\" to start", 12, FontFamily -> 
     "Times"], $CellContext`mmas$$ = False, $CellContext`mmasTmp$$ = 
    False, $CellContext`mode$$ = 4, $CellContext`nAnts$$ = 
    25, $CellContext`nCand$$ = 16, $CellContext`nodes$$ = 
    25, $CellContext`nodesTmp$$ = 25, $CellContext`phMinMaxRatio$$ = 
    0.01, $CellContext`pts$$ = CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/UrNkGONDLODX5JAhOUWToeQx0tnH1H4Yi/cfODU
QtdP9pvmvl9+zJvDIab/0FeNGFGHi0q3f9a9EncAkll7vkg4RKVY3/fnlXR4
WCWyzv3hK3tlsAS3A9iYDdwOM/KEmg94STrMmgkCPA65z3+v/Bgk5iB+89z3
4GQJh2qQtqoP9geBtm37/N++dzpIwzf7497mnY4J7A67PHmYtNu/2D8Bm8fv
cH1xgS3X9dv2TglPLyjdfmnvYBoHVCLu8AHoSvPOn/YgXU8vCDrMAaouymCH
uovHAWSLyLrf9mtkQC6WdIDZ5wESPi7uADauUhDqT0EHmL/B5nIKOfiADE4V
dDhZtm++1HoBBzsukEt4HFjC+HQ3zeV3qM/aUzJZgtuBrXGqc3cOF8R/j9kc
ijMmvq2xZ3LYIdf6OnAHjwO/Lsjkf/ZnzwCBjxDUnVIOEP++tQcAtQu6AA==

    "], $CellContext`s$$ = False, $CellContext`save$$ = 
    3, $CellContext`savedMessage$$ = -1, $CellContext`savedPlot$$ = -1, \
$CellContext`savedTime$$ = -1, $CellContext`sr$$ = 123, $CellContext`srTmp$$ =
     123, $CellContext`tia$$ = True, $CellContext`time$$ = Style[
    "Time: 0.0", 12, FontFamily -> "Times"], $CellContext`\[Alpha]$$ = 
    1., $CellContext`\[Beta]$$ = 3., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Style["random seed", 9]], Manipulate`Dump`ThisIsNotAControl, 
      ControlType -> None}, {{
       Hold[$CellContext`sr$$], 123, ""}, 1, 200, 1, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`mode$$], 1, ""}, {
      1 -> "new", 2 -> "run", 3 -> "stop"}, ControlType -> SetterBar}, {{
       Hold[$CellContext`nodes$$], 25, "cities"}, {16, 20, 25, 30, 40, 50}, 
      ControlType -> PopupMenu}, {{
       Hold[$CellContext`nAnts$$], 25, "ants"}, 10, 200, 5, ControlType -> 
      Manipulator}, {
      Hold[
       Style["elite ants (%)", 9]], Manipulate`Dump`ThisIsNotAControl, 
      ControlType -> None}, {{
       Hold[$CellContext`eliteAnts$$], 10, ""}, {
      0.5, 1, 2, 3, 4, 5, 8, 10, 15, 20, 30, 50, 80, 100}, ControlType -> 
      PopupMenu}, {
      Hold[
       Style["candidate list:", 9]], Manipulate`Dump`ThisIsNotAControl, 
      ControlType -> None}, {{
       Hold[$CellContext`nCand$$], 16, 
       Style["m", 9]}, {
      0 -> "All", 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 8, 9 -> 
       9, 10 -> 10, 11 -> 11, 12 -> 12, 14 -> 14, 16 -> 16, 18 -> 18, 20 -> 
       20, 25 -> 25}, ControlType -> PopupMenu}, {{
       Hold[$CellContext`tia$$], True, "TIA"}, {True, False}, ControlType -> 
      Checkbox}, {{
       Hold[$CellContext`mmas$$], False, "MMAS"}, {True, False}, ControlType -> 
      Checkbox}, {
      Hold[
       Style["pheromone:\n", 9]], Manipulate`Dump`ThisIsNotAControl, 
      ControlType -> None}, {
      Hold[
       Style["    evaporation", 9]], Manipulate`Dump`ThisIsNotAControl, 
      ControlType -> None}, {{
       Hold[$CellContext`evapFac$$], 0.98, ""}, 0.8, 1., 0.01, ControlType -> 
      Manipulator}, {
      Hold[
       Style["    initial level", 9]], Manipulate`Dump`ThisIsNotAControl, 
      ControlType -> None}, {{
       Hold[$CellContext`initPh$$], 1., ""}, 0.1, 5., 0.1, ControlType -> 
      Manipulator}, {
      Hold[
       Style["    min/max ratio", 9]], Manipulate`Dump`ThisIsNotAControl, 
      ControlType -> None}, {{
       Hold[$CellContext`phMinMaxRatio$$], 0.01, ""}, 0.001, 0.04, 0.001, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`\[Alpha]$$], 1., "\[Alpha]"}, 0., 5., 0.1, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`\[Beta]$$], 3., "\[Beta]"}, 0., 5., 0.1, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`save$$], 3, ""}, {1 -> "save", 2 -> "toggle"}, 
      ControlType -> SetterBar}, {{
       Hold[$CellContext`srTmp$$], -1}, ControlType -> None}, {{
       Hold[$CellContext`nodesTmp$$], 25}, ControlType -> None}, {{
       Hold[$CellContext`mmasTmp$$], False}, ControlType -> None}, {{
       Hold[$CellContext`pts$$], -1}, ControlType -> None}, {{
       Hold[$CellContext`time$$], -1}, ControlType -> None}, {{
       Hold[$CellContext`currentPlot$$], -1}, ControlType -> None}, {{
       Hold[$CellContext`message$$], -1}, ControlType -> None}, {{
       Hold[$CellContext`savedTime$$], -1}, ControlType -> None}, {{
       Hold[$CellContext`savedMessage$$], -1}, ControlType -> None}, {{
       Hold[$CellContext`savedPlot$$], -1}, ControlType -> None}, {{
       Hold[$CellContext`s$$], -1}, ControlType -> None}}, Typeset`size$$ = {
    220., {122.10390625, 125.08046875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`currentPlot$$ = -1, \
$CellContext`eliteAnts$$ = 10, $CellContext`evapFac$$ = 
        0.98, $CellContext`initPh$$ = 
        1., $CellContext`message$$ = -1, $CellContext`mmas$$ = 
        False, $CellContext`mmasTmp$$ = False, $CellContext`mode$$ = 
        1, $CellContext`nAnts$$ = 25, $CellContext`nCand$$ = 
        16, $CellContext`nodes$$ = 25, $CellContext`nodesTmp$$ = 
        25, $CellContext`phMinMaxRatio$$ = 
        0.01, $CellContext`pts$$ = -1, $CellContext`s$$ = -1, \
$CellContext`save$$ = 
        3, $CellContext`savedMessage$$ = -1, $CellContext`savedPlot$$ = -1, \
$CellContext`savedTime$$ = -1, $CellContext`sr$$ = 
        123, $CellContext`srTmp$$ = -1, $CellContext`tia$$ = 
        True, $CellContext`time$$ = -1, $CellContext`\[Alpha]$$ = 
        1., $CellContext`\[Beta]$$ = 3.}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, 
      "Body" :> (
       If[$CellContext`srTmp$$ != $CellContext`sr$$, 
         SeedRandom[$CellContext`sr$$]; $CellContext`mode$$ = 
          1; $CellContext`srTmp$$ = $CellContext`sr$$]; 
       If[$CellContext`nodes$$ != $CellContext`nodesTmp$$, \
$CellContext`mode$$ = 1; $CellContext`nodesTmp$$ = $CellContext`nodes$$]; 
       If[$CellContext`mmas$$, $CellContext`nAnts$$ = $CellContext`nodes$$]; 
       If[
         And[$CellContext`mmas$$, $CellContext`mmas$$ != \
$CellContext`mmasTmp$$], $CellContext`nAnts$$ = $CellContext`nodes$$; \
$CellContext`\[Alpha]$$ = 1; $CellContext`\[Beta]$$ = 3; $CellContext`nCand$$ = 
          20; $CellContext`evapFac$$ = 
          0.98; $CellContext`mmasTmp$$ = $CellContext`mmas$$]; 
       Which[$CellContext`mode$$ == 1, $CellContext`pts$$ = Round[
            RandomSample[
             Union[
              RandomReal[{0.2, 6.8}, {100, 2}]], $CellContext`nodes$$], 
            0.001]; $CellContext`time$$ = 
          Style["Time: 0.0", 12, FontFamily -> 
            "Times"]; $CellContext`currentPlot$$ = Graphics[{Yellow, 
             PointSize[0.018], 
             Point[$CellContext`pts$$]}, Background -> GrayLevel[0.8], 
            ImageSize -> 440, PlotRange -> {{0, 7}, {0, 7}}, ImagePadding -> 
            1, PlotLabel -> 
            Style["Adjust parameters", 12]]; $CellContext`message$$ = 
          Style["Click \"run\" to start", 12, FontFamily -> 
            "Times"]; $CellContext`s$$ = False; $CellContext`mode$$ = 
          4, $CellContext`mode$$ == 2, $CellContext`s$$ = False; 
         Module[{$CellContext`ants$, $CellContext`antsPlot$, \
$CellContext`commonEdges$, $CellContext`cycleEdges$, \
$CellContext`cycleLengths$, $CellContext`cycles$, $CellContext`high$, \
$CellContext`iterationBest$, $CellContext`l1$, $CellContext`l2$, \
$CellContext`label$, $CellContext`loop$ = 
            0, $CellContext`low$, $CellContext`maxLim$ = 
            2 $CellContext`nodes$$, $CellContext`minLim$ = \
$CellContext`nodes$$ $CellContext`nodes$$ - 
             2 $CellContext`nodes$$, $CellContext`newCycles$, \
$CellContext`phMax$, $CellContext`phMin$, $CellContext`start$, \
$CellContext`optimalTour$, $CellContext`edgesAsPairs$ = Flatten[
              
              Table[{$CellContext`i, $CellContext`j}, {$CellContext`i, 
                1, $CellContext`nodes$$ - 1}, {$CellContext`j, $CellContext`i + 
                1, $CellContext`nodes$$}], 1], $CellContext`edgeSegments$ = 
            Map[Part[$CellContext`pts$$, {
                Part[#, 1], 
                Part[#, 2]}]& , 
              Flatten[
               
               Table[{$CellContext`i, $CellContext`j}, {$CellContext`i, 
                 1, $CellContext`nodes$$ - 
                 1}, {$CellContext`j, $CellContext`i + 
                 1, $CellContext`nodes$$}], 1]], $CellContext`nElite$ = Max[
              Ceiling[$CellContext`nAnts$$ ($CellContext`eliteAnts$$/100)], 
              1], $CellContext`globalBest$ = 
            100., $CellContext`globalBestCycle$ = {
             100., {}}, $CellContext`MMASphMinMaxRatio$, \
$CellContext`phMatrix$, $CellContext`updateAnt$, $CellContext`updateAntCand$, \
$CellContext`prob$, $CellContext`depositPheromone$, $CellContext`TIA$, \
$CellContext`nbh$, $CellContext`nnb$, $CellContext`WAM$ = Table[
              EuclideanDistance[
               Part[$CellContext`pts$$, $CellContext`i], 
               Part[$CellContext`pts$$, $CellContext`j]], {$CellContext`i, 
               1, $CellContext`nodes$$}, {$CellContext`j, 
               1, $CellContext`nodes$$}], $CellContext`cityPlot$ = 
            Graphics[{Yellow, 
               PointSize[0.018], 
               Point[$CellContext`pts$$]}]}, $CellContext`updateAnt$[
              Pattern[$CellContext`path$, 
               Blank[]]] := 
            If[Length[$CellContext`path$] < $CellContext`nodes$$, 
              With[{$CellContext`curr$ = Part[$CellContext`path$, -1]}, 
               $CellContext`updateAnt$[
                Append[$CellContext`path$, 
                 RandomChoice[
                  $CellContext`prob$[$CellContext`curr$, 
                   Complement[
                    
                    Part[$CellContext`nbh$, $CellContext`curr$], \
$CellContext`path$]]]]]], $CellContext`path$]; $CellContext`updateAntCand$[
              Pattern[$CellContext`path$, 
               Blank[]]] := 
            If[Length[$CellContext`path$] < $CellContext`nodes$$, 
              
              With[{$CellContext`curr$ = 
                Part[$CellContext`path$, -1], $CellContext`pos$ = Complement[
                  Part[$CellContext`nnb$, 
                   Part[$CellContext`path$, -1]], $CellContext`path$]}, 
               $CellContext`updateAntCand$[
                If[$CellContext`pos$ == {}, 
                 Append[$CellContext`path$, 
                  RandomChoice[
                   $CellContext`prob$[$CellContext`curr$, 
                    Complement[
                    
                    Part[$CellContext`nbh$, $CellContext`curr$], \
$CellContext`path$]]]], 
                 Append[$CellContext`path$, 
                  RandomChoice[
                   $CellContext`prob$[$CellContext`curr$, \
$CellContext`pos$]]]]]], $CellContext`path$]; $CellContext`prob$[
              Pattern[$CellContext`curr$, 
               Blank[Integer]], 
              Pattern[$CellContext`nbh$, 
               Blank[List]]] := 
            With[{$CellContext`ph$ = 
               Part[$CellContext`phMatrix$, $CellContext`curr$, \
$CellContext`nbh$]^$CellContext`\[Alpha]$$ (1./
                 Part[$CellContext`WAM$, $CellContext`curr$, \
$CellContext`nbh$]^$CellContext`\[Beta]$$)}, $CellContext`ph$/
               Total[$CellContext`ph$] -> $CellContext`nbh$]; \
$CellContext`depositPheromone$[{
               Pattern[$CellContext`tourLength$, 
                Blank[]], 
               Pattern[$CellContext`tourEdges$, 
                Blank[]]}] := 
            With[{$CellContext`p$ = 1./$CellContext`tourLength$}, 
              Scan[(Part[$CellContext`phMatrix$, 
                 Part[#, 2], 
                 Part[#, 1]] = (Part[$CellContext`phMatrix$, 
                  Part[#, 1], 
                  Part[#, 2]] = Part[$CellContext`phMatrix$, 
                   Part[#, 1], 
                   
                   Part[#, 
                    2]] + $CellContext`p$))& , $CellContext`tourEdges$]]; \
$CellContext`TIA$[
              Pattern[$CellContext`cyc$, 
               Blank[]]] := 
            Module[{$CellContext`h$ = $CellContext`cyc$, $CellContext`flag$ = 
               True}, While[$CellContext`flag$, $CellContext`flag$ = False; Do[
                  If[Part[$CellContext`WAM$, 
                    Part[$CellContext`h$, 1], 
                    Part[$CellContext`h$, 3]] + Part[$CellContext`WAM$, 
                    Part[$CellContext`h$, 2], 
                    Part[$CellContext`h$, 4]] < Part[$CellContext`WAM$, 
                    Part[$CellContext`h$, 1], 
                    Part[$CellContext`h$, 2]] + Part[$CellContext`WAM$, 
                    Part[$CellContext`h$, 3], 
                    Part[$CellContext`h$, 4]], $CellContext`h$ = ReplaceAll[
                    RotateLeft[$CellContext`h$, 1], {
                    Pattern[$CellContext`x, 
                    Blank[]], 
                    Pattern[$CellContext`y, 
                    Blank[]], 
                    Pattern[$CellContext`z, 
                    
                    BlankNullSequence[]]} -> {$CellContext`y, $CellContext`x, \
$CellContext`z}]; $CellContext`flag$ = True, $CellContext`h$ = 
                   RotateLeft[$CellContext`h$, 1]], {
                   Length[$CellContext`cyc$]}]]; Append[$CellContext`h$, 
                Part[$CellContext`h$, 1]]]; $CellContext`message$$ = 
            Style["Busy! " <> ToString[$CellContext`nAnts$$] <> 
              " ants on the move. Elite ants: " <> 
              If[$CellContext`mmas$$, "1\[VeryThinSpace] (MMAS)", 
                ToString[$CellContext`nElite$]], 12, FontFamily -> 
              "Times"]; $CellContext`nbh$ = Map[Complement[
               Range[$CellContext`nodes$$], {#}]& , 
              Range[$CellContext`nodes$$]]; 
           If[$CellContext`nCand$$ > 
             0, $CellContext`nnb$ = \
$CellContext`initNNB[$CellContext`nCand$$, $CellContext`nbh$, \
$CellContext`WAM$]]; 
           If[$CellContext`mmas$$, $CellContext`nAnts$$ = \
$CellContext`nodes$$; $CellContext`MMASphMinMaxRatio$ = 
              1./(2 $CellContext`nodes$$); $CellContext`phMatrix$ = 
              Table[100., {$CellContext`r, 
                 1, $CellContext`nodes$$}, {$CellContext`c, 
                 1, $CellContext`nodes$$}], $CellContext`phMatrix$ = 
             Table[$CellContext`initPh$$, {$CellContext`r, 
                1, $CellContext`nodes$$}, {$CellContext`c, 
                1, $CellContext`nodes$$}]]; $CellContext`antsPlot$ = 
            Graphics[{Red, 
               AbsoluteThickness[4], 
               Line[$CellContext`edgeSegments$]}, Background -> 
              GrayLevel[0.8], 
              PlotRange -> {{0, 7}, {0, 7}}]; $CellContext`currentPlot$$ = 
            Show[$CellContext`antsPlot$, $CellContext`cityPlot$, ImageSize -> 
              440, PlotLabel -> 
              Style["Level of convergence: 0.", 12, FontFamily -> 
                "Times"]]; $CellContext`optimalTour$ = \
$CellContext`shortestTour[$CellContext`pts$$]; $CellContext`start$ = 
            AbsoluteTime[]; 
           While[$CellContext`mode$$ == 2, Increment[$CellContext`loop$]; 
             If[$CellContext`nCand$$ > 0, $CellContext`ants$ = 
               Map[$CellContext`updateAntCand$, 
                 Table[{
                   
                   RandomInteger[{
                    1, $CellContext`nodes$$}]}, {$CellContext`nAnts$$}]], \
$CellContext`ants$ = Map[$CellContext`updateAnt$, 
                 Table[{
                   
                   RandomInteger[{
                    1, $CellContext`nodes$$}]}, {$CellContext`nAnts$$}]]]; \
$CellContext`newCycles$ = Map[If[$CellContext`tia$$, 
                 $CellContext`TIA$[#], 
                 Append[#, 
                  
                  Part[#, 
                   1]]]& , $CellContext`ants$]; $CellContext`cycleEdges$ = 
              Map[Partition[#, 2, 
                 1]& , $CellContext`newCycles$]; $CellContext`cycleLengths$ = 
              Map[Round[
                 Total[
                  Extract[$CellContext`WAM$, #]], 
                 0.0001]& , $CellContext`cycleEdges$]; $CellContext`cycles$ = 
              Sort[
                
                Transpose[{$CellContext`cycleLengths$, \
$CellContext`cycleEdges$}]]; $CellContext`phMatrix$ = $CellContext`evapFac$$ \
$CellContext`phMatrix$; If[$CellContext`mmas$$, Which[$CellContext`loop$ < 26, 
                 $CellContext`depositPheromone$[
                  Part[$CellContext`cycles$, 1]], 25 < $CellContext`loop$ < 
                 76, 
                 If[Mod[$CellContext`loop$, 5] == 0, 
                  $CellContext`depositPheromone$[$CellContext`globalBestCycle$\
], 
                  $CellContext`depositPheromone$[
                   Part[$CellContext`cycles$, 1]]], 75 < $CellContext`loop$ < 
                 126, 
                 If[Mod[$CellContext`loop$, 3] == 0, 
                  $CellContext`depositPheromone$[$CellContext`globalBestCycle$\
], 
                  $CellContext`depositPheromone$[
                   Part[$CellContext`cycles$, 1]]], 125 < $CellContext`loop$ < 
                 251, 
                 If[Mod[$CellContext`loop$, 2] == 0, 
                  $CellContext`depositPheromone$[$CellContext`globalBestCycle$\
], 
                  $CellContext`depositPheromone$[
                   Part[$CellContext`cycles$, 1]]], 
                 250 < $CellContext`loop$, 
                 $CellContext`depositPheromone$[$CellContext`globalBestCycle$]\
]; $CellContext`iterationBest$ = 
                Min[$CellContext`cycleLengths$]; $CellContext`globalBest$ = 
                Min[$CellContext`cycleLengths$, $CellContext`globalBest$]; 
               If[$CellContext`globalBest$ < 
                 Part[$CellContext`globalBestCycle$, 
                   1], $CellContext`globalBestCycle$ = 
                 First[$CellContext`cycles$]]; $CellContext`phMax$ = 
                1/((1 - $CellContext`evapFac$$) $CellContext`globalBest$); \
$CellContext`phMin$ = $CellContext`MMASphMinMaxRatio$ $CellContext`phMax$; \
$CellContext`phMatrix$ = 
                ReplaceAll[$CellContext`phMatrix$, Pattern[$CellContext`x$, 
                    Blank[Real]] -> 
                  Min[$CellContext`x$, $CellContext`phMax$]]; \
$CellContext`phMatrix$ = 
                ReplaceAll[$CellContext`phMatrix$, Pattern[$CellContext`x$, 
                    Blank[Real]] -> 
                  Max[$CellContext`x$, $CellContext`phMin$]], 
               Scan[$CellContext`depositPheromone$[#]& , 
                 Part[$CellContext`cycles$, 
                  Span[1, $CellContext`nElite$]]]; $CellContext`phMax$ = 
                Max[$CellContext`phMatrix$]; $CellContext`phMin$ = \
$CellContext`phMinMaxRatio$$ $CellContext`phMax$; $CellContext`phMatrix$ = 
                ReplaceAll[$CellContext`phMatrix$, Pattern[$CellContext`x$, 
                    Blank[Real]] -> 
                  Max[$CellContext`x$, $CellContext`phMin$]]]; \
$CellContext`time$$ = Style["Time: " <> ToString[
                  Round[AbsoluteTime[] - $CellContext`start$, 0.1]], 12, 
                FontFamily -> "Times"]; $CellContext`antsPlot$ = 
              Graphics[{Red, 
                 AbsoluteThickness[4], 
                 MapThread[{
                   Opacity[#^1.2], 
                   Line[#2]}& , {
                  Extract[$CellContext`phMatrix$, $CellContext`edgesAsPairs$]/
                   Max[$CellContext`phMatrix$], $CellContext`edgeSegments$}]},
                 Background -> GrayLevel[0.8], 
                PlotRange -> {{0, 7}, {0, 7}}]; $CellContext`low$ = 
              Count[$CellContext`phMatrix$, 
                Condition[
                 Pattern[$CellContext`x$, 
                  Blank[]], $CellContext`x$ < 0.05 $CellContext`phMax$], 
                2]; $CellContext`high$ = Count[$CellContext`phMatrix$, 
                Condition[
                 Pattern[$CellContext`x$, 
                  Blank[]], $CellContext`x$ > 0.85 $CellContext`phMax$], 2]; 
             If[
               
               Or[$CellContext`low$ < $CellContext`minLim$, \
$CellContext`high$ < $CellContext`maxLim$], $CellContext`currentPlot$$ = 
               Show[$CellContext`antsPlot$, $CellContext`cityPlot$, ImageSize -> 
                 440, PlotLabel -> 
                 Style["Level of convergence: " <> ToString[
                    Floor[
                    Sign[$CellContext`low$] (($CellContext`low$ + \
$CellContext`high$)/$CellContext`nodes$$^2), 0.01]], 12, FontFamily -> 
                   "Times"]], 
               If[($CellContext`l1$ = 
                  Part[$CellContext`optimalTour$, 1]) == ($CellContext`l2$ = 
                  Part[$CellContext`cycles$, 1, 1]), $CellContext`message$$ = 
                 Style["Optimal tour found. Length: " <> 
                   ToString[$CellContext`l1$], 12, FontFamily -> 
                   "Times"], $CellContext`commonEdges$ = Length[
                    Intersection[
                    Map[Sort, 
                    Partition[
                    Part[$CellContext`optimalTour$, 2], 2, 1]], 
                    Map[Sort, 
                    Part[$CellContext`cycles$, 1, 2]]]]; $CellContext`time$$ = 
                  Style["Time: " <> ToString[
                    Round[AbsoluteTime[] - $CellContext`start$, 0.1]] <> 
                    ". Common edges: " <> ToString[$CellContext`commonEdges$],
                     12, FontFamily -> "Times"]; $CellContext`message$$ = 
                  Style["Optimal tour (--): " <> ToString[$CellContext`l1$] <> 
                    ". Ants tour: " <> ToString[$CellContext`l2$], 12, 
                    FontFamily -> "Times"]]; $CellContext`label$ = 
                If[$CellContext`l1$ == $CellContext`l2$, "Great Job!", 
                  "Not optimal"]; $CellContext`currentPlot$$ = 
                Show[$CellContext`antsPlot$, 
                  Graphics[{Dashed, 
                    Line[
                    Part[$CellContext`pts$$, 
                    
                    Part[$CellContext`optimalTour$, 
                    2]]]}], $CellContext`cityPlot$, ImageSize -> 440, 
                  PlotLabel -> 
                  Style[$CellContext`label$, 12, FontFamily -> 
                    "Times"]]; $CellContext`mode$$ = 
                4]]], $CellContext`mode$$ == 3, $CellContext`currentPlot$$ = 
         Show[
           Graphics[{Yellow, 
             PointSize[0.018], 
             Point[$CellContext`pts$$]}, Background -> GrayLevel[0.8], 
            ImageSize -> 440, PlotRange -> {{0, 7}, {0, 7}}], PlotLabel -> 
           Style["Adjust parameters", 12]], $CellContext`mode$$ == 4, True]; 
       Which[$CellContext`save$$ == 
         1, $CellContext`savedTime$$ = $CellContext`time$$; \
$CellContext`savedMessage$$ = $CellContext`message$$; \
$CellContext`savedPlot$$ = $CellContext`currentPlot$$; $CellContext`s$$ = 
          False; $CellContext`save$$ = 3, $CellContext`save$$ == 
         2, {$CellContext`currentPlot$$, $CellContext`savedPlot$$} = \
{$CellContext`savedPlot$$, $CellContext`currentPlot$$}; \
{$CellContext`message$$, $CellContext`savedMessage$$} = \
{$CellContext`savedMessage$$, $CellContext`message$$}; {$CellContext`time$$, \
$CellContext`savedTime$$} = {$CellContext`savedTime$$, $CellContext`time$$}; \
$CellContext`s$$ = Not[$CellContext`s$$]; $CellContext`save$$ = 
          3, $CellContext`save$$ == 3, True]; $CellContext`mode$$ = 4; Pane[
         Column[{
           Dynamic[$CellContext`currentPlot$$], 
           Dynamic[$CellContext`message$$], 
           Dynamic[$CellContext`time$$]}], 
         BaseStyle -> {Background -> If[$CellContext`s$$, Green, 
             GrayLevel[0.8]]}]), "Specifications" :> {
        Style[
        "random seed", 9], {{$CellContext`sr$$, 123, ""}, 1, 200, 1, 
         Appearance -> "Labeled", ImageSize -> Tiny, AppearanceElements -> 
         "InputField", Enabled -> 
         Dynamic[$CellContext`mode$$ != 2]}, {{$CellContext`mode$$, 1, ""}, {
         1 -> "new", 2 -> "run", 3 -> "stop"}}, {{$CellContext`nodes$$, 25, 
          "cities"}, {16, 20, 25, 30, 40, 50}, Enabled -> 
         Dynamic[$CellContext`mode$$ != 2]}, 
        Delimiter, {{$CellContext`nAnts$$, 25, "ants"}, 10, 200, 5, ImageSize -> 
         Tiny, Appearance -> "Labeled", AppearanceElements -> None, Enabled -> 
         Dynamic[
           And[
            Not[$CellContext`mmas$$], $CellContext`mode$$ != 2]]}, Delimiter, 
        
        Style[
        "elite ants (%)", 9], {{$CellContext`eliteAnts$$, 10, ""}, {
         0.5, 1, 2, 3, 4, 5, 8, 10, 15, 20, 30, 50, 80, 100}, Enabled -> 
         Dynamic[
           And[
            Not[$CellContext`mmas$$], $CellContext`mode$$ != 2]]}, Delimiter, 
        
        Style["candidate list:", 9], {{$CellContext`nCand$$, 16, 
          Style["m", 9]}, {
         0 -> "All", 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 8, 
          9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 14 -> 14, 16 -> 16, 18 -> 18, 
          20 -> 20, 25 -> 25}, Enabled -> Dynamic[$CellContext`mode$$ != 2]}, 
        Delimiter, {{$CellContext`tia$$, True, "TIA"}, {True, False}, Enabled -> 
         Dynamic[$CellContext`mode$$ != 2]}, {{$CellContext`mmas$$, False, 
          "MMAS"}, {True, False}, Enabled -> 
         Dynamic[$CellContext`mode$$ != 2]}, Delimiter, 
        Style["pheromone:\n", 9], 
        Style[
        "    evaporation", 9], {{$CellContext`evapFac$$, 0.98, ""}, 0.8, 1., 
         0.01, ImageSize -> Tiny, Appearance -> "Labeled", AppearanceElements -> 
         None, Enabled -> Dynamic[$CellContext`mode$$ != 2]}, 
        Style[
        "    initial level", 9], {{$CellContext`initPh$$, 1., ""}, 0.1, 5., 
         0.1, ImageSize -> Tiny, Appearance -> "Labeled", AppearanceElements -> 
         None, Enabled -> Dynamic[
           And[
            Not[$CellContext`mmas$$], $CellContext`mode$$ != 2]]}, 
        Style[
        "    min/max ratio", 9], {{$CellContext`phMinMaxRatio$$, 0.01, ""}, 
         0.001, 0.04, 0.001, ImageSize -> Tiny, Appearance -> "Labeled", 
         AppearanceElements -> None, Enabled -> Dynamic[
           And[
            Not[$CellContext`mmas$$], $CellContext`mode$$ != 2]]}, 
        Delimiter, {{$CellContext`\[Alpha]$$, 1., "\[Alpha]"}, 0., 5., 0.1, 
         ImageSize -> Tiny, Appearance -> "Labeled", AppearanceElements -> 
         None, Enabled -> 
         Dynamic[$CellContext`mode$$ != 2]}, {{$CellContext`\[Beta]$$, 3., 
          "\[Beta]"}, 0., 5., 0.1, ImageSize -> Tiny, Appearance -> "Labeled",
          AppearanceElements -> None, Enabled -> 
         Dynamic[$CellContext`mode$$ != 2]}, 
        Delimiter, {{$CellContext`save$$, 3, ""}, {
         1 -> "save", 2 -> "toggle"}, Enabled -> 
         Dynamic[$CellContext`mode$$ != 2]}, {{$CellContext`srTmp$$, -1}, 
         ControlType -> None}, {{$CellContext`nodesTmp$$, 25}, ControlType -> 
         None}, {{$CellContext`mmasTmp$$, False}, ControlType -> 
         None}, {{$CellContext`pts$$, -1}, ControlType -> 
         None}, {{$CellContext`time$$, -1}, ControlType -> 
         None}, {{$CellContext`currentPlot$$, -1}, ControlType -> 
         None}, {{$CellContext`message$$, -1}, ControlType -> 
         None}, {{$CellContext`savedTime$$, -1}, ControlType -> 
         None}, {{$CellContext`savedMessage$$, -1}, ControlType -> 
         None}, {{$CellContext`savedPlot$$, -1}, ControlType -> 
         None}, {{$CellContext`s$$, -1}, ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, TrackedSymbols -> True, 
        AutorunSequencing -> {3}}, "DefaultOptions" :> {}],
     ImageSizeCache->{315.20703125, {147.66142578125, 150.63798828125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`shortestTour[
         Pattern[$CellContext`pts, 
          Blank[]]] := 
       Module[{$CellContext`ln, $CellContext`cyc}, {$CellContext`ln, \
$CellContext`cyc} = FindShortestTour[$CellContext`pts]; Return[{
            Round[$CellContext`ln, 0.0001], 
            Append[$CellContext`cyc, 
             Part[$CellContext`cyc, 1]]}]]; $CellContext`initNNB[
         Pattern[$CellContext`cand, 
          Blank[]], 
         Pattern[$CellContext`nbh, 
          Blank[]], 
         Pattern[$CellContext`wam, 
          Blank[]]] := 
       Module[{$CellContext`tmpNNB, $CellContext`tmpMX, $CellContext`n = 
          Length[$CellContext`wam]}, Scan[($CellContext`tmpNNB[#] = Nearest[
             Part[$CellContext`nbh, #], #, $CellContext`cand, 
             DistanceFunction -> (Part[$CellContext`wam, #, #2]& )])& , 
           Range[$CellContext`n]]; $CellContext`tmpMX = 
          Table[0, {$CellContext`r, 1, $CellContext`n}, {$CellContext`c, 
             1, $CellContext`n}]; Scan[(Part[$CellContext`tmpMX, 
             Part[#, 1], 
             Part[#, 2]] = 1)& , 
           Union[
            Flatten[
             Map[Union[
               Tuples[{{#}, 
                 $CellContext`tmpNNB[#]}], 
               Tuples[{
                 $CellContext`tmpNNB[#], {#}}]]& , 
              Range[$CellContext`n]], 1]]]; Map[Flatten[
            Position[
             Part[$CellContext`tmpMX, #], 1]]& , 
           Range[$CellContext`n]]]); Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9608315400126266`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"b467889c-e2a3-419b-acfe-d50064a426e4"]
}, Open  ]]
},
WindowSize->{1080, 625.5},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.5 Inherited,
FrontEndVersion->"14.2 for Linux x86 (64-bit) (March 16, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f5c68317-0e4c-44ea-b5b9-2b33e6a1e5d1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 1604, 31, 18, "Input",ExpressionUUID->"d3a268e7-f89f-41b9-9678-d994901b8b94"],
Cell[2183, 55, 240938, 4005, 218, "Output",ExpressionUUID->"b290da0a-dffa-44b9-9cd9-5f231d7a37de"]
}, Open  ]],
Cell[243136, 4063, 209, 4, 24, "Input",ExpressionUUID->"55d700a8-fedd-4da6-9a05-6ad9e18be7e6"],
Cell[CellGroupData[{
Cell[243370, 4071, 55959, 1313, 1901, "Input",ExpressionUUID->"6f0f65b8-45b7-4056-a9d0-5cc339e79209"],
Cell[299332, 5386, 31279, 596, 306, "Output",ExpressionUUID->"b467889c-e2a3-419b-acfe-d50064a426e4"]
}, Open  ]]
}
]
*)

