(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[      6040,        173]
NotebookOptionsPosition[      5595,        158]
NotebookOutlinePosition[      5987,        174]
CellTagsIndexPosition[      5944,        171]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", "\n", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"target", "=", 
       RowBox[{"weightedRandomTarget", "[", 
        RowBox[{"baseWord", ",", "testList"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"targetWords", ",", "target"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"baseWord", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"evolveTowardWeighted", "[", 
          RowBox[{"baseWord", ",", "target"}], "]"}], ",", 
         RowBox[{"\"\<_\>\"", "->", "\"\<\>\""}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"baseWord", "=", 
         RowBox[{"randomMutation", "[", 
          RowBox[{"baseWord", ",", "0.1"}], "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"baseWordStates", ",", "baseWord"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"currentDistance", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"wordDifference", "[", 
           RowBox[{"baseWord", ",", "#"}], "]"}], "&"}], "/@", "testList"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"currentDistance", "<", "bestDistance"}], ",", 
        RowBox[{
         RowBox[{"bestDistance", "=", "currentDistance"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"bestWord", "=", "baseWord"}], ";"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"gen", ",", "1", ",", "GENERATIONS"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"bestWord", "=", 
    RowBox[{"StringReplace", "[", 
     RowBox[{"bestWord", ",", 
      RowBox[{"\"\<_\>\"", "->", "\"\<\>\""}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Best word found: \>\"", ",", "bestWord"}], "]"}], ";", "\n", 
   
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Best average distance: \>\"", ",", 
     RowBox[{"N", "[", "bestDistance", "]"}]}], "]"}], ";", "\n", "\n", 
   RowBox[{"testPositions", "=", 
    RowBox[{"layoutTestWords", "[", 
     RowBox[{
      RowBox[{"baseWordStates", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "testList"}], "]"}]}], ";", "\n", 
   
   RowBox[{"positionDict", "=", 
    RowBox[{"Association", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "&"}], "/@", 
      "testPositions"}], "]"}]}], ";"}], "*)"}]], "Input",ExpressionUUID->\
"ece22af2-95f5-4661-bb85-613dd3a75557"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"layoutTestWords", "[", 
     RowBox[{"baseWord_", ",", "testList_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"angles", ",", "positions", ",", "dist", ",", "x", ",", "y"}], 
       "}"}], ",", 
      RowBox[{
       RowBox[{"angles", "=", 
        RowBox[{
         RowBox[{"Subdivide", "[", 
          RowBox[{"0", ",", 
           RowBox[{"2", "*", "Pi"}], ",", 
           RowBox[{"Length", "[", "testList", "]"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"positions", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"dist", "=", 
           RowBox[{"wordDifference", "[", 
            RowBox[{"baseWord", ",", 
             RowBox[{"testList", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"x", "=", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"angles", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "*", "dist"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"y", "=", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"angles", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "*", "dist"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"positions", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"testList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "x", ",", "y"}], "}"}]}], 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "testList", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "positions"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input",ExpressionUUID->"f2283dd5-79b0-4a7b-a940-f949b0cd8611"]
},
WindowSize->{1080, 625.5},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.2 for Linux x86 (64-bit) (March 16, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"4dee23b2-7cbb-43c0-9b3c-2193940bdf95"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[554, 20, 2947, 79, 373, "Input",ExpressionUUID->"ece22af2-95f5-4661-bb85-613dd3a75557"],
Cell[3504, 101, 2087, 55, 149, "Input",ExpressionUUID->"f2283dd5-79b0-4a7b-a940-f949b0cd8611"]
}
]
*)

